%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 327 575 464
%%Creator: yExport 1.2
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, December 6, 2011 12:27:39 PM CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
668 164 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
668.000 0.00000 l
668.000 164.000 l
0.00000 164.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 668 164 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -157.000 -1510.00 ] concat
1.00000 1.00000 1.00000 RG
newpath
157.000 1510.00 m
825.000 1510.00 l
825.000 1674.00 l
157.000 1674.00 l
157.000 1510.00 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -157.000 -1510.00 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -157.000 -1510.00 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -157.000 -1510.00 ] defaultmatrix matrix concatmatrix setmatrix
q
q
[ 139.000 0.00000 0.00000 75.0000 164.420 1517.72 ] concat
<<
/ImageType 1
/Width 139  /Height 75
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [139 0 0 75 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/l>u)A)(e4Q*s(ObK)GRiF$Ak';5uq+r,"/f>TH`*!:RK3lHc(:hI:Jmj^QWmPn*IuNg"0:KKFgHU
nNL),(-g^O+gS@.\QG"X%;W\j]ZfR1V^4-]%Asf1=N,.B7W)sCK[h+b*[[(B*67+0pq+TO%P`f9XPt#5
GYSj,Vk0NQ+!2Tnmd<Q>d9nZlom5G3pRB5.%P`6OFbNgf@2R<^)_jO@j]QW1<"qd'<iaV]eEce2+r`M[
,X+;\:;>\!VXTQ37!fr$,La^"0K<JXZ=^LJX]-cWQ@'H^E<7k?E,\(DG.UHnjp9`-&!7eQG0$/B)eOjd
^@1OWm$,]Tc-=L/+r`M[,X/JZFEDVRIXZ]nNGXDZrBT_,e*3+e@1m;!C8Fh-:ag]*R40]'-W^!9pRBDS
0+lJ<3+$`nA(EUBZG0[O?F!cjNtc6O%jF7-M,hmnJfs"(^b1E6o`MHFE]i8Gp,D\=#*\]ZqJU[]&;\#[
[h<U'NclBWE1Slt&+[43r=)eYGR[q`>UY[k'Z`6@A/kb.NWL(gJW-?h`_dl=.$/E_a>aN;*!J*X!Z=LZ
N2&YX+V7Z\FEi$I7?IXS6\12k5fQYDj!^"/'Z`6@A/kb.NWL(gs%+o)!Z=LZN2&YX;'=mIODtuU3!s19
"Yu)>)+T7:UHlgr+QFl3E>6JR$=k+[16)DR7tHV_4]!-=mP6*7o2nV9o#1dla6tWZ@N6!a>$XXAI!k;X
rmoY$Yuju#]YGdVZ!+,+)N@4if1U3+g$1o=iGa$fH<RB"G'A/P]s4h>'R>4#Ht'KeXgVE8U_in+FsU`3
"FGKBXL>gU>o%^98UP!42b9jq)3%+BY/G^9HO[MYA^AZIBZ(mq+=$--Cu>kgpnUY%L5ZY7'4!*")PYo$
`nnd+a"a@FDP*Gh"AA#(/_K*[K1UHr47W42G`^ogAiE,\&_l@5m4Fb&rP#nu>\!kjR)C@j&8&u58U(!C
qeuY8$Pp:f^NX#i&D=lFB/$Eu00#c.ZYJR8GeuK]1Zfkl0^6<QiP'l+]$?qQ6seph70k&i&H=>s!7aEo
8,~>
Q
157.000 1551.69 668.000 122.311 rc
1.00000 1.00000 1.00000 RG
newpath
172.420 1529.72 m
172.420 1576.67 l
172.420 1578.88 174.211 1580.67 176.420 1580.67  c
286.540 1580.67 l
288.749 1580.67 290.540 1578.88 290.540 1576.67  c
290.540 1529.72 l
290.540 1527.51 288.749 1525.72 286.540 1525.72  c
176.420 1525.72 l
174.211 1525.72 172.420 1527.51 172.420 1529.72  c
h
f
cliprestore
newpath
157.000 1510.00 m
157.000 1674.00 l
825.000 1674.00 l
825.000 1510.00 l
h
W
157.000 1510.00 668.000 41.6885 rc
.752941 .752941 .752941 RG
newpath
172.420 1529.72 m
172.420 1576.67 l
172.420 1578.88 174.211 1580.67 176.420 1580.67  c
286.540 1580.67 l
288.749 1580.67 290.540 1578.88 290.540 1576.67  c
290.540 1529.72 l
290.540 1527.51 288.749 1525.72 286.540 1525.72  c
176.420 1525.72 l
174.211 1525.72 172.420 1527.51 172.420 1529.72  c
h
f
1.00000 1.00000 1.00000 RG
cliprestore
newpath
157.000 1510.00 m
157.000 1674.00 l
825.000 1674.00 l
825.000 1510.00 l
h
W
0 J
1.45000 M
.600000 .600000 .600000 RG
newpath
172.420 1529.72 m
172.420 1576.67 l
172.420 1578.88 174.211 1580.67 176.420 1580.67  c
286.540 1580.67 l
288.749 1580.67 290.540 1578.88 290.540 1576.67  c
290.540 1529.72 l
290.540 1527.51 288.749 1525.72 286.540 1525.72  c
176.420 1525.72 l
174.211 1525.72 172.420 1527.51 172.420 1529.72  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
172.420 1551.69 m
290.540 1551.69 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
211.275 1534.11 m
218.666 1534.11 l
218.666 1535.11 l
215.572 1535.11 l
215.572 1542.86 l
214.385 1542.86 l
214.385 1535.11 l
211.275 1535.11 l
211.275 1534.11 l
h
218.605 1534.11 m
225.996 1534.11 l
225.996 1535.11 l
222.902 1535.11 l
222.902 1542.86 l
221.715 1542.86 l
221.715 1535.11 l
218.605 1535.11 l
218.605 1534.11 l
h
230.076 1539.56 m
229.211 1539.56 228.610 1539.66 228.271 1539.86  c
227.933 1540.06 227.764 1540.39 227.764 1540.87  c
227.764 1541.26 227.891 1541.56 228.146 1541.79  c
228.402 1542.01 228.743 1542.12 229.170 1542.12  c
229.774 1542.12 230.256 1541.91 230.615 1541.49  c
230.974 1541.07 231.154 1540.50 231.154 1539.80  c
231.154 1539.56 l
230.076 1539.56 l
h
232.232 1539.11 m
232.232 1542.86 l
231.154 1542.86 l
231.154 1541.86 l
230.904 1542.25 230.597 1542.55 230.232 1542.74  c
229.868 1542.93 229.420 1543.03 228.889 1543.03  c
228.211 1543.03 227.675 1542.84 227.279 1542.46  c
226.883 1542.08 226.685 1541.58 226.685 1540.95  c
226.685 1540.21 226.933 1539.66 227.428 1539.28  c
227.922 1538.91 228.659 1538.72 229.639 1538.72  c
231.154 1538.72 l
231.154 1538.61 l
231.154 1538.11 230.990 1537.72 230.662 1537.45  c
230.334 1537.18 229.878 1537.05 229.295 1537.05  c
228.920 1537.05 228.553 1537.09 228.193 1537.19  c
227.834 1537.28 227.493 1537.42 227.170 1537.59  c
227.170 1536.59 l
227.566 1536.44 227.948 1536.32 228.318 1536.25  c
228.688 1536.18 229.050 1536.14 229.404 1536.14  c
230.352 1536.14 231.060 1536.38 231.529 1536.87  c
231.998 1537.36 232.232 1538.11 232.232 1539.11  c
h
239.164 1539.58 m
239.164 1538.79 239.000 1538.17 238.672 1537.72  c
238.344 1537.27 237.898 1537.05 237.336 1537.05  c
236.763 1537.05 236.312 1537.27 235.984 1537.72  c
235.656 1538.17 235.492 1538.79 235.492 1539.58  c
235.492 1540.37 235.656 1540.99 235.984 1541.44  c
236.312 1541.90 236.763 1542.12 237.336 1542.12  c
237.898 1542.12 238.344 1541.90 238.672 1541.44  c
239.000 1540.99 239.164 1540.37 239.164 1539.58  c
h
235.492 1537.30 m
235.721 1536.90 236.008 1536.61 236.351 1536.42  c
236.695 1536.23 237.107 1536.14 237.586 1536.14  c
238.388 1536.14 239.039 1536.45 239.539 1537.09  c
240.039 1537.72 240.289 1538.55 240.289 1539.58  c
240.289 1540.61 240.039 1541.44 239.539 1542.08  c
239.039 1542.71 238.388 1543.03 237.586 1543.03  c
237.107 1543.03 236.695 1542.93 236.351 1542.74  c
236.008 1542.55 235.721 1542.26 235.492 1541.87  c
235.492 1542.86 l
234.414 1542.86 l
234.414 1533.73 l
235.492 1533.73 l
235.492 1537.30 l
h
242.062 1533.73 m
243.141 1533.73 l
243.141 1542.86 l
242.062 1542.86 l
242.062 1533.73 l
h
251.021 1539.31 m
251.021 1539.83 l
246.053 1539.83 l
246.105 1540.58 246.331 1541.14 246.732 1541.53  c
247.133 1541.92 247.688 1542.11 248.396 1542.11  c
248.813 1542.11 249.217 1542.06 249.607 1541.96  c
249.998 1541.86 250.386 1541.71 250.771 1541.50  c
250.771 1542.53 l
250.376 1542.69 249.974 1542.81 249.568 1542.90  c
249.162 1542.99 248.751 1543.03 248.334 1543.03  c
247.292 1543.03 246.464 1542.73 245.849 1542.12  c
245.235 1541.51 244.928 1540.68 244.928 1539.64  c
244.928 1538.57 245.219 1537.72 245.803 1537.09  c
246.386 1536.45 247.167 1536.14 248.146 1536.14  c
249.032 1536.14 249.732 1536.42 250.248 1536.99  c
250.764 1537.56 251.021 1538.33 251.021 1539.31  c
h
249.943 1538.98 m
249.933 1538.40 249.766 1537.93 249.443 1537.58  c
249.120 1537.22 248.693 1537.05 248.162 1537.05  c
247.558 1537.05 247.076 1537.22 246.717 1537.56  c
246.357 1537.91 246.152 1538.38 246.099 1539.00  c
249.943 1538.98 l
h
f
2 J
10.0000 M
Q
q
q
[ 139.000 0.00000 0.00000 75.0000 337.364 1517.72 ] concat
<<
/ImageType 1
/Width 139  /Height 75
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [139 0 0 75 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/l>u)A)(e4Q*s(ObK)GRiF$Ak';5uq+r,"/f>TH`*!:RK3lHc(:hI:Jmj^QWmPn*IuNg"0:KKFgHU
nNL),(-g^O+gS@.\QG"X%;W\j]ZfR1V^4-]%Asf1=N,.B7W)sCK[h+b*[[(B*67+0pq+TO%P`f9XPt#5
GYSj,Vk0NQ+!2Tnmd<Q>d9nZlom5G3pRB5.%P`6OFbNgf@2R<^)_jO@j]QW1<"qd'<iaV]eEce2+r`M[
,X+;\:;>\!VXTQ37!fr$,La^"0K<JXZ=^LJX]-cWQ@'H^E<7k?E,\(DG.UHnjp9`-&!7eQG0$/B)eOjd
^@1OWm$,]Tc-=L/+r`M[,X/JZFEDVRIXZ]nNGXDZrBT_,e*3+e@1m;!C8Fh-:ag]*R40]'-W^!9pRBDS
0+lJ<3+$`nA(EUBZG0[O?F!cjNtc6O%jF7-M,hmnJfs"(^b1E6o`MHFE]i8Gp,D\=#*\]ZqJU[]&;\#[
[h<U'NclBWE1Slt&+[43r=)eYGR[q`>UY[k'Z`6@A/kb.NWL(gJW-?h`_dl=.$/E_a>aN;*!J*X!Z=LZ
N2&YX+V7Z\FEi$I7?IXS6\12k5fQYDj!^"/'Z`6@A/kb.NWL(gs%+o)!Z=LZN2&YX;'=mIODtuU3!s19
"Yu)>)+T7:UHlgr+QFl3E>6JR$=k+[16)DR7tHV_4]!-=mP6*7o2nV9o#1dla6tWZ@N6!a>$XXAI!k;X
rmoY$Yuju#]YGdVZ!+,+)N@4if1U3+g$1o=iGa$fH<RB"G'A/P]s4h>'R>4#Ht'KeXgVE8U_in+FsU`3
"FGKBXL>gU>o%^98UP!42b9jq)3%+BY/G^9HO[MYA^AZIBZ(mq+=$--Cu>kgpnUY%L5ZY7'4!*")PYo$
`nnd+a"a@FDP*Gh"AA#(/_K*[K1UHr47W42G`^ogAiE,\&_l@5m4Fb&rP#nu>\!kjR)C@j&8&u58U(!C
qeuY8$Pp:f^NX#i&D=lFB/$Eu00#c.ZYJR8GeuK]1Zfkl0^6<QiP'l+]$?qQ6seph70k&i&H=>s!7aEo
8,~>
Q
157.000 1551.69 668.000 122.311 rc
1.00000 1.00000 1.00000 RG
newpath
345.364 1529.72 m
345.364 1576.67 l
345.364 1578.88 347.155 1580.67 349.364 1580.67  c
459.484 1580.67 l
461.693 1580.67 463.484 1578.88 463.484 1576.67  c
463.484 1529.72 l
463.484 1527.51 461.693 1525.72 459.484 1525.72  c
349.364 1525.72 l
347.155 1525.72 345.364 1527.51 345.364 1529.72  c
h
f
cliprestore
newpath
157.000 1510.00 m
157.000 1674.00 l
825.000 1674.00 l
825.000 1510.00 l
h
W
157.000 1510.00 668.000 41.6885 rc
.752941 .752941 .752941 RG
newpath
345.364 1529.72 m
345.364 1576.67 l
345.364 1578.88 347.155 1580.67 349.364 1580.67  c
459.484 1580.67 l
461.693 1580.67 463.484 1578.88 463.484 1576.67  c
463.484 1529.72 l
463.484 1527.51 461.693 1525.72 459.484 1525.72  c
349.364 1525.72 l
347.155 1525.72 345.364 1527.51 345.364 1529.72  c
h
f
1.00000 1.00000 1.00000 RG
cliprestore
newpath
157.000 1510.00 m
157.000 1674.00 l
825.000 1674.00 l
825.000 1510.00 l
h
W
0 J
1.45000 M
.600000 .600000 .600000 RG
newpath
345.364 1529.72 m
345.364 1576.67 l
345.364 1578.88 347.155 1580.67 349.364 1580.67  c
459.484 1580.67 l
461.693 1580.67 463.484 1578.88 463.484 1576.67  c
463.484 1529.72 l
463.484 1527.51 461.693 1525.72 459.484 1525.72  c
349.364 1525.72 l
347.155 1525.72 345.364 1527.51 345.364 1529.72  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
345.364 1551.69 m
463.484 1551.69 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
374.879 1534.11 m
382.269 1534.11 l
382.269 1535.11 l
379.176 1535.11 l
379.176 1542.86 l
377.988 1542.86 l
377.988 1535.11 l
374.879 1535.11 l
374.879 1534.11 l
h
383.412 1534.11 m
388.443 1534.11 l
388.443 1535.11 l
384.600 1535.11 l
384.600 1537.69 l
388.068 1537.69 l
388.068 1538.69 l
384.600 1538.69 l
384.600 1542.86 l
383.412 1542.86 l
383.412 1534.11 l
h
390.158 1540.26 m
390.158 1536.30 l
391.236 1536.30 l
391.236 1540.23 l
391.236 1540.85 391.359 1541.31 391.603 1541.62  c
391.848 1541.94 392.210 1542.09 392.689 1542.09  c
393.273 1542.09 393.734 1541.91 394.072 1541.54  c
394.411 1541.17 394.580 1540.66 394.580 1540.01  c
394.580 1536.30 l
395.658 1536.30 l
395.658 1542.86 l
394.580 1542.86 l
394.580 1541.84 l
394.320 1542.25 394.018 1542.55 393.674 1542.74  c
393.330 1542.93 392.929 1543.03 392.471 1543.03  c
391.710 1543.03 391.135 1542.80 390.744 1542.33  c
390.353 1541.86 390.158 1541.17 390.158 1540.26  c
h
403.342 1538.89 m
403.342 1542.86 l
402.264 1542.86 l
402.264 1538.94 l
402.264 1538.31 402.141 1537.85 401.896 1537.54  c
401.652 1537.23 401.290 1537.08 400.810 1537.08  c
400.227 1537.08 399.766 1537.26 399.428 1537.63  c
399.089 1538.00 398.920 1538.51 398.920 1539.16  c
398.920 1542.86 l
397.842 1542.86 l
397.842 1536.30 l
398.920 1536.30 l
398.920 1537.31 l
399.180 1536.92 399.485 1536.62 399.834 1536.43  c
400.183 1536.24 400.587 1536.14 401.045 1536.14  c
401.795 1536.14 402.365 1536.37 402.756 1536.84  c
403.146 1537.30 403.342 1537.98 403.342 1538.89  c
h
410.213 1536.55 m
410.213 1537.56 l
409.900 1537.38 409.593 1537.25 409.291 1537.17  c
408.989 1537.09 408.682 1537.05 408.369 1537.05  c
407.661 1537.05 407.114 1537.27 406.728 1537.71  c
406.343 1538.15 406.150 1538.78 406.150 1539.58  c
406.150 1540.38 406.343 1541.00 406.728 1541.44  c
407.114 1541.89 407.661 1542.11 408.369 1542.11  c
408.682 1542.11 408.989 1542.07 409.291 1541.98  c
409.593 1541.90 409.900 1541.78 410.213 1541.61  c
410.213 1542.61 l
409.911 1542.74 409.598 1542.85 409.275 1542.92  c
408.952 1542.99 408.609 1543.03 408.244 1543.03  c
407.254 1543.03 406.468 1542.72 405.885 1542.10  c
405.301 1541.48 405.010 1540.64 405.010 1539.58  c
405.010 1538.51 405.304 1537.68 405.893 1537.06  c
406.481 1536.45 407.291 1536.14 408.322 1536.14  c
408.645 1536.14 408.965 1536.17 409.283 1536.24  c
409.601 1536.31 409.911 1536.41 410.213 1536.55  c
h
413.154 1534.44 m
413.154 1536.30 l
415.373 1536.30 l
415.373 1537.14 l
413.154 1537.14 l
413.154 1540.70 l
413.154 1541.23 413.227 1541.57 413.373 1541.73  c
413.519 1541.88 413.816 1541.95 414.264 1541.95  c
415.373 1541.95 l
415.373 1542.86 l
414.264 1542.86 l
413.430 1542.86 412.855 1542.70 412.537 1542.39  c
412.219 1542.08 412.060 1541.51 412.060 1540.70  c
412.060 1537.14 l
411.279 1537.14 l
411.279 1536.30 l
412.060 1536.30 l
412.060 1534.44 l
413.154 1534.44 l
h
416.781 1536.30 m
417.859 1536.30 l
417.859 1542.86 l
416.781 1542.86 l
416.781 1536.30 l
h
416.781 1533.73 m
417.859 1533.73 l
417.859 1535.11 l
416.781 1535.11 l
416.781 1533.73 l
h
422.662 1537.05 m
422.089 1537.05 421.633 1537.27 421.295 1537.73  c
420.956 1538.18 420.787 1538.80 420.787 1539.58  c
420.787 1540.37 420.954 1540.99 421.287 1541.44  c
421.620 1541.88 422.079 1542.11 422.662 1542.11  c
423.235 1542.11 423.691 1541.88 424.029 1541.43  c
424.368 1540.98 424.537 1540.36 424.537 1539.58  c
424.537 1538.81 424.368 1538.19 424.029 1537.73  c
423.691 1537.28 423.235 1537.05 422.662 1537.05  c
h
422.662 1536.14 m
423.600 1536.14 424.337 1536.44 424.873 1537.05  c
425.409 1537.66 425.678 1538.50 425.678 1539.58  c
425.678 1540.65 425.409 1541.49 424.873 1542.11  c
424.337 1542.72 423.600 1543.03 422.662 1543.03  c
421.725 1543.03 420.988 1542.72 420.451 1542.11  c
419.915 1541.49 419.646 1540.65 419.646 1539.58  c
419.646 1538.50 419.915 1537.66 420.451 1537.05  c
420.988 1536.44 421.725 1536.14 422.662 1536.14  c
h
432.926 1538.89 m
432.926 1542.86 l
431.848 1542.86 l
431.848 1538.94 l
431.848 1538.31 431.725 1537.85 431.480 1537.54  c
431.236 1537.23 430.874 1537.08 430.394 1537.08  c
429.811 1537.08 429.350 1537.26 429.012 1537.63  c
428.673 1538.00 428.504 1538.51 428.504 1539.16  c
428.504 1542.86 l
427.426 1542.86 l
427.426 1536.30 l
428.504 1536.30 l
428.504 1537.31 l
428.764 1536.92 429.069 1536.62 429.418 1536.43  c
429.767 1536.24 430.171 1536.14 430.629 1536.14  c
431.379 1536.14 431.949 1536.37 432.340 1536.84  c
432.730 1537.30 432.926 1537.98 432.926 1538.89  c
h
f
2 J
10.0000 M
Q
q
q
[ 139.000 0.00000 0.00000 75.0000 510.307 1517.72 ] concat
<<
/ImageType 1
/Width 139  /Height 75
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [139 0 0 75 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/l>u)A)(e4Q*s(ObK)GRiF$Ak';5uq+r,"/f>TH`*!:RK3lHc(:hI:Jmj^QWmPn*IuNg"0:KKFgHU
nNL),(-g^O+gS@.\QG"X%;W\j]ZfR1V^4-]%Asf1=N,.B7W)sCK[h+b*[[(B*67+0pq+TO%P`f9XPt#5
GYSj,Vk0NQ+!2Tnmd<Q>d9nZlom5G3pRB5.%P`6OFbNgf@2R<^)_jO@j]QW1<"qd'<iaV]eEce2+r`M[
,X+;\:;>\!VXTQ37!fr$,La^"0K<JXZ=^LJX]-cWQ@'H^E<7k?E,\(DG.UHnjp9`-&!7eQG0$/B)eOjd
^@1OWm$,]Tc-=L/+r`M[,X/JZFEDVRIXZ]nNGXDZrBT_,e*3+e@1m;!C8Fh-:ag]*R40]'-W^!9pRBDS
0+lJ<3+$`nA(EUBZG0[O?F!cjNtc6O%jF7-M,hmnJfs"(^b1E6o`MHFE]i8Gp,D\=#*\]ZqJU[]&;\#[
[h<U'NclBWE1Slt&+[43r=)eYGR[q`>UY[k'Z`6@A/kb.NWL(gJW-?h`_dl=.$/E_a>aN;*!J*X!Z=LZ
N2&YX+V7Z\FEi$I7?IXS6\12k5fQYDj!^"/'Z`6@A/kb.NWL(gs%+o)!Z=LZN2&YX;'=mIODtuU3!s19
"Yu)>)+T7:UHlgr+QFl3E>6JR$=k+[16)DR7tHV_4]!-=mP6*7o2nV9o#1dla6tWZ@N6!a>$XXAI!k;X
rmoY$Yuju#]YGdVZ!+,+)N@4if1U3+g$1o=iGa$fH<RB"G'A/P]s4h>'R>4#Ht'KeXgVE8U_in+FsU`3
"FGKBXL>gU>o%^98UP!42b9jq)3%+BY/G^9HO[MYA^AZIBZ(mq+=$--Cu>kgpnUY%L5ZY7'4!*")PYo$
`nnd+a"a@FDP*Gh"AA#(/_K*[K1UHr47W42G`^ogAiE,\&_l@5m4Fb&rP#nu>\!kjR)C@j&8&u58U(!C
qeuY8$Pp:f^NX#i&D=lFB/$Eu00#c.ZYJR8GeuK]1Zfkl0^6<QiP'l+]$?qQ6seph70k&i&H=>s!7aEo
8,~>
Q
157.000 1551.69 668.000 122.311 rc
1.00000 1.00000 1.00000 RG
newpath
518.307 1529.72 m
518.307 1576.67 l
518.307 1578.88 520.098 1580.67 522.307 1580.67  c
632.427 1580.67 l
634.636 1580.67 636.427 1578.88 636.427 1576.67  c
636.427 1529.72 l
636.427 1527.51 634.636 1525.72 632.427 1525.72  c
522.307 1525.72 l
520.098 1525.72 518.307 1527.51 518.307 1529.72  c
h
f
cliprestore
newpath
157.000 1510.00 m
157.000 1674.00 l
825.000 1674.00 l
825.000 1510.00 l
h
W
157.000 1510.00 668.000 41.6885 rc
.752941 .752941 .752941 RG
newpath
518.307 1529.72 m
518.307 1576.67 l
518.307 1578.88 520.098 1580.67 522.307 1580.67  c
632.427 1580.67 l
634.636 1580.67 636.427 1578.88 636.427 1576.67  c
636.427 1529.72 l
636.427 1527.51 634.636 1525.72 632.427 1525.72  c
522.307 1525.72 l
520.098 1525.72 518.307 1527.51 518.307 1529.72  c
h
f
1.00000 1.00000 1.00000 RG
cliprestore
newpath
157.000 1510.00 m
157.000 1674.00 l
825.000 1674.00 l
825.000 1510.00 l
h
W
0 J
1.45000 M
.600000 .600000 .600000 RG
newpath
518.307 1529.72 m
518.307 1576.67 l
518.307 1578.88 520.098 1580.67 522.307 1580.67  c
632.427 1580.67 l
634.636 1580.67 636.427 1578.88 636.427 1576.67  c
636.427 1529.72 l
636.427 1527.51 634.636 1525.72 632.427 1525.72  c
522.307 1525.72 l
520.098 1525.72 518.307 1527.51 518.307 1529.72  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
518.307 1551.69 m
636.427 1551.69 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
563.423 1534.11 m
570.813 1534.11 l
570.813 1535.11 l
567.720 1535.11 l
567.720 1542.86 l
566.532 1542.86 l
566.532 1535.11 l
563.423 1535.11 l
563.423 1534.11 l
h
574.222 1542.86 m
570.878 1534.11 l
572.112 1534.11 l
574.894 1541.47 l
577.659 1534.11 l
578.894 1534.11 l
575.565 1542.86 l
574.222 1542.86 l
h
583.103 1539.56 m
582.238 1539.56 581.636 1539.66 581.298 1539.86  c
580.959 1540.06 580.790 1540.39 580.790 1540.87  c
580.790 1541.26 580.918 1541.56 581.173 1541.79  c
581.428 1542.01 581.769 1542.12 582.196 1542.12  c
582.800 1542.12 583.282 1541.91 583.642 1541.49  c
584.001 1541.07 584.181 1540.50 584.181 1539.80  c
584.181 1539.56 l
583.103 1539.56 l
h
585.259 1539.11 m
585.259 1542.86 l
584.181 1542.86 l
584.181 1541.86 l
583.931 1542.25 583.623 1542.55 583.259 1542.74  c
582.894 1542.93 582.446 1543.03 581.915 1543.03  c
581.238 1543.03 580.701 1542.84 580.306 1542.46  c
579.910 1542.08 579.712 1541.58 579.712 1540.95  c
579.712 1540.21 579.959 1539.66 580.454 1539.28  c
580.949 1538.91 581.686 1538.72 582.665 1538.72  c
584.181 1538.72 l
584.181 1538.61 l
584.181 1538.11 584.017 1537.72 583.688 1537.45  c
583.360 1537.18 582.905 1537.05 582.321 1537.05  c
581.946 1537.05 581.579 1537.09 581.220 1537.19  c
580.860 1537.28 580.519 1537.42 580.196 1537.59  c
580.196 1536.59 l
580.592 1536.44 580.975 1536.32 581.345 1536.25  c
581.715 1536.18 582.076 1536.14 582.431 1536.14  c
583.379 1536.14 584.087 1536.38 584.556 1536.87  c
585.024 1537.36 585.259 1538.11 585.259 1539.11  c
h
591.284 1537.30 m
591.159 1537.23 591.026 1537.18 590.886 1537.15  c
590.745 1537.11 590.586 1537.09 590.409 1537.09  c
589.805 1537.09 589.339 1537.29 589.011 1537.69  c
588.683 1538.08 588.519 1538.66 588.519 1539.41  c
588.519 1542.86 l
587.440 1542.86 l
587.440 1536.30 l
588.519 1536.30 l
588.519 1537.31 l
588.748 1536.92 589.045 1536.62 589.409 1536.43  c
589.774 1536.24 590.216 1536.14 590.737 1536.14  c
590.810 1536.14 590.891 1536.14 590.979 1536.16  c
591.068 1536.17 591.164 1536.18 591.269 1536.20  c
591.284 1537.30 l
h
f
2 J
10.0000 M
Q
q
q
[ 139.000 0.00000 0.00000 75.0000 683.251 1517.72 ] concat
<<
/ImageType 1
/Width 139  /Height 75
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [139 0 0 75 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/l>u)A)(e4Q*s(ObK)GRiF$Ak';5uq+r,"/f>TH`*!:RK3lHc(:hI:Jmj^QWmPn*IuNg"0:KKFgHU
nNL),(-g^O+gS@.\QG"X%;W\j]ZfR1V^4-]%Asf1=N,.B7W)sCK[h+b*[[(B*67+0pq+TO%P`f9XPt#5
GYSj,Vk0NQ+!2Tnmd<Q>d9nZlom5G3pRB5.%P`6OFbNgf@2R<^)_jO@j]QW1<"qd'<iaV]eEce2+r`M[
,X+;\:;>\!VXTQ37!fr$,La^"0K<JXZ=^LJX]-cWQ@'H^E<7k?E,\(DG.UHnjp9`-&!7eQG0$/B)eOjd
^@1OWm$,]Tc-=L/+r`M[,X/JZFEDVRIXZ]nNGXDZrBT_,e*3+e@1m;!C8Fh-:ag]*R40]'-W^!9pRBDS
0+lJ<3+$`nA(EUBZG0[O?F!cjNtc6O%jF7-M,hmnJfs"(^b1E6o`MHFE]i8Gp,D\=#*\]ZqJU[]&;\#[
[h<U'NclBWE1Slt&+[43r=)eYGR[q`>UY[k'Z`6@A/kb.NWL(gJW-?h`_dl=.$/E_a>aN;*!J*X!Z=LZ
N2&YX+V7Z\FEi$I7?IXS6\12k5fQYDj!^"/'Z`6@A/kb.NWL(gs%+o)!Z=LZN2&YX;'=mIODtuU3!s19
"Yu)>)+T7:UHlgr+QFl3E>6JR$=k+[16)DR7tHV_4]!-=mP6*7o2nV9o#1dla6tWZ@N6!a>$XXAI!k;X
rmoY$Yuju#]YGdVZ!+,+)N@4if1U3+g$1o=iGa$fH<RB"G'A/P]s4h>'R>4#Ht'KeXgVE8U_in+FsU`3
"FGKBXL>gU>o%^98UP!42b9jq)3%+BY/G^9HO[MYA^AZIBZ(mq+=$--Cu>kgpnUY%L5ZY7'4!*")PYo$
`nnd+a"a@FDP*Gh"AA#(/_K*[K1UHr47W42G`^ogAiE,\&_l@5m4Fb&rP#nu>\!kjR)C@j&8&u58U(!C
qeuY8$Pp:f^NX#i&D=lFB/$Eu00#c.ZYJR8GeuK]1Zfkl0^6<QiP'l+]$?qQ6seph70k&i&H=>s!7aEo
8,~>
Q
157.000 1551.69 668.000 122.311 rc
1.00000 1.00000 1.00000 RG
newpath
691.251 1529.72 m
691.251 1576.67 l
691.251 1578.88 693.041 1580.67 695.251 1580.67  c
805.371 1580.67 l
807.580 1580.67 809.371 1578.88 809.371 1576.67  c
809.371 1529.72 l
809.371 1527.51 807.580 1525.72 805.371 1525.72  c
695.251 1525.72 l
693.041 1525.72 691.251 1527.51 691.251 1529.72  c
h
f
cliprestore
newpath
157.000 1510.00 m
157.000 1674.00 l
825.000 1674.00 l
825.000 1510.00 l
h
W
157.000 1510.00 668.000 41.6885 rc
.752941 .752941 .752941 RG
newpath
691.251 1529.72 m
691.251 1576.67 l
691.251 1578.88 693.041 1580.67 695.251 1580.67  c
805.371 1580.67 l
807.580 1580.67 809.371 1578.88 809.371 1576.67  c
809.371 1529.72 l
809.371 1527.51 807.580 1525.72 805.371 1525.72  c
695.251 1525.72 l
693.041 1525.72 691.251 1527.51 691.251 1529.72  c
h
f
1.00000 1.00000 1.00000 RG
cliprestore
newpath
157.000 1510.00 m
157.000 1674.00 l
825.000 1674.00 l
825.000 1510.00 l
h
W
0 J
1.45000 M
.600000 .600000 .600000 RG
newpath
691.251 1529.72 m
691.251 1576.67 l
691.251 1578.88 693.041 1580.67 695.251 1580.67  c
805.371 1580.67 l
807.580 1580.67 809.371 1578.88 809.371 1576.67  c
809.371 1529.72 l
809.371 1527.51 807.580 1525.72 805.371 1525.72  c
695.251 1525.72 l
693.041 1525.72 691.251 1527.51 691.251 1529.72  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
691.251 1551.69 m
809.371 1551.69 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
722.040 1534.11 m
729.431 1534.11 l
729.431 1535.11 l
726.337 1535.11 l
726.337 1542.86 l
725.149 1542.86 l
725.149 1535.11 l
722.040 1535.11 l
722.040 1534.11 l
h
732.839 1542.86 m
729.495 1534.11 l
730.730 1534.11 l
733.511 1541.47 l
736.276 1534.11 l
737.511 1534.11 l
734.183 1542.86 l
732.839 1542.86 l
h
741.720 1539.56 m
740.855 1539.56 740.254 1539.66 739.915 1539.86  c
739.577 1540.06 739.407 1540.39 739.407 1540.87  c
739.407 1541.26 739.535 1541.56 739.790 1541.79  c
740.045 1542.01 740.386 1542.12 740.814 1542.12  c
741.418 1542.12 741.899 1541.91 742.259 1541.49  c
742.618 1541.07 742.798 1540.50 742.798 1539.80  c
742.798 1539.56 l
741.720 1539.56 l
h
743.876 1539.11 m
743.876 1542.86 l
742.798 1542.86 l
742.798 1541.86 l
742.548 1542.25 742.241 1542.55 741.876 1542.74  c
741.511 1542.93 741.064 1543.03 740.532 1543.03  c
739.855 1543.03 739.319 1542.84 738.923 1542.46  c
738.527 1542.08 738.329 1541.58 738.329 1540.95  c
738.329 1540.21 738.577 1539.66 739.071 1539.28  c
739.566 1538.91 740.303 1538.72 741.282 1538.72  c
742.798 1538.72 l
742.798 1538.61 l
742.798 1538.11 742.634 1537.72 742.306 1537.45  c
741.978 1537.18 741.522 1537.05 740.939 1537.05  c
740.564 1537.05 740.196 1537.09 739.837 1537.19  c
739.478 1537.28 739.136 1537.42 738.814 1537.59  c
738.814 1536.59 l
739.209 1536.44 739.592 1536.32 739.962 1536.25  c
740.332 1536.18 740.694 1536.14 741.048 1536.14  c
741.996 1536.14 742.704 1536.38 743.173 1536.87  c
743.642 1537.36 743.876 1538.11 743.876 1539.11  c
h
749.901 1537.30 m
749.776 1537.23 749.644 1537.18 749.503 1537.15  c
749.362 1537.11 749.204 1537.09 749.026 1537.09  c
748.422 1537.09 747.956 1537.29 747.628 1537.69  c
747.300 1538.08 747.136 1538.66 747.136 1539.41  c
747.136 1542.86 l
746.058 1542.86 l
746.058 1536.30 l
747.136 1536.30 l
747.136 1537.31 l
747.365 1536.92 747.662 1536.62 748.026 1536.43  c
748.391 1536.24 748.834 1536.14 749.355 1536.14  c
749.427 1536.14 749.508 1536.14 749.597 1536.16  c
749.685 1536.17 749.782 1536.18 749.886 1536.20  c
749.901 1537.30 l
h
752.257 1535.08 m
752.257 1541.89 l
753.694 1541.89 l
754.903 1541.89 755.786 1541.62 756.343 1541.07  c
756.900 1540.52 757.179 1539.66 757.179 1538.47  c
757.179 1537.30 756.900 1536.44 756.343 1535.90  c
755.786 1535.35 754.903 1535.08 753.694 1535.08  c
752.257 1535.08 l
h
751.069 1534.11 m
753.507 1534.11 l
755.205 1534.11 756.450 1534.46 757.241 1535.16  c
758.033 1535.87 758.429 1536.97 758.429 1538.47  c
758.429 1539.98 758.030 1541.09 757.233 1541.80  c
756.437 1542.50 755.194 1542.86 753.507 1542.86  c
751.069 1542.86 l
751.069 1534.11 l
h
763.247 1539.56 m
762.383 1539.56 761.781 1539.66 761.442 1539.86  c
761.104 1540.06 760.935 1540.39 760.935 1540.87  c
760.935 1541.26 761.062 1541.56 761.317 1541.79  c
761.573 1542.01 761.914 1542.12 762.341 1542.12  c
762.945 1542.12 763.427 1541.91 763.786 1541.49  c
764.146 1541.07 764.325 1540.50 764.325 1539.80  c
764.325 1539.56 l
763.247 1539.56 l
h
765.403 1539.11 m
765.403 1542.86 l
764.325 1542.86 l
764.325 1541.86 l
764.075 1542.25 763.768 1542.55 763.403 1542.74  c
763.039 1542.93 762.591 1543.03 762.060 1543.03  c
761.383 1543.03 760.846 1542.84 760.450 1542.46  c
760.054 1542.08 759.857 1541.58 759.857 1540.95  c
759.857 1540.21 760.104 1539.66 760.599 1539.28  c
761.093 1538.91 761.830 1538.72 762.810 1538.72  c
764.325 1538.72 l
764.325 1538.61 l
764.325 1538.11 764.161 1537.72 763.833 1537.45  c
763.505 1537.18 763.049 1537.05 762.466 1537.05  c
762.091 1537.05 761.724 1537.09 761.364 1537.19  c
761.005 1537.28 760.664 1537.42 760.341 1537.59  c
760.341 1536.59 l
760.737 1536.44 761.120 1536.32 761.489 1536.25  c
761.859 1536.18 762.221 1536.14 762.575 1536.14  c
763.523 1536.14 764.232 1536.38 764.700 1536.87  c
765.169 1537.36 765.403 1538.11 765.403 1539.11  c
h
768.694 1534.44 m
768.694 1536.30 l
770.913 1536.30 l
770.913 1537.14 l
768.694 1537.14 l
768.694 1540.70 l
768.694 1541.23 768.767 1541.57 768.913 1541.73  c
769.059 1541.88 769.356 1541.95 769.804 1541.95  c
770.913 1541.95 l
770.913 1542.86 l
769.804 1542.86 l
768.970 1542.86 768.395 1542.70 768.077 1542.39  c
767.760 1542.08 767.601 1541.51 767.601 1540.70  c
767.601 1537.14 l
766.819 1537.14 l
766.819 1536.30 l
767.601 1536.30 l
767.601 1534.44 l
768.694 1534.44 l
h
775.306 1539.56 m
774.441 1539.56 773.840 1539.66 773.501 1539.86  c
773.162 1540.06 772.993 1540.39 772.993 1540.87  c
772.993 1541.26 773.121 1541.56 773.376 1541.79  c
773.631 1542.01 773.972 1542.12 774.399 1542.12  c
775.004 1542.12 775.485 1541.91 775.845 1541.49  c
776.204 1541.07 776.384 1540.50 776.384 1539.80  c
776.384 1539.56 l
775.306 1539.56 l
h
777.462 1539.11 m
777.462 1542.86 l
776.384 1542.86 l
776.384 1541.86 l
776.134 1542.25 775.827 1542.55 775.462 1542.74  c
775.097 1542.93 774.649 1543.03 774.118 1543.03  c
773.441 1543.03 772.905 1542.84 772.509 1542.46  c
772.113 1542.08 771.915 1541.58 771.915 1540.95  c
771.915 1540.21 772.162 1539.66 772.657 1539.28  c
773.152 1538.91 773.889 1538.72 774.868 1538.72  c
776.384 1538.72 l
776.384 1538.61 l
776.384 1538.11 776.220 1537.72 775.892 1537.45  c
775.564 1537.18 775.108 1537.05 774.524 1537.05  c
774.149 1537.05 773.782 1537.09 773.423 1537.19  c
773.064 1537.28 772.722 1537.42 772.399 1537.59  c
772.399 1536.59 l
772.795 1536.44 773.178 1536.32 773.548 1536.25  c
773.918 1536.18 774.280 1536.14 774.634 1536.14  c
775.582 1536.14 776.290 1536.38 776.759 1536.87  c
777.228 1537.36 777.462 1538.11 777.462 1539.11  c
h
f
2 J
10.0000 M
Q
q
q
[ 139.000 0.00000 0.00000 75.0000 510.307 1595.88 ] concat
<<
/ImageType 1
/Width 139  /Height 75
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [139 0 0 75 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/l>u)A)(e4Q*s(ObK)GRiF$Ak';5uq+r,"/f>TH`*!:RK3lHc(:hI:Jmj^QWmPn*IuNg"0:KKFgHU
nNL),(-g^O+gS@.\QG"X%;W\j]ZfR1V^4-]%Asf1=N,.B7W)sCK[h+b*[[(B*67+0pq+TO%P`f9XPt#5
GYSj,Vk0NQ+!2Tnmd<Q>d9nZlom5G3pRB5.%P`6OFbNgf@2R<^)_jO@j]QW1<"qd'<iaV]eEce2+r`M[
,X+;\:;>\!VXTQ37!fr$,La^"0K<JXZ=^LJX]-cWQ@'H^E<7k?E,\(DG.UHnjp9`-&!7eQG0$/B)eOjd
^@1OWm$,]Tc-=L/+r`M[,X/JZFEDVRIXZ]nNGXDZrBT_,e*3+e@1m;!C8Fh-:ag]*R40]'-W^!9pRBDS
0+lJ<3+$`nA(EUBZG0[O?F!cjNtc6O%jF7-M,hmnJfs"(^b1E6o`MHFE]i8Gp,D\=#*\]ZqJU[]&;\#[
[h<U'NclBWE1Slt&+[43r=)eYGR[q`>UY[k'Z`6@A/kb.NWL(gJW-?h`_dl=.$/E_a>aN;*!J*X!Z=LZ
N2&YX+V7Z\FEi$I7?IXS6\12k5fQYDj!^"/'Z`6@A/kb.NWL(gs%+o)!Z=LZN2&YX;'=mIODtuU3!s19
"Yu)>)+T7:UHlgr+QFl3E>6JR$=k+[16)DR7tHV_4]!-=mP6*7o2nV9o#1dla6tWZ@N6!a>$XXAI!k;X
rmoY$Yuju#]YGdVZ!+,+)N@4if1U3+g$1o=iGa$fH<RB"G'A/P]s4h>'R>4#Ht'KeXgVE8U_in+FsU`3
"FGKBXL>gU>o%^98UP!42b9jq)3%+BY/G^9HO[MYA^AZIBZ(mq+=$--Cu>kgpnUY%L5ZY7'4!*")PYo$
`nnd+a"a@FDP*Gh"AA#(/_K*[K1UHr47W42G`^ogAiE,\&_l@5m4Fb&rP#nu>\!kjR)C@j&8&u58U(!C
qeuY8$Pp:f^NX#i&D=lFB/$Eu00#c.ZYJR8GeuK]1Zfkl0^6<QiP'l+]$?qQ6seph70k&i&H=>s!7aEo
8,~>
Q
157.000 1629.85 668.000 44.1540 rc
1.00000 1.00000 1.00000 RG
newpath
518.307 1607.88 m
518.307 1654.83 l
518.307 1657.04 520.098 1658.83 522.307 1658.83  c
632.427 1658.83 l
634.636 1658.83 636.427 1657.04 636.427 1654.83  c
636.427 1607.88 l
636.427 1605.67 634.636 1603.88 632.427 1603.88  c
522.307 1603.88 l
520.098 1603.88 518.307 1605.67 518.307 1607.88  c
h
f
cliprestore
newpath
157.000 1510.00 m
157.000 1674.00 l
825.000 1674.00 l
825.000 1510.00 l
h
W
157.000 1510.00 668.000 119.846 rc
.752941 .752941 .752941 RG
newpath
518.307 1607.88 m
518.307 1654.83 l
518.307 1657.04 520.098 1658.83 522.307 1658.83  c
632.427 1658.83 l
634.636 1658.83 636.427 1657.04 636.427 1654.83  c
636.427 1607.88 l
636.427 1605.67 634.636 1603.88 632.427 1603.88  c
522.307 1603.88 l
520.098 1603.88 518.307 1605.67 518.307 1607.88  c
h
f
1.00000 1.00000 1.00000 RG
cliprestore
newpath
157.000 1510.00 m
157.000 1674.00 l
825.000 1674.00 l
825.000 1510.00 l
h
W
0 J
1.45000 M
.600000 .600000 .600000 RG
newpath
518.307 1607.88 m
518.307 1654.83 l
518.307 1657.04 520.098 1658.83 522.307 1658.83  c
632.427 1658.83 l
634.636 1658.83 636.427 1657.04 636.427 1654.83  c
636.427 1607.88 l
636.427 1605.67 634.636 1603.88 632.427 1603.88  c
522.307 1603.88 l
520.098 1603.88 518.307 1605.67 518.307 1607.88  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
518.307 1629.85 m
636.427 1629.85 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
541.559 1612.27 m
548.949 1612.27 l
548.949 1613.27 l
545.855 1613.27 l
545.855 1621.02 l
544.668 1621.02 l
544.668 1613.27 l
541.559 1613.27 l
541.559 1612.27 l
h
550.092 1612.27 m
551.279 1612.27 l
551.279 1621.02 l
550.092 1621.02 l
550.092 1612.27 l
h
559.053 1617.05 m
559.053 1621.02 l
557.975 1621.02 l
557.975 1617.09 l
557.975 1616.47 557.852 1616.00 557.607 1615.70  c
557.363 1615.39 557.001 1615.23 556.521 1615.23  c
555.938 1615.23 555.477 1615.42 555.139 1615.79  c
554.800 1616.16 554.631 1616.67 554.631 1617.31  c
554.631 1621.02 l
553.553 1621.02 l
553.553 1614.45 l
554.631 1614.45 l
554.631 1615.47 l
554.891 1615.07 555.196 1614.78 555.545 1614.59  c
555.894 1614.39 556.298 1614.30 556.756 1614.30  c
557.506 1614.30 558.076 1614.53 558.467 1614.99  c
558.857 1615.46 559.053 1616.14 559.053 1617.05  c
h
565.377 1614.64 m
565.377 1615.67 l
565.075 1615.52 564.760 1615.40 564.432 1615.32  c
564.104 1615.24 563.762 1615.20 563.408 1615.20  c
562.877 1615.20 562.476 1615.28 562.205 1615.45  c
561.934 1615.61 561.799 1615.85 561.799 1616.19  c
561.799 1616.44 561.895 1616.63 562.088 1616.77  c
562.281 1616.91 562.669 1617.05 563.252 1617.17  c
563.611 1617.27 l
564.382 1617.42 564.929 1617.65 565.252 1617.95  c
565.575 1618.26 565.736 1618.67 565.736 1619.20  c
565.736 1619.82 565.494 1620.30 565.010 1620.66  c
564.525 1621.01 563.861 1621.19 563.018 1621.19  c
562.663 1621.19 562.296 1621.15 561.916 1621.09  c
561.536 1621.02 561.137 1620.92 560.721 1620.78  c
560.721 1619.66 l
561.117 1619.86 561.507 1620.02 561.893 1620.13  c
562.278 1620.23 562.663 1620.28 563.049 1620.28  c
563.549 1620.28 563.937 1620.20 564.213 1620.02  c
564.489 1619.85 564.627 1619.60 564.627 1619.28  c
564.627 1618.99 564.528 1618.77 564.330 1618.61  c
564.132 1618.45 563.700 1618.30 563.033 1618.16  c
562.658 1618.08 l
561.992 1617.93 561.510 1617.71 561.213 1617.42  c
560.916 1617.13 560.768 1616.73 560.768 1616.23  c
560.768 1615.61 560.986 1615.13 561.424 1614.80  c
561.861 1614.46 562.481 1614.30 563.283 1614.30  c
563.679 1614.30 564.054 1614.33 564.408 1614.38  c
564.762 1614.44 565.085 1614.53 565.377 1614.64  c
h
568.520 1612.59 m
568.520 1614.45 l
570.738 1614.45 l
570.738 1615.30 l
568.520 1615.30 l
568.520 1618.86 l
568.520 1619.39 568.592 1619.73 568.738 1619.88  c
568.884 1620.03 569.181 1620.11 569.629 1620.11  c
570.738 1620.11 l
570.738 1621.02 l
569.629 1621.02 l
568.796 1621.02 568.220 1620.86 567.902 1620.55  c
567.585 1620.23 567.426 1619.67 567.426 1618.86  c
567.426 1615.30 l
566.645 1615.30 l
566.645 1614.45 l
567.426 1614.45 l
567.426 1612.59 l
568.520 1612.59 l
h
575.959 1615.45 m
575.834 1615.39 575.701 1615.34 575.561 1615.30  c
575.420 1615.27 575.261 1615.25 575.084 1615.25  c
574.480 1615.25 574.014 1615.45 573.686 1615.84  c
573.357 1616.24 573.193 1616.81 573.193 1617.56  c
573.193 1621.02 l
572.115 1621.02 l
572.115 1614.45 l
573.193 1614.45 l
573.193 1615.47 l
573.423 1615.07 573.719 1614.78 574.084 1614.59  c
574.449 1614.39 574.891 1614.30 575.412 1614.30  c
575.485 1614.30 575.566 1614.30 575.654 1614.31  c
575.743 1614.32 575.839 1614.34 575.943 1614.36  c
575.959 1615.45 l
h
576.971 1618.42 m
576.971 1614.45 l
578.049 1614.45 l
578.049 1618.39 l
578.049 1619.01 578.171 1619.47 578.416 1619.78  c
578.661 1620.09 579.023 1620.25 579.502 1620.25  c
580.085 1620.25 580.546 1620.07 580.885 1619.70  c
581.223 1619.33 581.393 1618.82 581.393 1618.17  c
581.393 1614.45 l
582.471 1614.45 l
582.471 1621.02 l
581.393 1621.02 l
581.393 1620.00 l
581.132 1620.41 580.830 1620.71 580.486 1620.90  c
580.143 1621.09 579.742 1621.19 579.283 1621.19  c
578.523 1621.19 577.947 1620.95 577.557 1620.48  c
577.166 1620.02 576.971 1619.33 576.971 1618.42  c
h
589.420 1614.70 m
589.420 1615.72 l
589.107 1615.54 588.800 1615.41 588.498 1615.33  c
588.196 1615.25 587.889 1615.20 587.576 1615.20  c
586.868 1615.20 586.321 1615.42 585.936 1615.87  c
585.550 1616.31 585.357 1616.93 585.357 1617.73  c
585.357 1618.54 585.550 1619.16 585.936 1619.60  c
586.321 1620.04 586.868 1620.27 587.576 1620.27  c
587.889 1620.27 588.196 1620.22 588.498 1620.14  c
588.800 1620.06 589.107 1619.93 589.420 1619.77  c
589.420 1620.77 l
589.118 1620.90 588.805 1621.01 588.482 1621.08  c
588.160 1621.15 587.816 1621.19 587.451 1621.19  c
586.462 1621.19 585.675 1620.88 585.092 1620.26  c
584.508 1619.64 584.217 1618.80 584.217 1617.73  c
584.217 1616.67 584.511 1615.83 585.100 1615.22  c
585.688 1614.60 586.498 1614.30 587.529 1614.30  c
587.852 1614.30 588.173 1614.33 588.490 1614.40  c
588.808 1614.47 589.118 1614.57 589.420 1614.70  c
h
592.361 1612.59 m
592.361 1614.45 l
594.580 1614.45 l
594.580 1615.30 l
592.361 1615.30 l
592.361 1618.86 l
592.361 1619.39 592.434 1619.73 592.580 1619.88  c
592.726 1620.03 593.023 1620.11 593.471 1620.11  c
594.580 1620.11 l
594.580 1621.02 l
593.471 1621.02 l
592.637 1621.02 592.062 1620.86 591.744 1620.55  c
591.426 1620.23 591.268 1619.67 591.268 1618.86  c
591.268 1615.30 l
590.486 1615.30 l
590.486 1614.45 l
591.268 1614.45 l
591.268 1612.59 l
592.361 1612.59 l
h
595.988 1614.45 m
597.066 1614.45 l
597.066 1621.02 l
595.988 1621.02 l
595.988 1614.45 l
h
595.988 1611.89 m
597.066 1611.89 l
597.066 1613.27 l
595.988 1613.27 l
595.988 1611.89 l
h
601.869 1615.20 m
601.296 1615.20 600.840 1615.43 600.502 1615.88  c
600.163 1616.34 599.994 1616.95 599.994 1617.73  c
599.994 1618.53 600.161 1619.15 600.494 1619.59  c
600.827 1620.04 601.286 1620.27 601.869 1620.27  c
602.442 1620.27 602.898 1620.04 603.236 1619.59  c
603.575 1619.13 603.744 1618.52 603.744 1617.73  c
603.744 1616.96 603.575 1616.35 603.236 1615.89  c
602.898 1615.43 602.442 1615.20 601.869 1615.20  c
h
601.869 1614.30 m
602.807 1614.30 603.544 1614.60 604.080 1615.21  c
604.617 1615.82 604.885 1616.66 604.885 1617.73  c
604.885 1618.81 604.617 1619.65 604.080 1620.27  c
603.544 1620.88 602.807 1621.19 601.869 1621.19  c
600.932 1621.19 600.195 1620.88 599.658 1620.27  c
599.122 1619.65 598.854 1618.81 598.854 1617.73  c
598.854 1616.66 599.122 1615.82 599.658 1615.21  c
600.195 1614.60 600.932 1614.30 601.869 1614.30  c
h
612.133 1617.05 m
612.133 1621.02 l
611.055 1621.02 l
611.055 1617.09 l
611.055 1616.47 610.932 1616.00 610.688 1615.70  c
610.443 1615.39 610.081 1615.23 609.602 1615.23  c
609.018 1615.23 608.557 1615.42 608.219 1615.79  c
607.880 1616.16 607.711 1616.67 607.711 1617.31  c
607.711 1621.02 l
606.633 1621.02 l
606.633 1614.45 l
607.711 1614.45 l
607.711 1615.47 l
607.971 1615.07 608.276 1614.78 608.625 1614.59  c
608.974 1614.39 609.378 1614.30 609.836 1614.30  c
610.586 1614.30 611.156 1614.53 611.547 1614.99  c
611.938 1615.46 612.133 1616.14 612.133 1617.05  c
h
f
2 J
10.0000 M
Q
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
290.550 1541.93 m
337.346 1541.93 l
S
newpath
345.346 1541.93 m
333.346 1536.93 l
336.346 1541.93 l
333.346 1546.93 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
463.493 1541.42 m
510.289 1541.42 l
S
newpath
518.289 1541.42 m
506.289 1536.42 l
509.289 1541.42 l
506.289 1546.42 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
636.436 1541.42 m
683.233 1541.42 l
S
newpath
691.233 1541.42 m
679.233 1536.42 l
682.233 1541.42 l
679.233 1546.42 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
404.424 1580.67 m
404.424 1618.55 l
510.298 1618.55 l
S
newpath
518.298 1618.55 m
506.298 1613.55 l
509.298 1618.55 l
506.298 1623.55 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
