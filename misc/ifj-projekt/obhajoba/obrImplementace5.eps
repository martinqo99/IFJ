%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 318 575 473
%%Creator: yExport 1.2
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, December 13, 2011 12:00:45 AM CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
498 138 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
498.000 0.00000 l
498.000 138.000 l
0.00000 138.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 498 138 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -838.000 -840.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
838.000 840.000 m
1336.00 840.000 l
1336.00 978.000 l
838.000 978.000 l
838.000 840.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -838.000 -840.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -838.000 -840.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -838.000 -840.000 ] defaultmatrix matrix concatmatrix setmatrix
q
q
[ 32.0000 0.00000 0.00000 32.0000 840.773 842.290 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/ab6ii/'F*IpI?MN;#d.(AKcm1a)].T>'_6ii2RHP8KbhLm]u0XDB:]8m&H7a"!f+241l^Pjg>[W&
m4\rshm[IW1sL*,?#lB*_T[d8<>@rbA_H+eI=Y\caLeUUlPaW/VK!SG;&"cDD&II\ZVZ[P.a10iGb4*0
Y&2qFA^obnS6>DF8+-7<hcc=WRc\/r76es/cfWG<3HE>u@Hb:O?:B8^Q7pE:8J5X/*4_q\V_-EsS0H;%
K0##[4QW(']mfC2CZ.PsQ@JpgT9Ec4nV^cP.fKrJ+XG,~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 872.773 842.290 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIRr,D.ffk\?mD@Fn`fUgR?H([_]J0]%W'#a[U9b,,cO?92d\b8~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 958.893 842.290 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/bb6iht'Li'%J!(Kk&Y,X&$A.=@*@MUc:s!@=D47@m$(TfD!IM)t^3?.d$jP`/hDBE=^BfeY3).jc
d;t;YY+)<Q\o&>hLpef$^Nk2uOsJ5VU+"rOAZOh!LuUIdk64-_71hpf<Gb`@(K"14f6+tbCtj[JFeIsq
*chna08iAa,g3Kf-kKOI"\"lW=9K@pq<'U<5nHHs(/<9),*(]h/?q)&6mi&?5_0]JBng&`k;cQcSqrQU
E?&/T!k.TH+"(gXp:pDccXR?QaE:cN,l@q6cgk6<iV=QcN#<T~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 840.773 874.290 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+J#R!HnIQjI#7fj;75^*N:T_`Cn^s&<>lL([pb_U4^1OBA9StDXIT:_aJT:_bUa1l[=5Sj~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 958.893 874.290 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+:#QR0jINW&d!"tC/c:1tDAa8n8i'cF$e]cf3+u6L)\pJ&7_P65VkND$kkND$kkPt0]"dCDO
~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 840.773 880.860 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/aabk^I'L`!$Il_=s38qkk+UFf>E9"fY5fF=jUeo/#a\-jAeN4jlMQ2"F%k?.QmJB)jZ60D]_iQ.#
kP6b<kk**Fr650_r\+aTe!+G>j8NI(niVu-aL5qS;$92[XFD51Z7M1bEEuYtF\riMJ`F8p-'\CGgZEda
lT.a=htJ_GdPMCFhZj3#9)lWobHc4qLP\jDo/oF6KrV0*8gZpi5:]FVe@$s3N!Qf+:laR<QdGV,!EV6*
MP@m_8;ZC%ILm-bpV.nk#lJGd1f[O!#`JYCH-:\,?mse3.HiN,oOQhO^J`?"Y[6l^5D-d[r1,4=1`90
~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 872.773 880.860 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIS.IX!B<=G3u^agn`fUg&X(XR^a:U@$asIKG$tn^P18Op50,(;~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 958.893 880.860 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0L3=:C8'SYNEmjEu"U+"_D(4mZ+6lQM(:n3=%@-Zqb,c#_C!e)cb^"_oma)Q\R.#MJ:<Y,CZT(dZJ
D;0\nOCs!mBDnIs<E6GD3t0$1pN`?s,Y?HAa)Rh%.a)iL#%F4:JiJdWA_AaGf6*9&WU"jM7q,gb-&Nm!
7pOYgN8seaR\ig.bk&L94/K-nV]IOMBpsj)SeoFe;%sjs>usW<XAd2LF3K6Z&^RbaD;/cnLuZ;L^#4DG
`TENkQQqOPl,Q/7$==CuWiE:Kf6+SCET6OBh'l$WYDAZF?Btc$Hk_A/b')DJ+-d^u@K,R!IS:1I~>
Q
.874510 .870588 .870588 RG
newpath
853.773 860.290 m
853.773 888.860 l
853.773 891.622 856.012 893.860 858.773 893.860  c
966.893 893.860 l
969.654 893.860 971.893 891.622 971.893 888.860  c
971.893 860.290 l
971.893 857.528 969.654 855.290 966.893 855.290  c
858.773 855.290 l
856.012 855.290 853.773 857.528 853.773 860.290  c
h
f
0.00000 0.00000 0.00000 RG
.501961 .501961 .501961 RG
0 J
1.45000 M
newpath
853.773 860.290 m
853.773 888.860 l
853.773 891.622 856.012 893.860 858.773 893.860  c
966.893 893.860 l
969.654 893.860 971.893 891.622 971.893 888.860  c
971.893 860.290 l
971.893 857.528 969.654 855.290 966.893 855.290  c
858.773 855.290 l
856.012 855.290 853.773 857.528 853.773 860.290  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [853.7730102539062 855.2899169921875 858.5183715820312 884.2391357421875]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
856.273 865.290 m
856.273 860.290 858.773 857.790 863.773 857.790  c
920.551 857.790 l
925.551 857.790 928.051 860.290 928.051 865.290  c
928.051 870.290 918.588 874.599 899.662 878.218  c
880.736 881.837 868.773 883.646 863.773 883.646  c
858.773 883.646 856.273 881.146 856.273 876.146  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
891.193 871.984 m
891.193 873.187 l
890.839 873.000 890.469 872.862 890.084 872.773  c
889.699 872.685 889.303 872.641 888.896 872.641  c
888.271 872.641 887.803 872.734 887.490 872.922  c
887.178 873.109 887.021 873.396 887.021 873.781  c
887.021 874.073 887.133 874.302 887.357 874.469  c
887.581 874.635 888.032 874.792 888.709 874.937  c
889.131 875.047 l
890.027 875.234 890.662 875.503 891.037 875.852  c
891.412 876.200 891.600 876.687 891.600 877.312  c
891.600 878.021 891.318 878.583 890.756 879.000  c
890.193 879.417 889.423 879.625 888.443 879.625  c
888.027 879.625 887.597 879.583 887.154 879.500  c
886.712 879.417 886.245 879.297 885.756 879.141  c
885.756 877.844 l
886.214 878.083 886.670 878.263 887.123 878.383  c
887.576 878.503 888.021 878.562 888.459 878.562  c
889.053 878.562 889.508 878.461 889.826 878.258  c
890.144 878.055 890.303 877.771 890.303 877.406  c
890.303 877.062 890.188 876.799 889.959 876.617  c
889.730 876.435 889.225 876.260 888.443 876.094  c
888.006 875.984 l
887.235 875.828 886.675 875.578 886.326 875.234  c
885.977 874.891 885.803 874.427 885.803 873.844  c
885.803 873.115 886.058 872.555 886.568 872.164  c
887.079 871.773 887.803 871.578 888.740 871.578  c
889.209 871.578 889.649 871.612 890.061 871.680  c
890.472 871.747 890.850 871.849 891.193 871.984  c
h
899.112 872.062 m
899.112 873.234 l
898.758 873.036 898.401 872.888 898.042 872.789  c
897.683 872.690 897.321 872.641 896.956 872.641  c
896.144 872.641 895.511 872.901 895.058 873.422  c
894.604 873.943 894.378 874.667 894.378 875.594  c
894.378 876.531 894.604 877.258 895.058 877.773  c
895.511 878.289 896.144 878.547 896.956 878.547  c
897.321 878.547 897.683 878.500 898.042 878.406  c
898.401 878.312 898.758 878.167 899.112 877.969  c
899.112 879.125 l
898.758 879.292 898.394 879.417 898.019 879.500  c
897.644 879.583 897.248 879.625 896.831 879.625  c
895.675 879.625 894.756 879.263 894.073 878.539  c
893.391 877.815 893.050 876.833 893.050 875.594  c
893.050 874.354 893.394 873.375 894.081 872.656  c
894.769 871.937 895.711 871.578 896.909 871.578  c
897.295 871.578 897.672 871.617 898.042 871.695  c
898.412 871.773 898.769 871.896 899.112 872.062  c
h
904.778 875.578 m
903.768 875.578 903.065 875.693 902.669 875.922  c
902.273 876.151 902.075 876.547 902.075 877.109  c
902.075 877.557 902.224 877.911 902.521 878.172  c
902.817 878.432 903.216 878.562 903.716 878.562  c
904.414 878.562 904.974 878.315 905.396 877.820  c
905.817 877.325 906.028 876.672 906.028 875.859  c
906.028 875.578 l
904.778 875.578 l
h
907.294 875.047 m
907.294 879.422 l
906.028 879.422 l
906.028 878.266 l
905.747 878.724 905.390 879.065 904.958 879.289  c
904.526 879.513 904.002 879.625 903.388 879.625  c
902.606 879.625 901.984 879.404 901.521 878.961  c
901.057 878.518 900.825 877.927 900.825 877.187  c
900.825 876.333 901.114 875.687 901.692 875.250  c
902.271 874.812 903.127 874.594 904.263 874.594  c
906.028 874.594 l
906.028 874.469 l
906.028 873.885 905.838 873.435 905.458 873.117  c
905.078 872.799 904.544 872.641 903.856 872.641  c
903.419 872.641 902.992 872.695 902.575 872.805  c
902.159 872.914 901.763 873.073 901.388 873.281  c
901.388 872.109 l
901.846 871.932 902.291 871.799 902.724 871.711  c
903.156 871.622 903.575 871.578 903.981 871.578  c
905.096 871.578 905.927 871.865 906.474 872.437  c
907.021 873.010 907.294 873.880 907.294 875.047  c
h
916.248 874.797 m
916.248 879.422 l
914.982 879.422 l
914.982 874.844 l
914.982 874.115 914.842 873.570 914.561 873.211  c
914.279 872.852 913.857 872.672 913.295 872.672  c
912.618 872.672 912.081 872.888 911.686 873.320  c
911.290 873.753 911.092 874.344 911.092 875.094  c
911.092 879.422 l
909.826 879.422 l
909.826 871.766 l
911.092 871.766 l
911.092 872.953 l
911.394 872.495 911.751 872.151 912.162 871.922  c
912.574 871.693 913.045 871.578 913.576 871.578  c
914.451 871.578 915.115 871.852 915.568 872.398  c
916.021 872.945 916.248 873.745 916.248 874.797  c
h
925.121 874.797 m
925.121 879.422 l
923.855 879.422 l
923.855 874.844 l
923.855 874.115 923.715 873.570 923.434 873.211  c
923.152 872.852 922.730 872.672 922.168 872.672  c
921.491 872.672 920.954 872.888 920.559 873.320  c
920.163 873.753 919.965 874.344 919.965 875.094  c
919.965 879.422 l
918.699 879.422 l
918.699 871.766 l
919.965 871.766 l
919.965 872.953 l
920.267 872.495 920.624 872.151 921.035 871.922  c
921.447 871.693 921.918 871.578 922.449 871.578  c
923.324 871.578 923.988 871.852 924.441 872.398  c
924.895 872.945 925.121 873.745 925.121 874.797  c
h
934.182 875.281 m
934.182 875.891 l
928.385 875.891 l
928.447 876.755 928.710 877.414 929.174 877.867  c
929.637 878.320 930.286 878.547 931.119 878.547  c
931.609 878.547 932.080 878.490 932.533 878.375  c
932.986 878.260 933.437 878.083 933.885 877.844  c
933.885 879.031 l
933.426 879.219 932.960 879.365 932.486 879.469  c
932.012 879.573 931.536 879.625 931.057 879.625  c
929.827 879.625 928.856 879.268 928.143 878.555  c
927.429 877.841 927.072 876.880 927.072 875.672  c
927.072 874.411 927.411 873.414 928.088 872.680  c
928.765 871.945 929.682 871.578 930.838 871.578  c
931.869 871.578 932.684 871.909 933.283 872.570  c
933.882 873.232 934.182 874.135 934.182 875.281  c
h
932.916 874.906 m
932.906 874.219 932.713 873.669 932.338 873.258  c
931.963 872.846 931.468 872.641 930.854 872.641  c
930.145 872.641 929.580 872.841 929.158 873.242  c
928.736 873.643 928.494 874.203 928.432 874.922  c
932.916 874.906 l
h
940.670 872.937 m
940.535 872.854 940.383 872.794 940.217 872.758  c
940.050 872.721 939.868 872.703 939.670 872.703  c
938.951 872.703 938.402 872.935 938.021 873.398  c
937.641 873.862 937.451 874.526 937.451 875.391  c
937.451 879.422 l
936.186 879.422 l
936.186 871.766 l
937.451 871.766 l
937.451 872.953 l
937.722 872.484 938.068 872.138 938.490 871.914  c
938.912 871.690 939.425 871.578 940.029 871.578  c
940.123 871.578 940.222 871.583 940.326 871.594  c
940.430 871.604 940.545 871.625 940.670 871.656  c
940.670 872.937 l
h
f
2 J
10.0000 M
Q
q
q
[ 32.0000 0.00000 0.00000 32.0000 1015.01 842.290 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/ab6ii/'F*IpI?MN;#d.(AKcm1a)].T>'_6ii2RHP8KbhLm]u0XDB:]8m&H7a"!f+241l^Pjg>[W&
m4\rshm[IW1sL*,?#lB*_T[d8<>@rbA_H+eI=Y\caLeUUlPaW/VK!SG;&"cDD&II\ZVZ[P.a10iGb4*0
Y&2qFA^obnS6>DF8+-7<hcc=WRc\/r76es/cfWG<3HE>u@Hb:O?:B8^Q7pE:8J5X/*4_q\V_-EsS0H;%
K0##[4QW(']mfC2CZ.PsQ@JpgT9Ec4nV^cP.fKrJ+XG,~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1047.01 842.290 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIRr,D.ffk\?mD@Fn`fUgR?H([_]J0]%W'#a[U9b,,cO?92d\b8~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1133.13 842.290 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/bb6iht'Li'%J!(Kk&Y,X&$A.=@*@MUc:s!@=D47@m$(TfD!IM)t^3?.d$jP`/hDBE=^BfeY3).jc
d;t;YY+)<Q\o&>hLpef$^Nk2uOsJ5VU+"rOAZOh!LuUIdk64-_71hpf<Gb`@(K"14f6+tbCtj[JFeIsq
*chna08iAa,g3Kf-kKOI"\"lW=9K@pq<'U<5nHHs(/<9),*(]h/?q)&6mi&?5_0]JBng&`k;cQcSqrQU
E?&/T!k.TH+"(gXp:pDccXR?QaE:cN,l@q6cgk6<iV=QcN#<T~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1015.01 874.290 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+J#R!HnIQjI#7fj;75^*N:T_`Cn^s&<>lL([pb_U4^1OBA9StDXIT:_aJT:_bUa1l[=5Sj~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1133.13 874.290 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+:#QR0jINW&d!"tC/c:1tDAa8n8i'cF$e]cf3+u6L)\pJ&7_P65VkND$kkND$kkPt0]"dCDO
~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1015.01 880.860 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/aabk^I'L`!$Il_=s38qkk+UFf>E9"fY5fF=jUeo/#a\-jAeN4jlMQ2"F%k?.QmJB)jZ60D]_iQ.#
kP6b<kk**Fr650_r\+aTe!+G>j8NI(niVu-aL5qS;$92[XFD51Z7M1bEEuYtF\riMJ`F8p-'\CGgZEda
lT.a=htJ_GdPMCFhZj3#9)lWobHc4qLP\jDo/oF6KrV0*8gZpi5:]FVe@$s3N!Qf+:laR<QdGV,!EV6*
MP@m_8;ZC%ILm-bpV.nk#lJGd1f[O!#`JYCH-:\,?mse3.HiN,oOQhO^J`?"Y[6l^5D-d[r1,4=1`90
~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1047.01 880.860 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIS.IX!B<=G3u^agn`fUg&X(XR^a:U@$asIKG$tn^P18Op50,(;~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1133.13 880.860 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0L3=:C8'SYNEmjEu"U+"_D(4mZ+6lQM(:n3=%@-Zqb,c#_C!e)cb^"_oma)Q\R.#MJ:<Y,CZT(dZJ
D;0\nOCs!mBDnIs<E6GD3t0$1pN`?s,Y?HAa)Rh%.a)iL#%F4:JiJdWA_AaGf6*9&WU"jM7q,gb-&Nm!
7pOYgN8seaR\ig.bk&L94/K-nV]IOMBpsj)SeoFe;%sjs>usW<XAd2LF3K6Z&^RbaD;/cnLuZ;L^#4DG
`TENkQQqOPl,Q/7$==CuWiE:Kf6+SCET6OBh'l$WYDAZF?Btc$Hk_A/b')DJ+-d^u@K,R!IS:1I~>
Q
.874510 .870588 .870588 RG
newpath
1028.01 860.290 m
1028.01 888.860 l
1028.01 891.622 1030.25 893.860 1033.01 893.860  c
1141.13 893.860 l
1143.89 893.860 1146.13 891.622 1146.13 888.860  c
1146.13 860.290 l
1146.13 857.528 1143.89 855.290 1141.13 855.290  c
1033.01 855.290 l
1030.25 855.290 1028.01 857.528 1028.01 860.290  c
h
f
0.00000 0.00000 0.00000 RG
.501961 .501961 .501961 RG
0 J
1.45000 M
newpath
1028.01 860.290 m
1028.01 888.860 l
1028.01 891.622 1030.25 893.860 1033.01 893.860  c
1141.13 893.860 l
1143.89 893.860 1146.13 891.622 1146.13 888.860  c
1146.13 860.290 l
1146.13 857.528 1143.89 855.290 1141.13 855.290  c
1033.01 855.290 l
1030.25 855.290 1028.01 857.528 1028.01 860.290  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [1028.0087890625 855.2899169921875 1032.754150390625 884.2391357421875]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
1030.51 865.290 m
1030.51 860.290 1033.01 857.790 1038.01 857.790  c
1094.79 857.790 l
1099.79 857.790 1102.29 860.290 1102.29 865.290  c
1102.29 870.290 1092.82 874.599 1073.90 878.218  c
1054.97 881.837 1043.01 883.646 1038.01 883.646  c
1033.01 883.646 1030.51 881.146 1030.51 876.146  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1067.16 878.266 m
1067.16 882.328 l
1065.89 882.328 l
1065.89 871.766 l
1067.16 871.766 l
1067.16 872.922 l
1067.43 872.474 1067.76 872.138 1068.17 871.914  c
1068.57 871.690 1069.05 871.578 1069.61 871.578  c
1070.54 871.578 1071.29 871.948 1071.88 872.687  c
1072.46 873.427 1072.75 874.396 1072.75 875.594  c
1072.75 876.802 1072.46 877.776 1071.88 878.516  c
1071.29 879.255 1070.54 879.625 1069.61 879.625  c
1069.05 879.625 1068.57 879.513 1068.17 879.289  c
1067.76 879.065 1067.43 878.724 1067.16 878.266  c
h
1071.44 875.594 m
1071.44 874.677 1071.25 873.956 1070.87 873.430  c
1070.49 872.904 1069.96 872.641 1069.30 872.641  c
1068.63 872.641 1068.11 872.904 1067.73 873.430  c
1067.35 873.956 1067.16 874.677 1067.16 875.594  c
1067.16 876.521 1067.35 877.247 1067.73 877.773  c
1068.11 878.299 1068.63 878.562 1069.30 878.562  c
1069.96 878.562 1070.49 878.299 1070.87 877.773  c
1071.25 877.247 1071.44 876.521 1071.44 875.594  c
h
1078.31 875.578 m
1077.30 875.578 1076.60 875.693 1076.20 875.922  c
1075.80 876.151 1075.61 876.547 1075.61 877.109  c
1075.61 877.557 1075.76 877.911 1076.05 878.172  c
1076.35 878.432 1076.75 878.562 1077.25 878.562  c
1077.95 878.562 1078.51 878.315 1078.93 877.820  c
1079.35 877.325 1079.56 876.672 1079.56 875.859  c
1079.56 875.578 l
1078.31 875.578 l
h
1080.83 875.047 m
1080.83 879.422 l
1079.56 879.422 l
1079.56 878.266 l
1079.28 878.724 1078.92 879.065 1078.49 879.289  c
1078.06 879.513 1077.53 879.625 1076.92 879.625  c
1076.14 879.625 1075.52 879.404 1075.05 878.961  c
1074.59 878.518 1074.36 877.927 1074.36 877.187  c
1074.36 876.333 1074.65 875.687 1075.22 875.250  c
1075.80 874.812 1076.66 874.594 1077.79 874.594  c
1079.56 874.594 l
1079.56 874.469 l
1079.56 873.885 1079.37 873.435 1078.99 873.117  c
1078.61 872.799 1078.08 872.641 1077.39 872.641  c
1076.95 872.641 1076.52 872.695 1076.11 872.805  c
1075.69 872.914 1075.29 873.073 1074.92 873.281  c
1074.92 872.109 l
1075.38 871.932 1075.82 871.799 1076.26 871.711  c
1076.69 871.622 1077.11 871.578 1077.51 871.578  c
1078.63 871.578 1079.46 871.865 1080.01 872.437  c
1080.55 873.010 1080.83 873.880 1080.83 875.047  c
h
1087.84 872.937 m
1087.71 872.854 1087.56 872.794 1087.39 872.758  c
1087.22 872.721 1087.04 872.703 1086.84 872.703  c
1086.12 872.703 1085.57 872.935 1085.19 873.398  c
1084.81 873.862 1084.62 874.526 1084.62 875.391  c
1084.62 879.422 l
1083.36 879.422 l
1083.36 871.766 l
1084.62 871.766 l
1084.62 872.953 l
1084.89 872.484 1085.24 872.138 1085.66 871.914  c
1086.08 871.690 1086.60 871.578 1087.20 871.578  c
1087.30 871.578 1087.39 871.583 1087.50 871.594  c
1087.60 871.604 1087.72 871.625 1087.84 871.656  c
1087.84 872.937 l
h
1094.05 871.984 m
1094.05 873.187 l
1093.70 873.000 1093.33 872.862 1092.94 872.773  c
1092.56 872.685 1092.16 872.641 1091.75 872.641  c
1091.13 872.641 1090.66 872.734 1090.35 872.922  c
1090.04 873.109 1089.88 873.396 1089.88 873.781  c
1089.88 874.073 1089.99 874.302 1090.22 874.469  c
1090.44 874.635 1090.89 874.792 1091.57 874.937  c
1091.99 875.047 l
1092.88 875.234 1093.52 875.503 1093.89 875.852  c
1094.27 876.200 1094.46 876.687 1094.46 877.312  c
1094.46 878.021 1094.18 878.583 1093.61 879.000  c
1093.05 879.417 1092.28 879.625 1091.30 879.625  c
1090.88 879.625 1090.45 879.583 1090.01 879.500  c
1089.57 879.417 1089.10 879.297 1088.61 879.141  c
1088.61 877.844 l
1089.07 878.083 1089.53 878.263 1089.98 878.383  c
1090.43 878.503 1090.88 878.562 1091.32 878.562  c
1091.91 878.562 1092.37 878.461 1092.68 878.258  c
1093.00 878.055 1093.16 877.771 1093.16 877.406  c
1093.16 877.062 1093.05 876.799 1092.82 876.617  c
1092.59 876.435 1092.08 876.260 1091.30 876.094  c
1090.86 875.984 l
1090.09 875.828 1089.53 875.578 1089.18 875.234  c
1088.84 874.891 1088.66 874.427 1088.66 873.844  c
1088.66 873.115 1088.92 872.555 1089.43 872.164  c
1089.94 871.773 1090.66 871.578 1091.60 871.578  c
1092.07 871.578 1092.51 871.612 1092.92 871.680  c
1093.33 871.747 1093.71 871.849 1094.05 871.984  c
h
1103.02 875.281 m
1103.02 875.891 l
1097.22 875.891 l
1097.28 876.755 1097.55 877.414 1098.01 877.867  c
1098.47 878.320 1099.12 878.547 1099.95 878.547  c
1100.44 878.547 1100.92 878.490 1101.37 878.375  c
1101.82 878.260 1102.27 878.083 1102.72 877.844  c
1102.72 879.031 l
1102.26 879.219 1101.80 879.365 1101.32 879.469  c
1100.85 879.573 1100.37 879.625 1099.89 879.625  c
1098.66 879.625 1097.69 879.268 1096.98 878.555  c
1096.26 877.841 1095.91 876.880 1095.91 875.672  c
1095.91 874.411 1096.25 873.414 1096.92 872.680  c
1097.60 871.945 1098.52 871.578 1099.67 871.578  c
1100.70 871.578 1101.52 871.909 1102.12 872.570  c
1102.72 873.232 1103.02 874.135 1103.02 875.281  c
h
1101.75 874.906 m
1101.74 874.219 1101.55 873.669 1101.17 873.258  c
1100.80 872.846 1100.30 872.641 1099.69 872.641  c
1098.98 872.641 1098.42 872.841 1097.99 873.242  c
1097.57 873.643 1097.33 874.203 1097.27 874.922  c
1101.75 874.906 l
h
1109.51 872.937 m
1109.37 872.854 1109.22 872.794 1109.05 872.758  c
1108.89 872.721 1108.70 872.703 1108.51 872.703  c
1107.79 872.703 1107.24 872.935 1106.86 873.398  c
1106.48 873.862 1106.29 874.526 1106.29 875.391  c
1106.29 879.422 l
1105.02 879.422 l
1105.02 871.766 l
1106.29 871.766 l
1106.29 872.953 l
1106.56 872.484 1106.90 872.138 1107.33 871.914  c
1107.75 871.690 1108.26 871.578 1108.86 871.578  c
1108.96 871.578 1109.06 871.583 1109.16 871.594  c
1109.27 871.604 1109.38 871.625 1109.51 871.656  c
1109.51 872.937 l
h
f
2 J
10.0000 M
Q
q
q
[ 32.0000 0.00000 0.00000 32.0000 1189.24 842.290 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/ab6ii/'F*IpI?MN;#d.(AKcm1a)].T>'_6ii2RHP8KbhLm]u0XDB:]8m&H7a"!f+241l^Pjg>[W&
m4\rshm[IW1sL*,?#lB*_T[d8<>@rbA_H+eI=Y\caLeUUlPaW/VK!SG;&"cDD&II\ZVZ[P.a10iGb4*0
Y&2qFA^obnS6>DF8+-7<hcc=WRc\/r76es/cfWG<3HE>u@Hb:O?:B8^Q7pE:8J5X/*4_q\V_-EsS0H;%
K0##[4QW(']mfC2CZ.PsQ@JpgT9Ec4nV^cP.fKrJ+XG,~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1221.24 842.290 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIRr,D.ffk\?mD@Fn`fUgR?H([_]J0]%W'#a[U9b,,cO?92d\b8~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1307.36 842.290 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/bb6iht'Li'%J!(Kk&Y,X&$A.=@*@MUc:s!@=D47@m$(TfD!IM)t^3?.d$jP`/hDBE=^BfeY3).jc
d;t;YY+)<Q\o&>hLpef$^Nk2uOsJ5VU+"rOAZOh!LuUIdk64-_71hpf<Gb`@(K"14f6+tbCtj[JFeIsq
*chna08iAa,g3Kf-kKOI"\"lW=9K@pq<'U<5nHHs(/<9),*(]h/?q)&6mi&?5_0]JBng&`k;cQcSqrQU
E?&/T!k.TH+"(gXp:pDccXR?QaE:cN,l@q6cgk6<iV=QcN#<T~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1189.24 874.290 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+J#R!HnIQjI#7fj;75^*N:T_`Cn^s&<>lL([pb_U4^1OBA9StDXIT:_aJT:_bUa1l[=5Sj~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1307.36 874.290 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+:#QR0jINW&d!"tC/c:1tDAa8n8i'cF$e]cf3+u6L)\pJ&7_P65VkND$kkND$kkPt0]"dCDO
~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1189.24 880.860 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/aabk^I'L`!$Il_=s38qkk+UFf>E9"fY5fF=jUeo/#a\-jAeN4jlMQ2"F%k?.QmJB)jZ60D]_iQ.#
kP6b<kk**Fr650_r\+aTe!+G>j8NI(niVu-aL5qS;$92[XFD51Z7M1bEEuYtF\riMJ`F8p-'\CGgZEda
lT.a=htJ_GdPMCFhZj3#9)lWobHc4qLP\jDo/oF6KrV0*8gZpi5:]FVe@$s3N!Qf+:laR<QdGV,!EV6*
MP@m_8;ZC%ILm-bpV.nk#lJGd1f[O!#`JYCH-:\,?mse3.HiN,oOQhO^J`?"Y[6l^5D-d[r1,4=1`90
~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1221.24 880.860 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIS.IX!B<=G3u^agn`fUg&X(XR^a:U@$asIKG$tn^P18Op50,(;~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1307.36 880.860 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0L3=:C8'SYNEmjEu"U+"_D(4mZ+6lQM(:n3=%@-Zqb,c#_C!e)cb^"_oma)Q\R.#MJ:<Y,CZT(dZJ
D;0\nOCs!mBDnIs<E6GD3t0$1pN`?s,Y?HAa)Rh%.a)iL#%F4:JiJdWA_AaGf6*9&WU"jM7q,gb-&Nm!
7pOYgN8seaR\ig.bk&L94/K-nV]IOMBpsj)SeoFe;%sjs>usW<XAd2LF3K6Z&^RbaD;/cnLuZ;L^#4DG
`TENkQQqOPl,Q/7$==CuWiE:Kf6+SCET6OBh'l$WYDAZF?Btc$Hk_A/b')DJ+-d^u@K,R!IS:1I~>
Q
.600000 .800000 1.00000 RG
newpath
1202.24 860.290 m
1202.24 888.860 l
1202.24 891.622 1204.48 893.860 1207.24 893.860  c
1315.36 893.860 l
1318.13 893.860 1320.36 891.622 1320.36 888.860  c
1320.36 860.290 l
1320.36 857.528 1318.13 855.290 1315.36 855.290  c
1207.24 855.290 l
1204.48 855.290 1202.24 857.528 1202.24 860.290  c
h
f
0.00000 0.00000 0.00000 RG
.501961 .501961 .501961 RG
0 J
1.45000 M
newpath
1202.24 860.290 m
1202.24 888.860 l
1202.24 891.622 1204.48 893.860 1207.24 893.860  c
1315.36 893.860 l
1318.13 893.860 1320.36 891.622 1320.36 888.860  c
1320.36 860.290 l
1320.36 857.528 1318.13 855.290 1315.36 855.290  c
1207.24 855.290 l
1204.48 855.290 1202.24 857.528 1202.24 860.290  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [1202.2445068359375 855.2899169921875 1206.9898681640625 884.2391357421875]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
1204.74 865.290 m
1204.74 860.290 1207.24 857.790 1212.24 857.790  c
1269.02 857.790 l
1274.02 857.790 1276.52 860.290 1276.52 865.290  c
1276.52 870.290 1267.06 874.599 1248.13 878.218  c
1229.21 881.837 1217.24 883.646 1212.24 883.646  c
1207.24 883.646 1204.74 881.146 1204.74 876.146  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1231.93 871.766 m
1233.20 871.766 l
1233.20 879.422 l
1231.93 879.422 l
1231.93 871.766 l
h
1231.93 868.781 m
1233.20 868.781 l
1233.20 870.375 l
1231.93 870.375 l
1231.93 868.781 l
h
1242.20 874.797 m
1242.20 879.422 l
1240.93 879.422 l
1240.93 874.844 l
1240.93 874.115 1240.79 873.570 1240.51 873.211  c
1240.23 872.852 1239.81 872.672 1239.25 872.672  c
1238.57 872.672 1238.03 872.888 1237.64 873.320  c
1237.24 873.753 1237.04 874.344 1237.04 875.094  c
1237.04 879.422 l
1235.78 879.422 l
1235.78 871.766 l
1237.04 871.766 l
1237.04 872.953 l
1237.34 872.495 1237.70 872.151 1238.11 871.922  c
1238.52 871.693 1239.00 871.578 1239.53 871.578  c
1240.40 871.578 1241.07 871.852 1241.52 872.398  c
1241.97 872.945 1242.20 873.745 1242.20 874.797  c
h
1245.95 869.594 m
1245.95 871.766 l
1248.54 871.766 l
1248.54 872.750 l
1245.95 872.750 l
1245.95 876.906 l
1245.95 877.521 1246.03 877.919 1246.20 878.102  c
1246.38 878.284 1246.72 878.375 1247.24 878.375  c
1248.54 878.375 l
1248.54 879.422 l
1247.24 879.422 l
1246.27 879.422 1245.61 879.240 1245.24 878.875  c
1244.87 878.510 1244.68 877.854 1244.68 876.906  c
1244.68 872.750 l
1243.76 872.750 l
1243.76 871.766 l
1244.68 871.766 l
1244.68 869.594 l
1245.95 869.594 l
h
1256.75 875.281 m
1256.75 875.891 l
1250.95 875.891 l
1251.01 876.755 1251.28 877.414 1251.74 877.867  c
1252.20 878.320 1252.85 878.547 1253.69 878.547  c
1254.18 878.547 1254.65 878.490 1255.10 878.375  c
1255.55 878.260 1256.00 878.083 1256.45 877.844  c
1256.45 879.031 l
1255.99 879.219 1255.53 879.365 1255.05 879.469  c
1254.58 879.573 1254.10 879.625 1253.62 879.625  c
1252.39 879.625 1251.42 879.268 1250.71 878.555  c
1250.00 877.841 1249.64 876.880 1249.64 875.672  c
1249.64 874.411 1249.98 873.414 1250.65 872.680  c
1251.33 871.945 1252.25 871.578 1253.40 871.578  c
1254.44 871.578 1255.25 871.909 1255.85 872.570  c
1256.45 873.232 1256.75 874.135 1256.75 875.281  c
h
1255.48 874.906 m
1255.47 874.219 1255.28 873.669 1254.90 873.258  c
1254.53 872.846 1254.03 872.641 1253.42 872.641  c
1252.71 872.641 1252.15 872.841 1251.72 873.242  c
1251.30 873.643 1251.06 874.203 1251.00 874.922  c
1255.48 874.906 l
h
1263.24 872.937 m
1263.10 872.854 1262.95 872.794 1262.78 872.758  c
1262.62 872.721 1262.43 872.703 1262.24 872.703  c
1261.52 872.703 1260.97 872.935 1260.59 873.398  c
1260.21 873.862 1260.02 874.526 1260.02 875.391  c
1260.02 879.422 l
1258.75 879.422 l
1258.75 871.766 l
1260.02 871.766 l
1260.02 872.953 l
1260.29 872.484 1260.64 872.138 1261.06 871.914  c
1261.48 871.690 1261.99 871.578 1262.60 871.578  c
1262.69 871.578 1262.79 871.583 1262.89 871.594  c
1263.00 871.604 1263.11 871.625 1263.24 871.656  c
1263.24 872.937 l
h
1265.77 878.266 m
1265.77 882.328 l
1264.51 882.328 l
1264.51 871.766 l
1265.77 871.766 l
1265.77 872.922 l
1266.04 872.474 1266.38 872.138 1266.78 871.914  c
1267.18 871.690 1267.66 871.578 1268.23 871.578  c
1269.15 871.578 1269.91 871.948 1270.49 872.687  c
1271.08 873.427 1271.37 874.396 1271.37 875.594  c
1271.37 876.802 1271.08 877.776 1270.49 878.516  c
1269.91 879.255 1269.15 879.625 1268.23 879.625  c
1267.66 879.625 1267.18 879.513 1266.78 879.289  c
1266.38 879.065 1266.04 878.724 1265.77 878.266  c
h
1270.05 875.594 m
1270.05 874.677 1269.86 873.956 1269.48 873.430  c
1269.10 872.904 1268.58 872.641 1267.91 872.641  c
1267.25 872.641 1266.72 872.904 1266.34 873.430  c
1265.96 873.956 1265.77 874.677 1265.77 875.594  c
1265.77 876.521 1265.96 877.247 1266.34 877.773  c
1266.72 878.299 1267.25 878.562 1267.91 878.562  c
1268.58 878.562 1269.10 878.299 1269.48 877.773  c
1269.86 877.247 1270.05 876.521 1270.05 875.594  c
h
1277.88 872.937 m
1277.74 872.854 1277.59 872.794 1277.43 872.758  c
1277.26 872.721 1277.08 872.703 1276.88 872.703  c
1276.16 872.703 1275.61 872.935 1275.23 873.398  c
1274.85 873.862 1274.66 874.526 1274.66 875.391  c
1274.66 879.422 l
1273.39 879.422 l
1273.39 871.766 l
1274.66 871.766 l
1274.66 872.953 l
1274.93 872.484 1275.28 872.138 1275.70 871.914  c
1276.12 871.690 1276.63 871.578 1277.24 871.578  c
1277.33 871.578 1277.43 871.583 1277.54 871.594  c
1277.64 871.604 1277.75 871.625 1277.88 871.656  c
1277.88 872.937 l
h
1285.76 875.281 m
1285.76 875.891 l
1279.96 875.891 l
1280.03 876.755 1280.29 877.414 1280.75 877.867  c
1281.22 878.320 1281.86 878.547 1282.70 878.547  c
1283.19 878.547 1283.66 878.490 1284.11 878.375  c
1284.56 878.260 1285.02 878.083 1285.46 877.844  c
1285.46 879.031 l
1285.00 879.219 1284.54 879.365 1284.06 879.469  c
1283.59 879.573 1283.11 879.625 1282.64 879.625  c
1281.41 879.625 1280.43 879.268 1279.72 878.555  c
1279.01 877.841 1278.65 876.880 1278.65 875.672  c
1278.65 874.411 1278.99 873.414 1279.67 872.680  c
1280.34 871.945 1281.26 871.578 1282.42 871.578  c
1283.45 871.578 1284.26 871.909 1284.86 872.570  c
1285.46 873.232 1285.76 874.135 1285.76 875.281  c
h
1284.49 874.906 m
1284.48 874.219 1284.29 873.669 1283.92 873.258  c
1283.54 872.846 1283.05 872.641 1282.43 872.641  c
1281.72 872.641 1281.16 872.841 1280.74 873.242  c
1280.31 873.643 1280.07 874.203 1280.01 874.922  c
1284.49 874.906 l
h
1289.06 869.594 m
1289.06 871.766 l
1291.65 871.766 l
1291.65 872.750 l
1289.06 872.750 l
1289.06 876.906 l
1289.06 877.521 1289.15 877.919 1289.32 878.102  c
1289.49 878.284 1289.84 878.375 1290.36 878.375  c
1291.65 878.375 l
1291.65 879.422 l
1290.36 879.422 l
1289.39 879.422 1288.72 879.240 1288.35 878.875  c
1287.98 878.510 1287.80 877.854 1287.80 876.906  c
1287.80 872.750 l
1286.87 872.750 l
1286.87 871.766 l
1287.80 871.766 l
1287.80 869.594 l
1289.06 869.594 l
h
f
2 J
10.0000 M
Q
q
q
[ 32.0000 0.00000 0.00000 32.0000 1015.01 910.860 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/ab6ii/'F*IpI?MN;#d.(AKcm1a)].T>'_6ii2RHP8KbhLm]u0XDB:]8m&H7a"!f+241l^Pjg>[W&
m4\rshm[IW1sL*,?#lB*_T[d8<>@rbA_H+eI=Y\caLeUUlPaW/VK!SG;&"cDD&II\ZVZ[P.a10iGb4*0
Y&2qFA^obnS6>DF8+-7<hcc=WRc\/r76es/cfWG<3HE>u@Hb:O?:B8^Q7pE:8J5X/*4_q\V_-EsS0H;%
K0##[4QW(']mfC2CZ.PsQ@JpgT9Ec4nV^cP.fKrJ+XG,~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1047.01 910.860 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIRr,D.ffk\?mD@Fn`fUgR?H([_]J0]%W'#a[U9b,,cO?92d\b8~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1133.13 910.860 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/bb6iht'Li'%J!(Kk&Y,X&$A.=@*@MUc:s!@=D47@m$(TfD!IM)t^3?.d$jP`/hDBE=^BfeY3).jc
d;t;YY+)<Q\o&>hLpef$^Nk2uOsJ5VU+"rOAZOh!LuUIdk64-_71hpf<Gb`@(K"14f6+tbCtj[JFeIsq
*chna08iAa,g3Kf-kKOI"\"lW=9K@pq<'U<5nHHs(/<9),*(]h/?q)&6mi&?5_0]JBng&`k;cQcSqrQU
E?&/T!k.TH+"(gXp:pDccXR?QaE:cN,l@q6cgk6<iV=QcN#<T~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1015.01 942.860 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+J#R!HnIQjI#7fj;75^*N:T_`Cn^s&<>lL([pb_U4^1OBA9StDXIT:_aJT:_bUa1l[=5Sj~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1133.13 942.860 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+:#QR0jINW&d!"tC/c:1tDAa8n8i'cF$e]cf3+u6L)\pJ&7_P65VkND$kkND$kkPt0]"dCDO
~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1015.01 949.431 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/aabk^I'L`!$Il_=s38qkk+UFf>E9"fY5fF=jUeo/#a\-jAeN4jlMQ2"F%k?.QmJB)jZ60D]_iQ.#
kP6b<kk**Fr650_r\+aTe!+G>j8NI(niVu-aL5qS;$92[XFD51Z7M1bEEuYtF\riMJ`F8p-'\CGgZEda
lT.a=htJ_GdPMCFhZj3#9)lWobHc4qLP\jDo/oF6KrV0*8gZpi5:]FVe@$s3N!Qf+:laR<QdGV,!EV6*
MP@m_8;ZC%ILm-bpV.nk#lJGd1f[O!#`JYCH-:\,?mse3.HiN,oOQhO^J`?"Y[6l^5D-d[r1,4=1`90
~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1047.01 949.431 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIS.IX!B<=G3u^agn`fUg&X(XR^a:U@$asIKG$tn^P18Op50,(;~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1133.13 949.431 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0L3=:C8'SYNEmjEu"U+"_D(4mZ+6lQM(:n3=%@-Zqb,c#_C!e)cb^"_oma)Q\R.#MJ:<Y,CZT(dZJ
D;0\nOCs!mBDnIs<E6GD3t0$1pN`?s,Y?HAa)Rh%.a)iL#%F4:JiJdWA_AaGf6*9&WU"jM7q,gb-&Nm!
7pOYgN8seaR\ig.bk&L94/K-nV]IOMBpsj)SeoFe;%sjs>usW<XAd2LF3K6Z&^RbaD;/cnLuZ;L^#4DG
`TENkQQqOPl,Q/7$==CuWiE:Kf6+SCET6OBh'l$WYDAZF?Btc$Hk_A/b')DJ+-d^u@K,R!IS:1I~>
Q
.874510 .870588 .870588 RG
newpath
1028.01 928.860 m
1028.01 957.431 l
1028.01 960.192 1030.25 962.431 1033.01 962.431  c
1141.13 962.431 l
1143.89 962.431 1146.13 960.192 1146.13 957.431  c
1146.13 928.860 l
1146.13 926.099 1143.89 923.860 1141.13 923.860  c
1033.01 923.860 l
1030.25 923.860 1028.01 926.099 1028.01 928.860  c
h
f
0.00000 0.00000 0.00000 RG
.501961 .501961 .501961 RG
0 J
1.45000 M
newpath
1028.01 928.860 m
1028.01 957.431 l
1028.01 960.192 1030.25 962.431 1033.01 962.431  c
1141.13 962.431 l
1143.89 962.431 1146.13 960.192 1146.13 957.431  c
1146.13 928.860 l
1146.13 926.099 1143.89 923.860 1141.13 923.860  c
1033.01 923.860 l
1030.25 923.860 1028.01 926.099 1028.01 928.860  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [1028.0087890625 923.8603515625 1032.754150390625 952.8095703125]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
1030.51 933.860 m
1030.51 928.860 1033.01 926.360 1038.01 926.360  c
1094.79 926.360 l
1099.79 926.360 1102.29 928.860 1102.29 933.860  c
1102.29 938.860 1092.82 943.170 1073.90 946.789  c
1054.97 950.407 1043.01 952.217 1038.01 952.217  c
1033.01 952.217 1030.51 949.717 1030.51 944.717  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1056.91 943.852 m
1056.91 944.461 l
1051.11 944.461 l
1051.17 945.326 1051.44 945.984 1051.90 946.438  c
1052.36 946.891 1053.01 947.117 1053.85 947.117  c
1054.34 947.117 1054.81 947.060 1055.26 946.945  c
1055.71 946.831 1056.16 946.654 1056.61 946.414  c
1056.61 947.602 l
1056.15 947.789 1055.69 947.935 1055.21 948.039  c
1054.74 948.143 1054.26 948.195 1053.78 948.195  c
1052.55 948.195 1051.58 947.839 1050.87 947.125  c
1050.16 946.412 1049.80 945.451 1049.80 944.242  c
1049.80 942.982 1050.14 941.984 1050.81 941.250  c
1051.49 940.516 1052.41 940.148 1053.56 940.148  c
1054.60 940.148 1055.41 940.479 1056.01 941.141  c
1056.61 941.802 1056.91 942.706 1056.91 943.852  c
h
1055.64 943.477 m
1055.63 942.789 1055.44 942.240 1055.06 941.828  c
1054.69 941.417 1054.20 941.211 1053.58 941.211  c
1052.87 941.211 1052.31 941.412 1051.89 941.813  c
1051.46 942.214 1051.22 942.773 1051.16 943.492  c
1055.64 943.477 l
h
1065.33 940.336 m
1062.57 944.055 l
1065.47 947.992 l
1063.99 947.992 l
1061.76 944.977 l
1059.54 947.992 l
1058.05 947.992 l
1061.02 943.992 l
1058.30 940.336 l
1059.79 940.336 l
1061.82 943.070 l
1063.85 940.336 l
1065.33 940.336 l
h
1068.46 946.836 m
1068.46 950.898 l
1067.20 950.898 l
1067.20 940.336 l
1068.46 940.336 l
1068.46 941.492 l
1068.73 941.044 1069.07 940.708 1069.47 940.484  c
1069.87 940.260 1070.35 940.148 1070.92 940.148  c
1071.84 940.148 1072.60 940.518 1073.18 941.258  c
1073.77 941.997 1074.06 942.966 1074.06 944.164  c
1074.06 945.372 1073.77 946.346 1073.18 947.086  c
1072.60 947.826 1071.84 948.195 1070.92 948.195  c
1070.35 948.195 1069.87 948.083 1069.47 947.859  c
1069.07 947.635 1068.73 947.294 1068.46 946.836  c
h
1072.74 944.164 m
1072.74 943.247 1072.55 942.526 1072.17 942.000  c
1071.79 941.474 1071.27 941.211 1070.60 941.211  c
1069.94 941.211 1069.41 941.474 1069.03 942.000  c
1068.65 942.526 1068.46 943.247 1068.46 944.164  c
1068.46 945.091 1068.65 945.818 1069.03 946.344  c
1069.41 946.870 1069.94 947.133 1070.60 947.133  c
1071.27 947.133 1071.79 946.870 1072.17 946.344  c
1072.55 945.818 1072.74 945.091 1072.74 944.164  c
h
1080.57 941.508 m
1080.43 941.425 1080.28 941.365 1080.12 941.328  c
1079.95 941.292 1079.77 941.273 1079.57 941.273  c
1078.85 941.273 1078.30 941.505 1077.92 941.969  c
1077.54 942.432 1077.35 943.096 1077.35 943.961  c
1077.35 947.992 l
1076.08 947.992 l
1076.08 940.336 l
1077.35 940.336 l
1077.35 941.523 l
1077.62 941.055 1077.97 940.708 1078.39 940.484  c
1078.81 940.260 1079.32 940.148 1079.93 940.148  c
1080.02 940.148 1080.12 940.154 1080.22 940.164  c
1080.33 940.175 1080.44 940.195 1080.57 940.227  c
1080.57 941.508 l
h
1088.45 943.852 m
1088.45 944.461 l
1082.65 944.461 l
1082.72 945.326 1082.98 945.984 1083.44 946.438  c
1083.91 946.891 1084.55 947.117 1085.39 947.117  c
1085.88 947.117 1086.35 947.060 1086.80 946.945  c
1087.25 946.831 1087.70 946.654 1088.15 946.414  c
1088.15 947.602 l
1087.69 947.789 1087.23 947.935 1086.75 948.039  c
1086.28 948.143 1085.80 948.195 1085.32 948.195  c
1084.10 948.195 1083.12 947.839 1082.41 947.125  c
1081.70 946.412 1081.34 945.451 1081.34 944.242  c
1081.34 942.982 1081.68 941.984 1082.36 941.250  c
1083.03 940.516 1083.95 940.148 1085.11 940.148  c
1086.14 940.148 1086.95 940.479 1087.55 941.141  c
1088.15 941.802 1088.45 942.706 1088.45 943.852  c
h
1087.18 943.477 m
1087.17 942.789 1086.98 942.240 1086.61 941.828  c
1086.23 941.417 1085.74 941.211 1085.12 941.211  c
1084.41 941.211 1083.85 941.412 1083.43 941.813  c
1083.00 942.214 1082.76 942.773 1082.70 943.492  c
1087.18 943.477 l
h
1095.39 940.555 m
1095.39 941.758 l
1095.04 941.570 1094.67 941.432 1094.28 941.344  c
1093.90 941.255 1093.50 941.211 1093.09 941.211  c
1092.47 941.211 1092.00 941.305 1091.69 941.492  c
1091.38 941.680 1091.22 941.966 1091.22 942.352  c
1091.22 942.643 1091.33 942.872 1091.56 943.039  c
1091.78 943.206 1092.23 943.362 1092.91 943.508  c
1093.33 943.617 l
1094.22 943.805 1094.86 944.073 1095.23 944.422  c
1095.61 944.771 1095.80 945.258 1095.80 945.883  c
1095.80 946.591 1095.52 947.154 1094.95 947.570  c
1094.39 947.987 1093.62 948.195 1092.64 948.195  c
1092.22 948.195 1091.79 948.154 1091.35 948.070  c
1090.91 947.987 1090.44 947.867 1089.95 947.711  c
1089.95 946.414 l
1090.41 946.654 1090.87 946.833 1091.32 946.953  c
1091.77 947.073 1092.22 947.133 1092.66 947.133  c
1093.25 947.133 1093.71 947.031 1094.02 946.828  c
1094.34 946.625 1094.50 946.341 1094.50 945.977  c
1094.50 945.633 1094.39 945.370 1094.16 945.188  c
1093.93 945.005 1093.42 944.831 1092.64 944.664  c
1092.20 944.555 l
1091.43 944.398 1090.87 944.148 1090.52 943.805  c
1090.17 943.461 1090.00 942.997 1090.00 942.414  c
1090.00 941.685 1090.26 941.125 1090.77 940.734  c
1091.28 940.344 1092.00 940.148 1092.94 940.148  c
1093.41 940.148 1093.85 940.182 1094.26 940.250  c
1094.67 940.318 1095.05 940.419 1095.39 940.555  c
h
1102.68 940.555 m
1102.68 941.758 l
1102.33 941.570 1101.96 941.432 1101.58 941.344  c
1101.19 941.255 1100.79 941.211 1100.39 941.211  c
1099.76 941.211 1099.29 941.305 1098.98 941.492  c
1098.67 941.680 1098.51 941.966 1098.51 942.352  c
1098.51 942.643 1098.63 942.872 1098.85 943.039  c
1099.07 943.206 1099.52 943.362 1100.20 943.508  c
1100.62 943.617 l
1101.52 943.805 1102.15 944.073 1102.53 944.422  c
1102.90 944.771 1103.09 945.258 1103.09 945.883  c
1103.09 946.591 1102.81 947.154 1102.25 947.570  c
1101.68 947.987 1100.91 948.195 1099.93 948.195  c
1099.52 948.195 1099.09 948.154 1098.65 948.070  c
1098.20 947.987 1097.74 947.867 1097.25 947.711  c
1097.25 946.414 l
1097.71 946.654 1098.16 946.833 1098.61 946.953  c
1099.07 947.073 1099.51 947.133 1099.95 947.133  c
1100.54 947.133 1101.00 947.031 1101.32 946.828  c
1101.64 946.625 1101.79 946.341 1101.79 945.977  c
1101.79 945.633 1101.68 945.370 1101.45 945.188  c
1101.22 945.005 1100.72 944.831 1099.93 944.664  c
1099.50 944.555 l
1098.73 944.398 1098.17 944.148 1097.82 943.805  c
1097.47 943.461 1097.29 942.997 1097.29 942.414  c
1097.29 941.685 1097.55 941.125 1098.06 940.734  c
1098.57 940.344 1099.29 940.148 1100.23 940.148  c
1100.70 940.148 1101.14 940.182 1101.55 940.250  c
1101.96 940.318 1102.34 940.419 1102.68 940.555  c
h
1105.09 940.336 m
1106.35 940.336 l
1106.35 947.992 l
1105.09 947.992 l
1105.09 940.336 l
h
1105.09 937.352 m
1106.35 937.352 l
1106.35 938.945 l
1105.09 938.945 l
1105.09 937.352 l
h
1111.95 941.211 m
1111.28 941.211 1110.75 941.474 1110.35 942.000  c
1109.96 942.526 1109.76 943.247 1109.76 944.164  c
1109.76 945.081 1109.95 945.802 1110.35 946.328  c
1110.74 946.854 1111.27 947.117 1111.95 947.117  c
1112.62 947.117 1113.16 946.854 1113.55 946.328  c
1113.94 945.802 1114.13 945.081 1114.13 944.164  c
1114.13 943.258 1113.94 942.539 1113.55 942.008  c
1113.16 941.477 1112.62 941.211 1111.95 941.211  c
h
1111.95 940.148 m
1113.04 940.148 1113.90 940.505 1114.52 941.219  c
1115.15 941.932 1115.46 942.914 1115.46 944.164  c
1115.46 945.425 1115.15 946.412 1114.52 947.125  c
1113.90 947.839 1113.04 948.195 1111.95 948.195  c
1110.85 948.195 1109.99 947.839 1109.37 947.125  c
1108.74 946.412 1108.43 945.425 1108.43 944.164  c
1108.43 942.914 1108.74 941.932 1109.37 941.219  c
1109.99 940.505 1110.85 940.148 1111.95 940.148  c
h
1123.92 943.367 m
1123.92 947.992 l
1122.65 947.992 l
1122.65 943.414 l
1122.65 942.685 1122.51 942.141 1122.23 941.781  c
1121.95 941.422 1121.53 941.242 1120.97 941.242  c
1120.29 941.242 1119.75 941.458 1119.36 941.891  c
1118.96 942.323 1118.76 942.914 1118.76 943.664  c
1118.76 947.992 l
1117.50 947.992 l
1117.50 940.336 l
1118.76 940.336 l
1118.76 941.523 l
1119.06 941.065 1119.42 940.721 1119.83 940.492  c
1120.24 940.263 1120.72 940.148 1121.25 940.148  c
1122.12 940.148 1122.79 940.422 1123.24 940.969  c
1123.69 941.516 1123.92 942.315 1123.92 943.367  c
h
f
2 J
10.0000 M
Q
0 J
1.45000 M
newpath
971.918 874.575 m
1020.00 874.575 l
S
newpath
1028.00 874.575 m
1016.00 869.575 l
1019.00 874.575 l
1016.00 879.575 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
1146.15 874.575 m
1194.24 874.575 l
S
newpath
1202.24 874.575 m
1190.24 869.575 l
1193.24 874.575 l
1190.24 879.575 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
1087.07 893.865 m
1087.07 915.891 l
S
newpath
1087.07 923.891 m
1092.07 911.891 l
1087.07 914.891 l
1082.07 911.891 l
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
