%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 318 575 473
%%Creator: yExport 1.2
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Monday, December 12, 2011 11:59:59 PM CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
498 138 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
498.000 0.00000 l
498.000 138.000 l
0.00000 138.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 498 138 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -838.000 -194.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
838.000 194.000 m
1336.00 194.000 l
1336.00 332.000 l
838.000 332.000 l
838.000 194.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -838.000 -194.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -838.000 -194.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -838.000 -194.000 ] defaultmatrix matrix concatmatrix setmatrix
q
q
[ 32.0000 0.00000 0.00000 32.0000 840.773 196.851 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/ab6ii/'F*IpI?MN;#d.(AKcm1a)].T>'_6ii2RHP8KbhLm]u0XDB:]8m&H7a"!f+241l^Pjg>[W&
m4\rshm[IW1sL*,?#lB*_T[d8<>@rbA_H+eI=Y\caLeUUlPaW/VK!SG;&"cDD&II\ZVZ[P.a10iGb4*0
Y&2qFA^obnS6>DF8+-7<hcc=WRc\/r76es/cfWG<3HE>u@Hb:O?:B8^Q7pE:8J5X/*4_q\V_-EsS0H;%
K0##[4QW(']mfC2CZ.PsQ@JpgT9Ec4nV^cP.fKrJ+XG,~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 872.773 196.851 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIRr,D.ffk\?mD@Fn`fUgR?H([_]J0]%W'#a[U9b,,cO?92d\b8~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 958.893 196.851 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/bb6iht'Li'%J!(Kk&Y,X&$A.=@*@MUc:s!@=D47@m$(TfD!IM)t^3?.d$jP`/hDBE=^BfeY3).jc
d;t;YY+)<Q\o&>hLpef$^Nk2uOsJ5VU+"rOAZOh!LuUIdk64-_71hpf<Gb`@(K"14f6+tbCtj[JFeIsq
*chna08iAa,g3Kf-kKOI"\"lW=9K@pq<'U<5nHHs(/<9),*(]h/?q)&6mi&?5_0]JBng&`k;cQcSqrQU
E?&/T!k.TH+"(gXp:pDccXR?QaE:cN,l@q6cgk6<iV=QcN#<T~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 840.773 228.851 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+J#R!HnIQjI#7fj;75^*N:T_`Cn^s&<>lL([pb_U4^1OBA9StDXIT:_aJT:_bUa1l[=5Sj~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 958.893 228.851 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+:#QR0jINW&d!"tC/c:1tDAa8n8i'cF$e]cf3+u6L)\pJ&7_P65VkND$kkND$kkPt0]"dCDO
~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 840.773 235.421 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/aabk^I'L`!$Il_=s38qkk+UFf>E9"fY5fF=jUeo/#a\-jAeN4jlMQ2"F%k?.QmJB)jZ60D]_iQ.#
kP6b<kk**Fr650_r\+aTe!+G>j8NI(niVu-aL5qS;$92[XFD51Z7M1bEEuYtF\riMJ`F8p-'\CGgZEda
lT.a=htJ_GdPMCFhZj3#9)lWobHc4qLP\jDo/oF6KrV0*8gZpi5:]FVe@$s3N!Qf+:laR<QdGV,!EV6*
MP@m_8;ZC%ILm-bpV.nk#lJGd1f[O!#`JYCH-:\,?mse3.HiN,oOQhO^J`?"Y[6l^5D-d[r1,4=1`90
~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 872.773 235.421 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIS.IX!B<=G3u^agn`fUg&X(XR^a:U@$asIKG$tn^P18Op50,(;~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 958.893 235.421 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0L3=:C8'SYNEmjEu"U+"_D(4mZ+6lQM(:n3=%@-Zqb,c#_C!e)cb^"_oma)Q\R.#MJ:<Y,CZT(dZJ
D;0\nOCs!mBDnIs<E6GD3t0$1pN`?s,Y?HAa)Rh%.a)iL#%F4:JiJdWA_AaGf6*9&WU"jM7q,gb-&Nm!
7pOYgN8seaR\ig.bk&L94/K-nV]IOMBpsj)SeoFe;%sjs>usW<XAd2LF3K6Z&^RbaD;/cnLuZ;L^#4DG
`TENkQQqOPl,Q/7$==CuWiE:Kf6+SCET6OBh'l$WYDAZF?Btc$Hk_A/b')DJ+-d^u@K,R!IS:1I~>
Q
.600000 .800000 1.00000 RG
newpath
853.773 214.851 m
853.773 243.421 l
853.773 246.183 856.012 248.421 858.773 248.421  c
966.893 248.421 l
969.654 248.421 971.893 246.183 971.893 243.421  c
971.893 214.851 l
971.893 212.089 969.654 209.851 966.893 209.851  c
858.773 209.851 l
856.012 209.851 853.773 212.089 853.773 214.851  c
h
f
0.00000 0.00000 0.00000 RG
.501961 .501961 .501961 RG
0 J
1.45000 M
newpath
853.773 214.851 m
853.773 243.421 l
853.773 246.183 856.012 248.421 858.773 248.421  c
966.893 248.421 l
969.654 248.421 971.893 246.183 971.893 243.421  c
971.893 214.851 l
971.893 212.089 969.654 209.851 966.893 209.851  c
858.773 209.851 l
856.012 209.851 853.773 212.089 853.773 214.851  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [853.7730102539062 209.85081481933594 858.5183715820312 238.80006408691406]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
856.273 219.851 m
856.273 214.851 858.773 212.351 863.773 212.351  c
920.551 212.351 l
925.551 212.351 928.051 214.851 928.051 219.851  c
928.051 224.851 918.588 229.160 899.662 232.779  c
880.736 236.398 868.773 238.207 863.773 238.207  c
858.773 238.207 856.273 235.707 856.273 230.707  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
891.193 226.545 m
891.193 227.748 l
890.839 227.561 890.469 227.423 890.084 227.334  c
889.699 227.246 889.303 227.201 888.896 227.201  c
888.271 227.201 887.803 227.295 887.490 227.483  c
887.178 227.670 887.021 227.957 887.021 228.342  c
887.021 228.634 887.133 228.863 887.357 229.030  c
887.581 229.196 888.032 229.353 888.709 229.498  c
889.131 229.608 l
890.027 229.795 890.662 230.063 891.037 230.412  c
891.412 230.761 891.600 231.248 891.600 231.873  c
891.600 232.582 891.318 233.144 890.756 233.561  c
890.193 233.978 889.423 234.186 888.443 234.186  c
888.027 234.186 887.597 234.144 887.154 234.061  c
886.712 233.978 886.245 233.858 885.756 233.701  c
885.756 232.405 l
886.214 232.644 886.670 232.824 887.123 232.944  c
887.576 233.063 888.021 233.123 888.459 233.123  c
889.053 233.123 889.508 233.022 889.826 232.819  c
890.144 232.616 890.303 232.332 890.303 231.967  c
890.303 231.623 890.188 231.360 889.959 231.178  c
889.730 230.996 889.225 230.821 888.443 230.655  c
888.006 230.545 l
887.235 230.389 886.675 230.139 886.326 229.795  c
885.977 229.451 885.803 228.988 885.803 228.405  c
885.803 227.675 886.058 227.116 886.568 226.725  c
887.079 226.334 887.803 226.139 888.740 226.139  c
889.209 226.139 889.649 226.173 890.061 226.241  c
890.472 226.308 890.850 226.410 891.193 226.545  c
h
899.112 226.623 m
899.112 227.795 l
898.758 227.597 898.401 227.449 898.042 227.350  c
897.683 227.251 897.321 227.201 896.956 227.201  c
896.144 227.201 895.511 227.462 895.058 227.983  c
894.604 228.504 894.378 229.228 894.378 230.155  c
894.378 231.092 894.604 231.819 895.058 232.334  c
895.511 232.850 896.144 233.108 896.956 233.108  c
897.321 233.108 897.683 233.061 898.042 232.967  c
898.401 232.873 898.758 232.728 899.112 232.530  c
899.112 233.686 l
898.758 233.853 898.394 233.978 898.019 234.061  c
897.644 234.144 897.248 234.186 896.831 234.186  c
895.675 234.186 894.756 233.824 894.073 233.100  c
893.391 232.376 893.050 231.394 893.050 230.155  c
893.050 228.915 893.394 227.936 894.081 227.217  c
894.769 226.498 895.711 226.139 896.909 226.139  c
897.295 226.139 897.672 226.178 898.042 226.256  c
898.412 226.334 898.769 226.457 899.112 226.623  c
h
904.778 230.139 m
903.768 230.139 903.065 230.254 902.669 230.483  c
902.273 230.712 902.075 231.108 902.075 231.670  c
902.075 232.118 902.224 232.472 902.521 232.733  c
902.817 232.993 903.216 233.123 903.716 233.123  c
904.414 233.123 904.974 232.876 905.396 232.381  c
905.817 231.886 906.028 231.233 906.028 230.420  c
906.028 230.139 l
904.778 230.139 l
h
907.294 229.608 m
907.294 233.983 l
906.028 233.983 l
906.028 232.826 l
905.747 233.285 905.390 233.626 904.958 233.850  c
904.526 234.074 904.002 234.186 903.388 234.186  c
902.606 234.186 901.984 233.964 901.521 233.522  c
901.057 233.079 900.825 232.488 900.825 231.748  c
900.825 230.894 901.114 230.248 901.692 229.811  c
902.271 229.373 903.127 229.155 904.263 229.155  c
906.028 229.155 l
906.028 229.030 l
906.028 228.446 905.838 227.996 905.458 227.678  c
905.078 227.360 904.544 227.201 903.856 227.201  c
903.419 227.201 902.992 227.256 902.575 227.366  c
902.159 227.475 901.763 227.634 901.388 227.842  c
901.388 226.670 l
901.846 226.493 902.291 226.360 902.724 226.272  c
903.156 226.183 903.575 226.139 903.981 226.139  c
905.096 226.139 905.927 226.425 906.474 226.998  c
907.021 227.571 907.294 228.441 907.294 229.608  c
h
916.248 229.358 m
916.248 233.983 l
914.982 233.983 l
914.982 229.405 l
914.982 228.675 914.842 228.131 914.561 227.772  c
914.279 227.412 913.857 227.233 913.295 227.233  c
912.618 227.233 912.081 227.449 911.686 227.881  c
911.290 228.313 911.092 228.905 911.092 229.655  c
911.092 233.983 l
909.826 233.983 l
909.826 226.326 l
911.092 226.326 l
911.092 227.514 l
911.394 227.056 911.751 226.712 912.162 226.483  c
912.574 226.254 913.045 226.139 913.576 226.139  c
914.451 226.139 915.115 226.412 915.568 226.959  c
916.021 227.506 916.248 228.306 916.248 229.358  c
h
925.121 229.358 m
925.121 233.983 l
923.855 233.983 l
923.855 229.405 l
923.855 228.675 923.715 228.131 923.434 227.772  c
923.152 227.412 922.730 227.233 922.168 227.233  c
921.491 227.233 920.954 227.449 920.559 227.881  c
920.163 228.313 919.965 228.905 919.965 229.655  c
919.965 233.983 l
918.699 233.983 l
918.699 226.326 l
919.965 226.326 l
919.965 227.514 l
920.267 227.056 920.624 226.712 921.035 226.483  c
921.447 226.254 921.918 226.139 922.449 226.139  c
923.324 226.139 923.988 226.412 924.441 226.959  c
924.895 227.506 925.121 228.306 925.121 229.358  c
h
934.182 229.842 m
934.182 230.451 l
928.385 230.451 l
928.447 231.316 928.710 231.975 929.174 232.428  c
929.637 232.881 930.286 233.108 931.119 233.108  c
931.609 233.108 932.080 233.050 932.533 232.936  c
932.986 232.821 933.437 232.644 933.885 232.405  c
933.885 233.592 l
933.426 233.780 932.960 233.925 932.486 234.030  c
932.012 234.134 931.536 234.186 931.057 234.186  c
929.827 234.186 928.856 233.829 928.143 233.116  c
927.429 232.402 927.072 231.441 927.072 230.233  c
927.072 228.972 927.411 227.975 928.088 227.241  c
928.765 226.506 929.682 226.139 930.838 226.139  c
931.869 226.139 932.684 226.470 933.283 227.131  c
933.882 227.793 934.182 228.696 934.182 229.842  c
h
932.916 229.467 m
932.906 228.780 932.713 228.230 932.338 227.819  c
931.963 227.407 931.468 227.201 930.854 227.201  c
930.145 227.201 929.580 227.402 929.158 227.803  c
928.736 228.204 928.494 228.764 928.432 229.483  c
932.916 229.467 l
h
940.670 227.498 m
940.535 227.415 940.383 227.355 940.217 227.319  c
940.050 227.282 939.868 227.264 939.670 227.264  c
938.951 227.264 938.402 227.496 938.021 227.959  c
937.641 228.423 937.451 229.087 937.451 229.951  c
937.451 233.983 l
936.186 233.983 l
936.186 226.326 l
937.451 226.326 l
937.451 227.514 l
937.722 227.045 938.068 226.699 938.490 226.475  c
938.912 226.251 939.425 226.139 940.029 226.139  c
940.123 226.139 940.222 226.144 940.326 226.155  c
940.430 226.165 940.545 226.186 940.670 226.217  c
940.670 227.498 l
h
f
2 J
10.0000 M
Q
q
q
[ 32.0000 0.00000 0.00000 32.0000 1015.01 196.851 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/ab6ii/'F*IpI?MN;#d.(AKcm1a)].T>'_6ii2RHP8KbhLm]u0XDB:]8m&H7a"!f+241l^Pjg>[W&
m4\rshm[IW1sL*,?#lB*_T[d8<>@rbA_H+eI=Y\caLeUUlPaW/VK!SG;&"cDD&II\ZVZ[P.a10iGb4*0
Y&2qFA^obnS6>DF8+-7<hcc=WRc\/r76es/cfWG<3HE>u@Hb:O?:B8^Q7pE:8J5X/*4_q\V_-EsS0H;%
K0##[4QW(']mfC2CZ.PsQ@JpgT9Ec4nV^cP.fKrJ+XG,~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1047.01 196.851 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIRr,D.ffk\?mD@Fn`fUgR?H([_]J0]%W'#a[U9b,,cO?92d\b8~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1133.13 196.851 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/bb6iht'Li'%J!(Kk&Y,X&$A.=@*@MUc:s!@=D47@m$(TfD!IM)t^3?.d$jP`/hDBE=^BfeY3).jc
d;t;YY+)<Q\o&>hLpef$^Nk2uOsJ5VU+"rOAZOh!LuUIdk64-_71hpf<Gb`@(K"14f6+tbCtj[JFeIsq
*chna08iAa,g3Kf-kKOI"\"lW=9K@pq<'U<5nHHs(/<9),*(]h/?q)&6mi&?5_0]JBng&`k;cQcSqrQU
E?&/T!k.TH+"(gXp:pDccXR?QaE:cN,l@q6cgk6<iV=QcN#<T~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1015.01 228.851 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+J#R!HnIQjI#7fj;75^*N:T_`Cn^s&<>lL([pb_U4^1OBA9StDXIT:_aJT:_bUa1l[=5Sj~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1133.13 228.851 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+:#QR0jINW&d!"tC/c:1tDAa8n8i'cF$e]cf3+u6L)\pJ&7_P65VkND$kkND$kkPt0]"dCDO
~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1015.01 235.421 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/aabk^I'L`!$Il_=s38qkk+UFf>E9"fY5fF=jUeo/#a\-jAeN4jlMQ2"F%k?.QmJB)jZ60D]_iQ.#
kP6b<kk**Fr650_r\+aTe!+G>j8NI(niVu-aL5qS;$92[XFD51Z7M1bEEuYtF\riMJ`F8p-'\CGgZEda
lT.a=htJ_GdPMCFhZj3#9)lWobHc4qLP\jDo/oF6KrV0*8gZpi5:]FVe@$s3N!Qf+:laR<QdGV,!EV6*
MP@m_8;ZC%ILm-bpV.nk#lJGd1f[O!#`JYCH-:\,?mse3.HiN,oOQhO^J`?"Y[6l^5D-d[r1,4=1`90
~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1047.01 235.421 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIS.IX!B<=G3u^agn`fUg&X(XR^a:U@$asIKG$tn^P18Op50,(;~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1133.13 235.421 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0L3=:C8'SYNEmjEu"U+"_D(4mZ+6lQM(:n3=%@-Zqb,c#_C!e)cb^"_oma)Q\R.#MJ:<Y,CZT(dZJ
D;0\nOCs!mBDnIs<E6GD3t0$1pN`?s,Y?HAa)Rh%.a)iL#%F4:JiJdWA_AaGf6*9&WU"jM7q,gb-&Nm!
7pOYgN8seaR\ig.bk&L94/K-nV]IOMBpsj)SeoFe;%sjs>usW<XAd2LF3K6Z&^RbaD;/cnLuZ;L^#4DG
`TENkQQqOPl,Q/7$==CuWiE:Kf6+SCET6OBh'l$WYDAZF?Btc$Hk_A/b')DJ+-d^u@K,R!IS:1I~>
Q
.874510 .870588 .870588 RG
newpath
1028.01 214.851 m
1028.01 243.421 l
1028.01 246.183 1030.25 248.421 1033.01 248.421  c
1141.13 248.421 l
1143.89 248.421 1146.13 246.183 1146.13 243.421  c
1146.13 214.851 l
1146.13 212.089 1143.89 209.851 1141.13 209.851  c
1033.01 209.851 l
1030.25 209.851 1028.01 212.089 1028.01 214.851  c
h
f
0.00000 0.00000 0.00000 RG
.501961 .501961 .501961 RG
0 J
1.45000 M
newpath
1028.01 214.851 m
1028.01 243.421 l
1028.01 246.183 1030.25 248.421 1033.01 248.421  c
1141.13 248.421 l
1143.89 248.421 1146.13 246.183 1146.13 243.421  c
1146.13 214.851 l
1146.13 212.089 1143.89 209.851 1141.13 209.851  c
1033.01 209.851 l
1030.25 209.851 1028.01 212.089 1028.01 214.851  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [1028.0087890625 209.85081481933594 1032.754150390625 238.80006408691406]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
1030.51 219.851 m
1030.51 214.851 1033.01 212.351 1038.01 212.351  c
1094.79 212.351 l
1099.79 212.351 1102.29 214.851 1102.29 219.851  c
1102.29 224.851 1092.82 229.160 1073.90 232.779  c
1054.97 236.398 1043.01 238.207 1038.01 238.207  c
1033.01 238.207 1030.51 235.707 1030.51 230.707  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1067.16 232.826 m
1067.16 236.889 l
1065.89 236.889 l
1065.89 226.326 l
1067.16 226.326 l
1067.16 227.483 l
1067.43 227.035 1067.76 226.699 1068.17 226.475  c
1068.57 226.251 1069.05 226.139 1069.61 226.139  c
1070.54 226.139 1071.29 226.509 1071.88 227.248  c
1072.46 227.988 1072.75 228.957 1072.75 230.155  c
1072.75 231.363 1072.46 232.337 1071.88 233.076  c
1071.29 233.816 1070.54 234.186 1069.61 234.186  c
1069.05 234.186 1068.57 234.074 1068.17 233.850  c
1067.76 233.626 1067.43 233.285 1067.16 232.826  c
h
1071.44 230.155 m
1071.44 229.238 1071.25 228.517 1070.87 227.991  c
1070.49 227.464 1069.96 227.201 1069.30 227.201  c
1068.63 227.201 1068.11 227.464 1067.73 227.991  c
1067.35 228.517 1067.16 229.238 1067.16 230.155  c
1067.16 231.082 1067.35 231.808 1067.73 232.334  c
1068.11 232.860 1068.63 233.123 1069.30 233.123  c
1069.96 233.123 1070.49 232.860 1070.87 232.334  c
1071.25 231.808 1071.44 231.082 1071.44 230.155  c
h
1078.31 230.139 m
1077.30 230.139 1076.60 230.254 1076.20 230.483  c
1075.80 230.712 1075.61 231.108 1075.61 231.670  c
1075.61 232.118 1075.76 232.472 1076.05 232.733  c
1076.35 232.993 1076.75 233.123 1077.25 233.123  c
1077.95 233.123 1078.51 232.876 1078.93 232.381  c
1079.35 231.886 1079.56 231.233 1079.56 230.420  c
1079.56 230.139 l
1078.31 230.139 l
h
1080.83 229.608 m
1080.83 233.983 l
1079.56 233.983 l
1079.56 232.826 l
1079.28 233.285 1078.92 233.626 1078.49 233.850  c
1078.06 234.074 1077.53 234.186 1076.92 234.186  c
1076.14 234.186 1075.52 233.964 1075.05 233.522  c
1074.59 233.079 1074.36 232.488 1074.36 231.748  c
1074.36 230.894 1074.65 230.248 1075.22 229.811  c
1075.80 229.373 1076.66 229.155 1077.79 229.155  c
1079.56 229.155 l
1079.56 229.030 l
1079.56 228.446 1079.37 227.996 1078.99 227.678  c
1078.61 227.360 1078.08 227.201 1077.39 227.201  c
1076.95 227.201 1076.52 227.256 1076.11 227.366  c
1075.69 227.475 1075.29 227.634 1074.92 227.842  c
1074.92 226.670 l
1075.38 226.493 1075.82 226.360 1076.26 226.272  c
1076.69 226.183 1077.11 226.139 1077.51 226.139  c
1078.63 226.139 1079.46 226.425 1080.01 226.998  c
1080.55 227.571 1080.83 228.441 1080.83 229.608  c
h
1087.84 227.498 m
1087.71 227.415 1087.56 227.355 1087.39 227.319  c
1087.22 227.282 1087.04 227.264 1086.84 227.264  c
1086.12 227.264 1085.57 227.496 1085.19 227.959  c
1084.81 228.423 1084.62 229.087 1084.62 229.951  c
1084.62 233.983 l
1083.36 233.983 l
1083.36 226.326 l
1084.62 226.326 l
1084.62 227.514 l
1084.89 227.045 1085.24 226.699 1085.66 226.475  c
1086.08 226.251 1086.60 226.139 1087.20 226.139  c
1087.30 226.139 1087.39 226.144 1087.50 226.155  c
1087.60 226.165 1087.72 226.186 1087.84 226.217  c
1087.84 227.498 l
h
1094.05 226.545 m
1094.05 227.748 l
1093.70 227.561 1093.33 227.423 1092.94 227.334  c
1092.56 227.246 1092.16 227.201 1091.75 227.201  c
1091.13 227.201 1090.66 227.295 1090.35 227.483  c
1090.04 227.670 1089.88 227.957 1089.88 228.342  c
1089.88 228.634 1089.99 228.863 1090.22 229.030  c
1090.44 229.196 1090.89 229.353 1091.57 229.498  c
1091.99 229.608 l
1092.88 229.795 1093.52 230.063 1093.89 230.412  c
1094.27 230.761 1094.46 231.248 1094.46 231.873  c
1094.46 232.582 1094.18 233.144 1093.61 233.561  c
1093.05 233.978 1092.28 234.186 1091.30 234.186  c
1090.88 234.186 1090.45 234.144 1090.01 234.061  c
1089.57 233.978 1089.10 233.858 1088.61 233.701  c
1088.61 232.405 l
1089.07 232.644 1089.53 232.824 1089.98 232.944  c
1090.43 233.063 1090.88 233.123 1091.32 233.123  c
1091.91 233.123 1092.37 233.022 1092.68 232.819  c
1093.00 232.616 1093.16 232.332 1093.16 231.967  c
1093.16 231.623 1093.05 231.360 1092.82 231.178  c
1092.59 230.996 1092.08 230.821 1091.30 230.655  c
1090.86 230.545 l
1090.09 230.389 1089.53 230.139 1089.18 229.795  c
1088.84 229.451 1088.66 228.988 1088.66 228.405  c
1088.66 227.675 1088.92 227.116 1089.43 226.725  c
1089.94 226.334 1090.66 226.139 1091.60 226.139  c
1092.07 226.139 1092.51 226.173 1092.92 226.241  c
1093.33 226.308 1093.71 226.410 1094.05 226.545  c
h
1103.02 229.842 m
1103.02 230.451 l
1097.22 230.451 l
1097.28 231.316 1097.55 231.975 1098.01 232.428  c
1098.47 232.881 1099.12 233.108 1099.95 233.108  c
1100.44 233.108 1100.92 233.050 1101.37 232.936  c
1101.82 232.821 1102.27 232.644 1102.72 232.405  c
1102.72 233.592 l
1102.26 233.780 1101.80 233.925 1101.32 234.030  c
1100.85 234.134 1100.37 234.186 1099.89 234.186  c
1098.66 234.186 1097.69 233.829 1096.98 233.116  c
1096.26 232.402 1095.91 231.441 1095.91 230.233  c
1095.91 228.972 1096.25 227.975 1096.92 227.241  c
1097.60 226.506 1098.52 226.139 1099.67 226.139  c
1100.70 226.139 1101.52 226.470 1102.12 227.131  c
1102.72 227.793 1103.02 228.696 1103.02 229.842  c
h
1101.75 229.467 m
1101.74 228.780 1101.55 228.230 1101.17 227.819  c
1100.80 227.407 1100.30 227.201 1099.69 227.201  c
1098.98 227.201 1098.42 227.402 1097.99 227.803  c
1097.57 228.204 1097.33 228.764 1097.27 229.483  c
1101.75 229.467 l
h
1109.51 227.498 m
1109.37 227.415 1109.22 227.355 1109.05 227.319  c
1108.89 227.282 1108.70 227.264 1108.51 227.264  c
1107.79 227.264 1107.24 227.496 1106.86 227.959  c
1106.48 228.423 1106.29 229.087 1106.29 229.951  c
1106.29 233.983 l
1105.02 233.983 l
1105.02 226.326 l
1106.29 226.326 l
1106.29 227.514 l
1106.56 227.045 1106.90 226.699 1107.33 226.475  c
1107.75 226.251 1108.26 226.139 1108.86 226.139  c
1108.96 226.139 1109.06 226.144 1109.16 226.155  c
1109.27 226.165 1109.38 226.186 1109.51 226.217  c
1109.51 227.498 l
h
f
2 J
10.0000 M
Q
q
q
[ 32.0000 0.00000 0.00000 32.0000 1189.24 196.851 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/ab6ii/'F*IpI?MN;#d.(AKcm1a)].T>'_6ii2RHP8KbhLm]u0XDB:]8m&H7a"!f+241l^Pjg>[W&
m4\rshm[IW1sL*,?#lB*_T[d8<>@rbA_H+eI=Y\caLeUUlPaW/VK!SG;&"cDD&II\ZVZ[P.a10iGb4*0
Y&2qFA^obnS6>DF8+-7<hcc=WRc\/r76es/cfWG<3HE>u@Hb:O?:B8^Q7pE:8J5X/*4_q\V_-EsS0H;%
K0##[4QW(']mfC2CZ.PsQ@JpgT9Ec4nV^cP.fKrJ+XG,~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1221.24 196.851 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIRr,D.ffk\?mD@Fn`fUgR?H([_]J0]%W'#a[U9b,,cO?92d\b8~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1307.36 196.851 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/bb6iht'Li'%J!(Kk&Y,X&$A.=@*@MUc:s!@=D47@m$(TfD!IM)t^3?.d$jP`/hDBE=^BfeY3).jc
d;t;YY+)<Q\o&>hLpef$^Nk2uOsJ5VU+"rOAZOh!LuUIdk64-_71hpf<Gb`@(K"14f6+tbCtj[JFeIsq
*chna08iAa,g3Kf-kKOI"\"lW=9K@pq<'U<5nHHs(/<9),*(]h/?q)&6mi&?5_0]JBng&`k;cQcSqrQU
E?&/T!k.TH+"(gXp:pDccXR?QaE:cN,l@q6cgk6<iV=QcN#<T~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1189.24 228.851 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+J#R!HnIQjI#7fj;75^*N:T_`Cn^s&<>lL([pb_U4^1OBA9StDXIT:_aJT:_bUa1l[=5Sj~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1307.36 228.851 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+:#QR0jINW&d!"tC/c:1tDAa8n8i'cF$e]cf3+u6L)\pJ&7_P65VkND$kkND$kkPt0]"dCDO
~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1189.24 235.421 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/aabk^I'L`!$Il_=s38qkk+UFf>E9"fY5fF=jUeo/#a\-jAeN4jlMQ2"F%k?.QmJB)jZ60D]_iQ.#
kP6b<kk**Fr650_r\+aTe!+G>j8NI(niVu-aL5qS;$92[XFD51Z7M1bEEuYtF\riMJ`F8p-'\CGgZEda
lT.a=htJ_GdPMCFhZj3#9)lWobHc4qLP\jDo/oF6KrV0*8gZpi5:]FVe@$s3N!Qf+:laR<QdGV,!EV6*
MP@m_8;ZC%ILm-bpV.nk#lJGd1f[O!#`JYCH-:\,?mse3.HiN,oOQhO^J`?"Y[6l^5D-d[r1,4=1`90
~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1221.24 235.421 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIS.IX!B<=G3u^agn`fUg&X(XR^a:U@$asIKG$tn^P18Op50,(;~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1307.36 235.421 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0L3=:C8'SYNEmjEu"U+"_D(4mZ+6lQM(:n3=%@-Zqb,c#_C!e)cb^"_oma)Q\R.#MJ:<Y,CZT(dZJ
D;0\nOCs!mBDnIs<E6GD3t0$1pN`?s,Y?HAa)Rh%.a)iL#%F4:JiJdWA_AaGf6*9&WU"jM7q,gb-&Nm!
7pOYgN8seaR\ig.bk&L94/K-nV]IOMBpsj)SeoFe;%sjs>usW<XAd2LF3K6Z&^RbaD;/cnLuZ;L^#4DG
`TENkQQqOPl,Q/7$==CuWiE:Kf6+SCET6OBh'l$WYDAZF?Btc$Hk_A/b')DJ+-d^u@K,R!IS:1I~>
Q
.874510 .870588 .870588 RG
newpath
1202.24 214.851 m
1202.24 243.421 l
1202.24 246.183 1204.48 248.421 1207.24 248.421  c
1315.36 248.421 l
1318.13 248.421 1320.36 246.183 1320.36 243.421  c
1320.36 214.851 l
1320.36 212.089 1318.13 209.851 1315.36 209.851  c
1207.24 209.851 l
1204.48 209.851 1202.24 212.089 1202.24 214.851  c
h
f
0.00000 0.00000 0.00000 RG
.501961 .501961 .501961 RG
0 J
1.45000 M
newpath
1202.24 214.851 m
1202.24 243.421 l
1202.24 246.183 1204.48 248.421 1207.24 248.421  c
1315.36 248.421 l
1318.13 248.421 1320.36 246.183 1320.36 243.421  c
1320.36 214.851 l
1320.36 212.089 1318.13 209.851 1315.36 209.851  c
1207.24 209.851 l
1204.48 209.851 1202.24 212.089 1202.24 214.851  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [1202.2445068359375 209.85081481933594 1206.9898681640625 238.80006408691406]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
1204.74 219.851 m
1204.74 214.851 1207.24 212.351 1212.24 212.351  c
1269.02 212.351 l
1274.02 212.351 1276.52 214.851 1276.52 219.851  c
1276.52 224.851 1267.06 229.160 1248.13 232.779  c
1229.21 236.398 1217.24 238.207 1212.24 238.207  c
1207.24 238.207 1204.74 235.707 1204.74 230.707  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1231.93 226.326 m
1233.20 226.326 l
1233.20 233.983 l
1231.93 233.983 l
1231.93 226.326 l
h
1231.93 223.342 m
1233.20 223.342 l
1233.20 224.936 l
1231.93 224.936 l
1231.93 223.342 l
h
1242.20 229.358 m
1242.20 233.983 l
1240.93 233.983 l
1240.93 229.405 l
1240.93 228.675 1240.79 228.131 1240.51 227.772  c
1240.23 227.412 1239.81 227.233 1239.25 227.233  c
1238.57 227.233 1238.03 227.449 1237.64 227.881  c
1237.24 228.313 1237.04 228.905 1237.04 229.655  c
1237.04 233.983 l
1235.78 233.983 l
1235.78 226.326 l
1237.04 226.326 l
1237.04 227.514 l
1237.34 227.056 1237.70 226.712 1238.11 226.483  c
1238.52 226.254 1239.00 226.139 1239.53 226.139  c
1240.40 226.139 1241.07 226.412 1241.52 226.959  c
1241.97 227.506 1242.20 228.306 1242.20 229.358  c
h
1245.95 224.155 m
1245.95 226.326 l
1248.54 226.326 l
1248.54 227.311 l
1245.95 227.311 l
1245.95 231.467 l
1245.95 232.082 1246.03 232.480 1246.20 232.662  c
1246.38 232.845 1246.72 232.936 1247.24 232.936  c
1248.54 232.936 l
1248.54 233.983 l
1247.24 233.983 l
1246.27 233.983 1245.61 233.800 1245.24 233.436  c
1244.87 233.071 1244.68 232.415 1244.68 231.467  c
1244.68 227.311 l
1243.76 227.311 l
1243.76 226.326 l
1244.68 226.326 l
1244.68 224.155 l
1245.95 224.155 l
h
1256.75 229.842 m
1256.75 230.451 l
1250.95 230.451 l
1251.01 231.316 1251.28 231.975 1251.74 232.428  c
1252.20 232.881 1252.85 233.108 1253.69 233.108  c
1254.18 233.108 1254.65 233.050 1255.10 232.936  c
1255.55 232.821 1256.00 232.644 1256.45 232.405  c
1256.45 233.592 l
1255.99 233.780 1255.53 233.925 1255.05 234.030  c
1254.58 234.134 1254.10 234.186 1253.62 234.186  c
1252.39 234.186 1251.42 233.829 1250.71 233.116  c
1250.00 232.402 1249.64 231.441 1249.64 230.233  c
1249.64 228.972 1249.98 227.975 1250.65 227.241  c
1251.33 226.506 1252.25 226.139 1253.40 226.139  c
1254.44 226.139 1255.25 226.470 1255.85 227.131  c
1256.45 227.793 1256.75 228.696 1256.75 229.842  c
h
1255.48 229.467 m
1255.47 228.780 1255.28 228.230 1254.90 227.819  c
1254.53 227.407 1254.03 227.201 1253.42 227.201  c
1252.71 227.201 1252.15 227.402 1251.72 227.803  c
1251.30 228.204 1251.06 228.764 1251.00 229.483  c
1255.48 229.467 l
h
1263.24 227.498 m
1263.10 227.415 1262.95 227.355 1262.78 227.319  c
1262.62 227.282 1262.43 227.264 1262.24 227.264  c
1261.52 227.264 1260.97 227.496 1260.59 227.959  c
1260.21 228.423 1260.02 229.087 1260.02 229.951  c
1260.02 233.983 l
1258.75 233.983 l
1258.75 226.326 l
1260.02 226.326 l
1260.02 227.514 l
1260.29 227.045 1260.64 226.699 1261.06 226.475  c
1261.48 226.251 1261.99 226.139 1262.60 226.139  c
1262.69 226.139 1262.79 226.144 1262.89 226.155  c
1263.00 226.165 1263.11 226.186 1263.24 226.217  c
1263.24 227.498 l
h
1265.77 232.826 m
1265.77 236.889 l
1264.51 236.889 l
1264.51 226.326 l
1265.77 226.326 l
1265.77 227.483 l
1266.04 227.035 1266.38 226.699 1266.78 226.475  c
1267.18 226.251 1267.66 226.139 1268.23 226.139  c
1269.15 226.139 1269.91 226.509 1270.49 227.248  c
1271.08 227.988 1271.37 228.957 1271.37 230.155  c
1271.37 231.363 1271.08 232.337 1270.49 233.076  c
1269.91 233.816 1269.15 234.186 1268.23 234.186  c
1267.66 234.186 1267.18 234.074 1266.78 233.850  c
1266.38 233.626 1266.04 233.285 1265.77 232.826  c
h
1270.05 230.155 m
1270.05 229.238 1269.86 228.517 1269.48 227.991  c
1269.10 227.464 1268.58 227.201 1267.91 227.201  c
1267.25 227.201 1266.72 227.464 1266.34 227.991  c
1265.96 228.517 1265.77 229.238 1265.77 230.155  c
1265.77 231.082 1265.96 231.808 1266.34 232.334  c
1266.72 232.860 1267.25 233.123 1267.91 233.123  c
1268.58 233.123 1269.10 232.860 1269.48 232.334  c
1269.86 231.808 1270.05 231.082 1270.05 230.155  c
h
1277.88 227.498 m
1277.74 227.415 1277.59 227.355 1277.43 227.319  c
1277.26 227.282 1277.08 227.264 1276.88 227.264  c
1276.16 227.264 1275.61 227.496 1275.23 227.959  c
1274.85 228.423 1274.66 229.087 1274.66 229.951  c
1274.66 233.983 l
1273.39 233.983 l
1273.39 226.326 l
1274.66 226.326 l
1274.66 227.514 l
1274.93 227.045 1275.28 226.699 1275.70 226.475  c
1276.12 226.251 1276.63 226.139 1277.24 226.139  c
1277.33 226.139 1277.43 226.144 1277.54 226.155  c
1277.64 226.165 1277.75 226.186 1277.88 226.217  c
1277.88 227.498 l
h
1285.76 229.842 m
1285.76 230.451 l
1279.96 230.451 l
1280.03 231.316 1280.29 231.975 1280.75 232.428  c
1281.22 232.881 1281.86 233.108 1282.70 233.108  c
1283.19 233.108 1283.66 233.050 1284.11 232.936  c
1284.56 232.821 1285.02 232.644 1285.46 232.405  c
1285.46 233.592 l
1285.00 233.780 1284.54 233.925 1284.06 234.030  c
1283.59 234.134 1283.11 234.186 1282.64 234.186  c
1281.41 234.186 1280.43 233.829 1279.72 233.116  c
1279.01 232.402 1278.65 231.441 1278.65 230.233  c
1278.65 228.972 1278.99 227.975 1279.67 227.241  c
1280.34 226.506 1281.26 226.139 1282.42 226.139  c
1283.45 226.139 1284.26 226.470 1284.86 227.131  c
1285.46 227.793 1285.76 228.696 1285.76 229.842  c
h
1284.49 229.467 m
1284.48 228.780 1284.29 228.230 1283.92 227.819  c
1283.54 227.407 1283.05 227.201 1282.43 227.201  c
1281.72 227.201 1281.16 227.402 1280.74 227.803  c
1280.31 228.204 1280.07 228.764 1280.01 229.483  c
1284.49 229.467 l
h
1289.06 224.155 m
1289.06 226.326 l
1291.65 226.326 l
1291.65 227.311 l
1289.06 227.311 l
1289.06 231.467 l
1289.06 232.082 1289.15 232.480 1289.32 232.662  c
1289.49 232.845 1289.84 232.936 1290.36 232.936  c
1291.65 232.936 l
1291.65 233.983 l
1290.36 233.983 l
1289.39 233.983 1288.72 233.800 1288.35 233.436  c
1287.98 233.071 1287.80 232.415 1287.80 231.467  c
1287.80 227.311 l
1286.87 227.311 l
1286.87 226.326 l
1287.80 226.326 l
1287.80 224.155 l
1289.06 224.155 l
h
f
2 J
10.0000 M
Q
q
q
[ 32.0000 0.00000 0.00000 32.0000 1015.01 265.421 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/ab6ii/'F*IpI?MN;#d.(AKcm1a)].T>'_6ii2RHP8KbhLm]u0XDB:]8m&H7a"!f+241l^Pjg>[W&
m4\rshm[IW1sL*,?#lB*_T[d8<>@rbA_H+eI=Y\caLeUUlPaW/VK!SG;&"cDD&II\ZVZ[P.a10iGb4*0
Y&2qFA^obnS6>DF8+-7<hcc=WRc\/r76es/cfWG<3HE>u@Hb:O?:B8^Q7pE:8J5X/*4_q\V_-EsS0H;%
K0##[4QW(']mfC2CZ.PsQ@JpgT9Ec4nV^cP.fKrJ+XG,~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1047.01 265.421 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIRr,D.ffk\?mD@Fn`fUgR?H([_]J0]%W'#a[U9b,,cO?92d\b8~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1133.13 265.421 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/bb6iht'Li'%J!(Kk&Y,X&$A.=@*@MUc:s!@=D47@m$(TfD!IM)t^3?.d$jP`/hDBE=^BfeY3).jc
d;t;YY+)<Q\o&>hLpef$^Nk2uOsJ5VU+"rOAZOh!LuUIdk64-_71hpf<Gb`@(K"14f6+tbCtj[JFeIsq
*chna08iAa,g3Kf-kKOI"\"lW=9K@pq<'U<5nHHs(/<9),*(]h/?q)&6mi&?5_0]JBng&`k;cQcSqrQU
E?&/T!k.TH+"(gXp:pDccXR?QaE:cN,l@q6cgk6<iV=QcN#<T~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1015.01 297.421 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+J#R!HnIQjI#7fj;75^*N:T_`Cn^s&<>lL([pb_U4^1OBA9StDXIT:_aJT:_bUa1l[=5Sj~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1133.13 297.421 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+:#QR0jINW&d!"tC/c:1tDAa8n8i'cF$e]cf3+u6L)\pJ&7_P65VkND$kkND$kkPt0]"dCDO
~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1015.01 303.992 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/aabk^I'L`!$Il_=s38qkk+UFf>E9"fY5fF=jUeo/#a\-jAeN4jlMQ2"F%k?.QmJB)jZ60D]_iQ.#
kP6b<kk**Fr650_r\+aTe!+G>j8NI(niVu-aL5qS;$92[XFD51Z7M1bEEuYtF\riMJ`F8p-'\CGgZEda
lT.a=htJ_GdPMCFhZj3#9)lWobHc4qLP\jDo/oF6KrV0*8gZpi5:]FVe@$s3N!Qf+:laR<QdGV,!EV6*
MP@m_8;ZC%ILm-bpV.nk#lJGd1f[O!#`JYCH-:\,?mse3.HiN,oOQhO^J`?"Y[6l^5D-d[r1,4=1`90
~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1047.01 303.992 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIS.IX!B<=G3u^agn`fUg&X(XR^a:U@$asIKG$tn^P18Op50,(;~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1133.13 303.992 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0L3=:C8'SYNEmjEu"U+"_D(4mZ+6lQM(:n3=%@-Zqb,c#_C!e)cb^"_oma)Q\R.#MJ:<Y,CZT(dZJ
D;0\nOCs!mBDnIs<E6GD3t0$1pN`?s,Y?HAa)Rh%.a)iL#%F4:JiJdWA_AaGf6*9&WU"jM7q,gb-&Nm!
7pOYgN8seaR\ig.bk&L94/K-nV]IOMBpsj)SeoFe;%sjs>usW<XAd2LF3K6Z&^RbaD;/cnLuZ;L^#4DG
`TENkQQqOPl,Q/7$==CuWiE:Kf6+SCET6OBh'l$WYDAZF?Btc$Hk_A/b')DJ+-d^u@K,R!IS:1I~>
Q
.874510 .870588 .870588 RG
newpath
1028.01 283.421 m
1028.01 311.992 l
1028.01 314.753 1030.25 316.992 1033.01 316.992  c
1141.13 316.992 l
1143.89 316.992 1146.13 314.753 1146.13 311.992  c
1146.13 283.421 l
1146.13 280.660 1143.89 278.421 1141.13 278.421  c
1033.01 278.421 l
1030.25 278.421 1028.01 280.660 1028.01 283.421  c
h
f
0.00000 0.00000 0.00000 RG
.501961 .501961 .501961 RG
0 J
1.45000 M
newpath
1028.01 283.421 m
1028.01 311.992 l
1028.01 314.753 1030.25 316.992 1033.01 316.992  c
1141.13 316.992 l
1143.89 316.992 1146.13 314.753 1146.13 311.992  c
1146.13 283.421 l
1146.13 280.660 1143.89 278.421 1141.13 278.421  c
1033.01 278.421 l
1030.25 278.421 1028.01 280.660 1028.01 283.421  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [1028.0087890625 278.4212646484375 1032.754150390625 307.3705139160156]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
1030.51 288.421 m
1030.51 283.421 1033.01 280.921 1038.01 280.921  c
1094.79 280.921 l
1099.79 280.921 1102.29 283.421 1102.29 288.421  c
1102.29 293.421 1092.82 297.731 1073.90 301.349  c
1054.97 304.968 1043.01 306.778 1038.01 306.778  c
1033.01 306.778 1030.51 304.278 1030.51 299.278  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1056.91 298.413 m
1056.91 299.022 l
1051.11 299.022 l
1051.17 299.886 1051.44 300.545 1051.90 300.998  c
1052.36 301.452 1053.01 301.678 1053.85 301.678  c
1054.34 301.678 1054.81 301.621 1055.26 301.506  c
1055.71 301.392 1056.16 301.215 1056.61 300.975  c
1056.61 302.163 l
1056.15 302.350 1055.69 302.496 1055.21 302.600  c
1054.74 302.704 1054.26 302.756 1053.78 302.756  c
1052.55 302.756 1051.58 302.400 1050.87 301.686  c
1050.16 300.972 1049.80 300.011 1049.80 298.803  c
1049.80 297.543 1050.14 296.545 1050.81 295.811  c
1051.49 295.077 1052.41 294.709 1053.56 294.709  c
1054.60 294.709 1055.41 295.040 1056.01 295.702  c
1056.61 296.363 1056.91 297.267 1056.91 298.413  c
h
1055.64 298.038 m
1055.63 297.350 1055.44 296.801 1055.06 296.389  c
1054.69 295.978 1054.20 295.772 1053.58 295.772  c
1052.87 295.772 1052.31 295.972 1051.89 296.373  c
1051.46 296.775 1051.22 297.334 1051.16 298.053  c
1055.64 298.038 l
h
1065.33 294.897 m
1062.57 298.616 l
1065.47 302.553 l
1063.99 302.553 l
1061.76 299.538 l
1059.54 302.553 l
1058.05 302.553 l
1061.02 298.553 l
1058.30 294.897 l
1059.79 294.897 l
1061.82 297.631 l
1063.85 294.897 l
1065.33 294.897 l
h
1068.46 301.397 m
1068.46 305.459 l
1067.20 305.459 l
1067.20 294.897 l
1068.46 294.897 l
1068.46 296.053 l
1068.73 295.605 1069.07 295.269 1069.47 295.045  c
1069.87 294.821 1070.35 294.709 1070.92 294.709  c
1071.84 294.709 1072.60 295.079 1073.18 295.819  c
1073.77 296.558 1074.06 297.527 1074.06 298.725  c
1074.06 299.933 1073.77 300.907 1073.18 301.647  c
1072.60 302.386 1071.84 302.756 1070.92 302.756  c
1070.35 302.756 1069.87 302.644 1069.47 302.420  c
1069.07 302.196 1068.73 301.855 1068.46 301.397  c
h
1072.74 298.725 m
1072.74 297.808 1072.55 297.087 1072.17 296.561  c
1071.79 296.035 1071.27 295.772 1070.60 295.772  c
1069.94 295.772 1069.41 296.035 1069.03 296.561  c
1068.65 297.087 1068.46 297.808 1068.46 298.725  c
1068.46 299.652 1068.65 300.379 1069.03 300.905  c
1069.41 301.431 1069.94 301.694 1070.60 301.694  c
1071.27 301.694 1071.79 301.431 1072.17 300.905  c
1072.55 300.379 1072.74 299.652 1072.74 298.725  c
h
1080.57 296.069 m
1080.43 295.985 1080.28 295.926 1080.12 295.889  c
1079.95 295.853 1079.77 295.834 1079.57 295.834  c
1078.85 295.834 1078.30 296.066 1077.92 296.530  c
1077.54 296.993 1077.35 297.657 1077.35 298.522  c
1077.35 302.553 l
1076.08 302.553 l
1076.08 294.897 l
1077.35 294.897 l
1077.35 296.084 l
1077.62 295.616 1077.97 295.269 1078.39 295.045  c
1078.81 294.821 1079.32 294.709 1079.93 294.709  c
1080.02 294.709 1080.12 294.715 1080.22 294.725  c
1080.33 294.735 1080.44 294.756 1080.57 294.788  c
1080.57 296.069 l
h
1088.45 298.413 m
1088.45 299.022 l
1082.65 299.022 l
1082.72 299.886 1082.98 300.545 1083.44 300.998  c
1083.91 301.452 1084.55 301.678 1085.39 301.678  c
1085.88 301.678 1086.35 301.621 1086.80 301.506  c
1087.25 301.392 1087.70 301.215 1088.15 300.975  c
1088.15 302.163 l
1087.69 302.350 1087.23 302.496 1086.75 302.600  c
1086.28 302.704 1085.80 302.756 1085.32 302.756  c
1084.10 302.756 1083.12 302.400 1082.41 301.686  c
1081.70 300.972 1081.34 300.011 1081.34 298.803  c
1081.34 297.543 1081.68 296.545 1082.36 295.811  c
1083.03 295.077 1083.95 294.709 1085.11 294.709  c
1086.14 294.709 1086.95 295.040 1087.55 295.702  c
1088.15 296.363 1088.45 297.267 1088.45 298.413  c
h
1087.18 298.038 m
1087.17 297.350 1086.98 296.801 1086.61 296.389  c
1086.23 295.978 1085.74 295.772 1085.12 295.772  c
1084.41 295.772 1083.85 295.972 1083.43 296.373  c
1083.00 296.775 1082.76 297.334 1082.70 298.053  c
1087.18 298.038 l
h
1095.39 295.116 m
1095.39 296.319 l
1095.04 296.131 1094.67 295.993 1094.28 295.905  c
1093.90 295.816 1093.50 295.772 1093.09 295.772  c
1092.47 295.772 1092.00 295.866 1091.69 296.053  c
1091.38 296.241 1091.22 296.527 1091.22 296.913  c
1091.22 297.204 1091.33 297.433 1091.56 297.600  c
1091.78 297.767 1092.23 297.923 1092.91 298.069  c
1093.33 298.178 l
1094.22 298.366 1094.86 298.634 1095.23 298.983  c
1095.61 299.332 1095.80 299.819 1095.80 300.444  c
1095.80 301.152 1095.52 301.715 1094.95 302.131  c
1094.39 302.548 1093.62 302.756 1092.64 302.756  c
1092.22 302.756 1091.79 302.715 1091.35 302.631  c
1090.91 302.548 1090.44 302.428 1089.95 302.272  c
1089.95 300.975 l
1090.41 301.215 1090.87 301.394 1091.32 301.514  c
1091.77 301.634 1092.22 301.694 1092.66 301.694  c
1093.25 301.694 1093.71 301.592 1094.02 301.389  c
1094.34 301.186 1094.50 300.902 1094.50 300.538  c
1094.50 300.194 1094.39 299.931 1094.16 299.748  c
1093.93 299.566 1093.42 299.392 1092.64 299.225  c
1092.20 299.116 l
1091.43 298.959 1090.87 298.709 1090.52 298.366  c
1090.17 298.022 1090.00 297.558 1090.00 296.975  c
1090.00 296.246 1090.26 295.686 1090.77 295.295  c
1091.28 294.905 1092.00 294.709 1092.94 294.709  c
1093.41 294.709 1093.85 294.743 1094.26 294.811  c
1094.67 294.879 1095.05 294.980 1095.39 295.116  c
h
1102.68 295.116 m
1102.68 296.319 l
1102.33 296.131 1101.96 295.993 1101.58 295.905  c
1101.19 295.816 1100.79 295.772 1100.39 295.772  c
1099.76 295.772 1099.29 295.866 1098.98 296.053  c
1098.67 296.241 1098.51 296.527 1098.51 296.913  c
1098.51 297.204 1098.63 297.433 1098.85 297.600  c
1099.07 297.767 1099.52 297.923 1100.20 298.069  c
1100.62 298.178 l
1101.52 298.366 1102.15 298.634 1102.53 298.983  c
1102.90 299.332 1103.09 299.819 1103.09 300.444  c
1103.09 301.152 1102.81 301.715 1102.25 302.131  c
1101.68 302.548 1100.91 302.756 1099.93 302.756  c
1099.52 302.756 1099.09 302.715 1098.65 302.631  c
1098.20 302.548 1097.74 302.428 1097.25 302.272  c
1097.25 300.975 l
1097.71 301.215 1098.16 301.394 1098.61 301.514  c
1099.07 301.634 1099.51 301.694 1099.95 301.694  c
1100.54 301.694 1101.00 301.592 1101.32 301.389  c
1101.64 301.186 1101.79 300.902 1101.79 300.538  c
1101.79 300.194 1101.68 299.931 1101.45 299.748  c
1101.22 299.566 1100.72 299.392 1099.93 299.225  c
1099.50 299.116 l
1098.73 298.959 1098.17 298.709 1097.82 298.366  c
1097.47 298.022 1097.29 297.558 1097.29 296.975  c
1097.29 296.246 1097.55 295.686 1098.06 295.295  c
1098.57 294.905 1099.29 294.709 1100.23 294.709  c
1100.70 294.709 1101.14 294.743 1101.55 294.811  c
1101.96 294.879 1102.34 294.980 1102.68 295.116  c
h
1105.09 294.897 m
1106.35 294.897 l
1106.35 302.553 l
1105.09 302.553 l
1105.09 294.897 l
h
1105.09 291.913 m
1106.35 291.913 l
1106.35 293.506 l
1105.09 293.506 l
1105.09 291.913 l
h
1111.95 295.772 m
1111.28 295.772 1110.75 296.035 1110.35 296.561  c
1109.96 297.087 1109.76 297.808 1109.76 298.725  c
1109.76 299.642 1109.95 300.363 1110.35 300.889  c
1110.74 301.415 1111.27 301.678 1111.95 301.678  c
1112.62 301.678 1113.16 301.415 1113.55 300.889  c
1113.94 300.363 1114.13 299.642 1114.13 298.725  c
1114.13 297.819 1113.94 297.100 1113.55 296.569  c
1113.16 296.038 1112.62 295.772 1111.95 295.772  c
h
1111.95 294.709 m
1113.04 294.709 1113.90 295.066 1114.52 295.780  c
1115.15 296.493 1115.46 297.475 1115.46 298.725  c
1115.46 299.985 1115.15 300.972 1114.52 301.686  c
1113.90 302.400 1113.04 302.756 1111.95 302.756  c
1110.85 302.756 1109.99 302.400 1109.37 301.686  c
1108.74 300.972 1108.43 299.985 1108.43 298.725  c
1108.43 297.475 1108.74 296.493 1109.37 295.780  c
1109.99 295.066 1110.85 294.709 1111.95 294.709  c
h
1123.92 297.928 m
1123.92 302.553 l
1122.65 302.553 l
1122.65 297.975 l
1122.65 297.246 1122.51 296.702 1122.23 296.342  c
1121.95 295.983 1121.53 295.803 1120.97 295.803  c
1120.29 295.803 1119.75 296.019 1119.36 296.452  c
1118.96 296.884 1118.76 297.475 1118.76 298.225  c
1118.76 302.553 l
1117.50 302.553 l
1117.50 294.897 l
1118.76 294.897 l
1118.76 296.084 l
1119.06 295.626 1119.42 295.282 1119.83 295.053  c
1120.24 294.824 1120.72 294.709 1121.25 294.709  c
1122.12 294.709 1122.79 294.983 1123.24 295.530  c
1123.69 296.077 1123.92 296.876 1123.92 297.928  c
h
f
2 J
10.0000 M
Q
0 J
1.45000 M
newpath
971.918 229.136 m
1020.00 229.136 l
S
newpath
1028.00 229.136 m
1016.00 224.136 l
1019.00 229.136 l
1016.00 234.136 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
1146.15 229.136 m
1194.24 229.136 l
S
newpath
1202.24 229.136 m
1190.24 224.136 l
1193.24 229.136 l
1190.24 234.136 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
1087.07 248.426 m
1087.07 270.452 l
S
newpath
1087.07 278.452 m
1092.07 266.452 l
1087.07 269.452 l
1082.07 266.452 l
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
