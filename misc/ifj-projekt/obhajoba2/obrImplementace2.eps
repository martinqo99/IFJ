%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 318 575 473
%%Creator: yExport 1.2
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, December 13, 2011 1:02:53 PM CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
498 138 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
498.000 0.00000 l
498.000 138.000 l
0.00000 138.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 498 138 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -838.000 -222.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
838.000 222.000 m
1336.00 222.000 l
1336.00 360.000 l
838.000 360.000 l
838.000 222.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -838.000 -222.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -838.000 -222.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -838.000 -222.000 ] defaultmatrix matrix concatmatrix setmatrix
q
q
[ 32.0000 0.00000 0.00000 32.0000 840.773 224.695 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/ab6ii/'F*IpI?MN;#d.(AKcm1a)].T>'_6ii2RHP8KbhLm]u0XDB:]8m&H7a"!f+241l^Pjg>[W&
m4\rshm[IW1sL*,?#lB*_T[d8<>@rbA_H+eI=Y\caLeUUlPaW/VK!SG;&"cDD&II\ZVZ[P.a10iGb4*0
Y&2qFA^obnS6>DF8+-7<hcc=WRc\/r76es/cfWG<3HE>u@Hb:O?:B8^Q7pE:8J5X/*4_q\V_-EsS0H;%
K0##[4QW(']mfC2CZ.PsQ@JpgT9Ec4nV^cP.fKrJ+XG,~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 872.773 224.695 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIRr,D.ffk\?mD@Fn`fUgR?H([_]J0]%W'#a[U9b,,cO?92d\b8~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 958.893 224.695 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/bb6iht'Li'%J!(Kk&Y,X&$A.=@*@MUc:s!@=D47@m$(TfD!IM)t^3?.d$jP`/hDBE=^BfeY3).jc
d;t;YY+)<Q\o&>hLpef$^Nk2uOsJ5VU+"rOAZOh!LuUIdk64-_71hpf<Gb`@(K"14f6+tbCtj[JFeIsq
*chna08iAa,g3Kf-kKOI"\"lW=9K@pq<'U<5nHHs(/<9),*(]h/?q)&6mi&?5_0]JBng&`k;cQcSqrQU
E?&/T!k.TH+"(gXp:pDccXR?QaE:cN,l@q6cgk6<iV=QcN#<T~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 840.773 256.695 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+J#R!HnIQjI#7fj;75^*N:T_`Cn^s&<>lL([pb_U4^1OBA9StDXIT:_aJT:_bUa1l[=5Sj~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 958.893 256.695 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+:#QR0jINW&d!"tC/c:1tDAa8n8i'cF$e]cf3+u6L)\pJ&7_P65VkND$kkND$kkPt0]"dCDO
~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 840.773 263.266 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/aabk^I'L`!$Il_=s38qkk+UFf>E9"fY5fF=jUeo/#a\-jAeN4jlMQ2"F%k?.QmJB)jZ60D]_iQ.#
kP6b<kk**Fr650_r\+aTe!+G>j8NI(niVu-aL5qS;$92[XFD51Z7M1bEEuYtF\riMJ`F8p-'\CGgZEda
lT.a=htJ_GdPMCFhZj3#9)lWobHc4qLP\jDo/oF6KrV0*8gZpi5:]FVe@$s3N!Qf+:laR<QdGV,!EV6*
MP@m_8;ZC%ILm-bpV.nk#lJGd1f[O!#`JYCH-:\,?mse3.HiN,oOQhO^J`?"Y[6l^5D-d[r1,4=1`90
~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 872.773 263.266 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIS.IX!B<=G3u^agn`fUg&X(XR^a:U@$asIKG$tn^P18Op50,(;~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 958.893 263.266 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0L3=:C8'SYNEmjEu"U+"_D(4mZ+6lQM(:n3=%@-Zqb,c#_C!e)cb^"_oma)Q\R.#MJ:<Y,CZT(dZJ
D;0\nOCs!mBDnIs<E6GD3t0$1pN`?s,Y?HAa)Rh%.a)iL#%F4:JiJdWA_AaGf6*9&WU"jM7q,gb-&Nm!
7pOYgN8seaR\ig.bk&L94/K-nV]IOMBpsj)SeoFe;%sjs>usW<XAd2LF3K6Z&^RbaD;/cnLuZ;L^#4DG
`TENkQQqOPl,Q/7$==CuWiE:Kf6+SCET6OBh'l$WYDAZF?Btc$Hk_A/b')DJ+-d^u@K,R!IS:1I~>
Q
.600000 .800000 1.00000 RG
newpath
853.773 242.695 m
853.773 271.266 l
853.773 274.027 856.012 276.266 858.773 276.266  c
966.893 276.266 l
969.654 276.266 971.893 274.027 971.893 271.266  c
971.893 242.695 l
971.893 239.934 969.654 237.695 966.893 237.695  c
858.773 237.695 l
856.012 237.695 853.773 239.934 853.773 242.695  c
h
f
0.00000 0.00000 0.00000 RG
.501961 .501961 .501961 RG
0 J
1.45000 M
newpath
853.773 242.695 m
853.773 271.266 l
853.773 274.027 856.012 276.266 858.773 276.266  c
966.893 276.266 l
969.654 276.266 971.893 274.027 971.893 271.266  c
971.893 242.695 l
971.893 239.934 969.654 237.695 966.893 237.695  c
858.773 237.695 l
856.012 237.695 853.773 239.934 853.773 242.695  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [853.7730102539062 237.69529724121094 858.5183715820312 266.64453125]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
856.273 247.695 m
856.273 242.695 858.773 240.195 863.773 240.195  c
920.551 240.195 l
925.551 240.195 928.051 242.695 928.051 247.695  c
928.051 252.695 918.588 257.005 899.662 260.623  c
880.736 264.242 868.773 266.052 863.773 266.052  c
858.773 266.052 856.273 263.552 856.273 258.552  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
891.193 254.390 m
891.193 255.593 l
890.839 255.405 890.469 255.267 890.084 255.179  c
889.699 255.090 889.303 255.046 888.896 255.046  c
888.271 255.046 887.803 255.140 887.490 255.327  c
887.178 255.515 887.021 255.801 887.021 256.187  c
887.021 256.478 887.133 256.707 887.357 256.874  c
887.581 257.041 888.032 257.197 888.709 257.343  c
889.131 257.452 l
890.027 257.640 890.662 257.908 891.037 258.257  c
891.412 258.606 891.600 259.093 891.600 259.718  c
891.600 260.426 891.318 260.989 890.756 261.405  c
890.193 261.822 889.423 262.030 888.443 262.030  c
888.027 262.030 887.597 261.989 887.154 261.905  c
886.712 261.822 886.245 261.702 885.756 261.546  c
885.756 260.249 l
886.214 260.489 886.670 260.668 887.123 260.788  c
887.576 260.908 888.021 260.968 888.459 260.968  c
889.053 260.968 889.508 260.866 889.826 260.663  c
890.144 260.460 890.303 260.176 890.303 259.812  c
890.303 259.468 890.188 259.205 889.959 259.023  c
889.730 258.840 889.225 258.666 888.443 258.499  c
888.006 258.390 l
887.235 258.233 886.675 257.983 886.326 257.640  c
885.977 257.296 885.803 256.832 885.803 256.249  c
885.803 255.520 886.058 254.960 886.568 254.569  c
887.079 254.179 887.803 253.983 888.740 253.983  c
889.209 253.983 889.649 254.017 890.061 254.085  c
890.472 254.153 890.850 254.254 891.193 254.390  c
h
899.112 254.468 m
899.112 255.640 l
898.758 255.442 898.401 255.293 898.042 255.194  c
897.683 255.095 897.321 255.046 896.956 255.046  c
896.144 255.046 895.511 255.306 895.058 255.827  c
894.604 256.348 894.378 257.072 894.378 257.999  c
894.378 258.937 894.604 259.663 895.058 260.179  c
895.511 260.694 896.144 260.952 896.956 260.952  c
897.321 260.952 897.683 260.905 898.042 260.812  c
898.401 260.718 898.758 260.572 899.112 260.374  c
899.112 261.530 l
898.758 261.697 898.394 261.822 898.019 261.905  c
897.644 261.989 897.248 262.030 896.831 262.030  c
895.675 262.030 894.756 261.668 894.073 260.944  c
893.391 260.220 893.050 259.239 893.050 257.999  c
893.050 256.760 893.394 255.780 894.081 255.062  c
894.769 254.343 895.711 253.983 896.909 253.983  c
897.295 253.983 897.672 254.023 898.042 254.101  c
898.412 254.179 898.769 254.301 899.112 254.468  c
h
904.778 257.983 m
903.768 257.983 903.065 258.098 902.669 258.327  c
902.273 258.556 902.075 258.952 902.075 259.515  c
902.075 259.963 902.224 260.317 902.521 260.577  c
902.817 260.838 903.216 260.968 903.716 260.968  c
904.414 260.968 904.974 260.720 905.396 260.226  c
905.817 259.731 906.028 259.077 906.028 258.265  c
906.028 257.983 l
904.778 257.983 l
h
907.294 257.452 m
907.294 261.827 l
906.028 261.827 l
906.028 260.671 l
905.747 261.129 905.390 261.470 904.958 261.694  c
904.526 261.918 904.002 262.030 903.388 262.030  c
902.606 262.030 901.984 261.809 901.521 261.366  c
901.057 260.924 900.825 260.332 900.825 259.593  c
900.825 258.739 901.114 258.093 901.692 257.655  c
902.271 257.218 903.127 256.999 904.263 256.999  c
906.028 256.999 l
906.028 256.874 l
906.028 256.291 905.838 255.840 905.458 255.523  c
905.078 255.205 904.544 255.046 903.856 255.046  c
903.419 255.046 902.992 255.101 902.575 255.210  c
902.159 255.319 901.763 255.478 901.388 255.687  c
901.388 254.515 l
901.846 254.338 902.291 254.205 902.724 254.116  c
903.156 254.028 903.575 253.983 903.981 253.983  c
905.096 253.983 905.927 254.270 906.474 254.843  c
907.021 255.416 907.294 256.286 907.294 257.452  c
h
916.248 257.202 m
916.248 261.827 l
914.982 261.827 l
914.982 257.249 l
914.982 256.520 914.842 255.976 914.561 255.616  c
914.279 255.257 913.857 255.077 913.295 255.077  c
912.618 255.077 912.081 255.293 911.686 255.726  c
911.290 256.158 911.092 256.749 911.092 257.499  c
911.092 261.827 l
909.826 261.827 l
909.826 254.171 l
911.092 254.171 l
911.092 255.358 l
911.394 254.900 911.751 254.556 912.162 254.327  c
912.574 254.098 913.045 253.983 913.576 253.983  c
914.451 253.983 915.115 254.257 915.568 254.804  c
916.021 255.351 916.248 256.150 916.248 257.202  c
h
925.121 257.202 m
925.121 261.827 l
923.855 261.827 l
923.855 257.249 l
923.855 256.520 923.715 255.976 923.434 255.616  c
923.152 255.257 922.730 255.077 922.168 255.077  c
921.491 255.077 920.954 255.293 920.559 255.726  c
920.163 256.158 919.965 256.749 919.965 257.499  c
919.965 261.827 l
918.699 261.827 l
918.699 254.171 l
919.965 254.171 l
919.965 255.358 l
920.267 254.900 920.624 254.556 921.035 254.327  c
921.447 254.098 921.918 253.983 922.449 253.983  c
923.324 253.983 923.988 254.257 924.441 254.804  c
924.895 255.351 925.121 256.150 925.121 257.202  c
h
934.182 257.687 m
934.182 258.296 l
928.385 258.296 l
928.447 259.161 928.710 259.819 929.174 260.273  c
929.637 260.726 930.286 260.952 931.119 260.952  c
931.609 260.952 932.080 260.895 932.533 260.780  c
932.986 260.666 933.437 260.489 933.885 260.249  c
933.885 261.437 l
933.426 261.624 932.960 261.770 932.486 261.874  c
932.012 261.978 931.536 262.030 931.057 262.030  c
929.827 262.030 928.856 261.674 928.143 260.960  c
927.429 260.246 927.072 259.286 927.072 258.077  c
927.072 256.817 927.411 255.819 928.088 255.085  c
928.765 254.351 929.682 253.983 930.838 253.983  c
931.869 253.983 932.684 254.314 933.283 254.976  c
933.882 255.637 934.182 256.541 934.182 257.687  c
h
932.916 257.312 m
932.906 256.624 932.713 256.075 932.338 255.663  c
931.963 255.252 931.468 255.046 930.854 255.046  c
930.145 255.046 929.580 255.246 929.158 255.648  c
928.736 256.049 928.494 256.608 928.432 257.327  c
932.916 257.312 l
h
940.670 255.343 m
940.535 255.260 940.383 255.200 940.217 255.163  c
940.050 255.127 939.868 255.108 939.670 255.108  c
938.951 255.108 938.402 255.340 938.021 255.804  c
937.641 256.267 937.451 256.931 937.451 257.796  c
937.451 261.827 l
936.186 261.827 l
936.186 254.171 l
937.451 254.171 l
937.451 255.358 l
937.722 254.890 938.068 254.543 938.490 254.319  c
938.912 254.095 939.425 253.983 940.029 253.983  c
940.123 253.983 940.222 253.989 940.326 253.999  c
940.430 254.010 940.545 254.030 940.670 254.062  c
940.670 255.343 l
h
f
2 J
10.0000 M
Q
q
q
[ 32.0000 0.00000 0.00000 32.0000 1015.01 224.695 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/ab6ii/'F*IpI?MN;#d.(AKcm1a)].T>'_6ii2RHP8KbhLm]u0XDB:]8m&H7a"!f+241l^Pjg>[W&
m4\rshm[IW1sL*,?#lB*_T[d8<>@rbA_H+eI=Y\caLeUUlPaW/VK!SG;&"cDD&II\ZVZ[P.a10iGb4*0
Y&2qFA^obnS6>DF8+-7<hcc=WRc\/r76es/cfWG<3HE>u@Hb:O?:B8^Q7pE:8J5X/*4_q\V_-EsS0H;%
K0##[4QW(']mfC2CZ.PsQ@JpgT9Ec4nV^cP.fKrJ+XG,~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1047.01 224.695 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIRr,D.ffk\?mD@Fn`fUgR?H([_]J0]%W'#a[U9b,,cO?92d\b8~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1133.13 224.695 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/bb6iht'Li'%J!(Kk&Y,X&$A.=@*@MUc:s!@=D47@m$(TfD!IM)t^3?.d$jP`/hDBE=^BfeY3).jc
d;t;YY+)<Q\o&>hLpef$^Nk2uOsJ5VU+"rOAZOh!LuUIdk64-_71hpf<Gb`@(K"14f6+tbCtj[JFeIsq
*chna08iAa,g3Kf-kKOI"\"lW=9K@pq<'U<5nHHs(/<9),*(]h/?q)&6mi&?5_0]JBng&`k;cQcSqrQU
E?&/T!k.TH+"(gXp:pDccXR?QaE:cN,l@q6cgk6<iV=QcN#<T~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1015.01 256.695 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+J#R!HnIQjI#7fj;75^*N:T_`Cn^s&<>lL([pb_U4^1OBA9StDXIT:_aJT:_bUa1l[=5Sj~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1133.13 256.695 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+:#QR0jINW&d!"tC/c:1tDAa8n8i'cF$e]cf3+u6L)\pJ&7_P65VkND$kkND$kkPt0]"dCDO
~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1015.01 263.266 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/aabk^I'L`!$Il_=s38qkk+UFf>E9"fY5fF=jUeo/#a\-jAeN4jlMQ2"F%k?.QmJB)jZ60D]_iQ.#
kP6b<kk**Fr650_r\+aTe!+G>j8NI(niVu-aL5qS;$92[XFD51Z7M1bEEuYtF\riMJ`F8p-'\CGgZEda
lT.a=htJ_GdPMCFhZj3#9)lWobHc4qLP\jDo/oF6KrV0*8gZpi5:]FVe@$s3N!Qf+:laR<QdGV,!EV6*
MP@m_8;ZC%ILm-bpV.nk#lJGd1f[O!#`JYCH-:\,?mse3.HiN,oOQhO^J`?"Y[6l^5D-d[r1,4=1`90
~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1047.01 263.266 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIS.IX!B<=G3u^agn`fUg&X(XR^a:U@$asIKG$tn^P18Op50,(;~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1133.13 263.266 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0L3=:C8'SYNEmjEu"U+"_D(4mZ+6lQM(:n3=%@-Zqb,c#_C!e)cb^"_oma)Q\R.#MJ:<Y,CZT(dZJ
D;0\nOCs!mBDnIs<E6GD3t0$1pN`?s,Y?HAa)Rh%.a)iL#%F4:JiJdWA_AaGf6*9&WU"jM7q,gb-&Nm!
7pOYgN8seaR\ig.bk&L94/K-nV]IOMBpsj)SeoFe;%sjs>usW<XAd2LF3K6Z&^RbaD;/cnLuZ;L^#4DG
`TENkQQqOPl,Q/7$==CuWiE:Kf6+SCET6OBh'l$WYDAZF?Btc$Hk_A/b')DJ+-d^u@K,R!IS:1I~>
Q
.874510 .870588 .870588 RG
newpath
1028.01 242.695 m
1028.01 271.266 l
1028.01 274.027 1030.25 276.266 1033.01 276.266  c
1141.13 276.266 l
1143.89 276.266 1146.13 274.027 1146.13 271.266  c
1146.13 242.695 l
1146.13 239.934 1143.89 237.695 1141.13 237.695  c
1033.01 237.695 l
1030.25 237.695 1028.01 239.934 1028.01 242.695  c
h
f
0.00000 0.00000 0.00000 RG
.501961 .501961 .501961 RG
0 J
1.45000 M
newpath
1028.01 242.695 m
1028.01 271.266 l
1028.01 274.027 1030.25 276.266 1033.01 276.266  c
1141.13 276.266 l
1143.89 276.266 1146.13 274.027 1146.13 271.266  c
1146.13 242.695 l
1146.13 239.934 1143.89 237.695 1141.13 237.695  c
1033.01 237.695 l
1030.25 237.695 1028.01 239.934 1028.01 242.695  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [1028.0087890625 237.69529724121094 1032.754150390625 266.64453125]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
1030.51 247.695 m
1030.51 242.695 1033.01 240.195 1038.01 240.195  c
1094.79 240.195 l
1099.79 240.195 1102.29 242.695 1102.29 247.695  c
1102.29 252.695 1092.82 257.005 1073.90 260.623  c
1054.97 264.242 1043.01 266.052 1038.01 266.052  c
1033.01 266.052 1030.51 263.552 1030.51 258.552  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1067.16 260.671 m
1067.16 264.733 l
1065.89 264.733 l
1065.89 254.171 l
1067.16 254.171 l
1067.16 255.327 l
1067.43 254.879 1067.76 254.543 1068.17 254.319  c
1068.57 254.095 1069.05 253.983 1069.61 253.983  c
1070.54 253.983 1071.29 254.353 1071.88 255.093  c
1072.46 255.832 1072.75 256.801 1072.75 257.999  c
1072.75 259.207 1072.46 260.181 1071.88 260.921  c
1071.29 261.661 1070.54 262.030 1069.61 262.030  c
1069.05 262.030 1068.57 261.918 1068.17 261.694  c
1067.76 261.470 1067.43 261.129 1067.16 260.671  c
h
1071.44 257.999 m
1071.44 257.082 1071.25 256.361 1070.87 255.835  c
1070.49 255.309 1069.96 255.046 1069.30 255.046  c
1068.63 255.046 1068.11 255.309 1067.73 255.835  c
1067.35 256.361 1067.16 257.082 1067.16 257.999  c
1067.16 258.926 1067.35 259.653 1067.73 260.179  c
1068.11 260.705 1068.63 260.968 1069.30 260.968  c
1069.96 260.968 1070.49 260.705 1070.87 260.179  c
1071.25 259.653 1071.44 258.926 1071.44 257.999  c
h
1078.31 257.983 m
1077.30 257.983 1076.60 258.098 1076.20 258.327  c
1075.80 258.556 1075.61 258.952 1075.61 259.515  c
1075.61 259.963 1075.76 260.317 1076.05 260.577  c
1076.35 260.838 1076.75 260.968 1077.25 260.968  c
1077.95 260.968 1078.51 260.720 1078.93 260.226  c
1079.35 259.731 1079.56 259.077 1079.56 258.265  c
1079.56 257.983 l
1078.31 257.983 l
h
1080.83 257.452 m
1080.83 261.827 l
1079.56 261.827 l
1079.56 260.671 l
1079.28 261.129 1078.92 261.470 1078.49 261.694  c
1078.06 261.918 1077.53 262.030 1076.92 262.030  c
1076.14 262.030 1075.52 261.809 1075.05 261.366  c
1074.59 260.924 1074.36 260.332 1074.36 259.593  c
1074.36 258.739 1074.65 258.093 1075.22 257.655  c
1075.80 257.218 1076.66 256.999 1077.79 256.999  c
1079.56 256.999 l
1079.56 256.874 l
1079.56 256.291 1079.37 255.840 1078.99 255.523  c
1078.61 255.205 1078.08 255.046 1077.39 255.046  c
1076.95 255.046 1076.52 255.101 1076.11 255.210  c
1075.69 255.319 1075.29 255.478 1074.92 255.687  c
1074.92 254.515 l
1075.38 254.338 1075.82 254.205 1076.26 254.116  c
1076.69 254.028 1077.11 253.983 1077.51 253.983  c
1078.63 253.983 1079.46 254.270 1080.01 254.843  c
1080.55 255.416 1080.83 256.286 1080.83 257.452  c
h
1087.84 255.343 m
1087.71 255.260 1087.56 255.200 1087.39 255.163  c
1087.22 255.127 1087.04 255.108 1086.84 255.108  c
1086.12 255.108 1085.57 255.340 1085.19 255.804  c
1084.81 256.267 1084.62 256.931 1084.62 257.796  c
1084.62 261.827 l
1083.36 261.827 l
1083.36 254.171 l
1084.62 254.171 l
1084.62 255.358 l
1084.89 254.890 1085.24 254.543 1085.66 254.319  c
1086.08 254.095 1086.60 253.983 1087.20 253.983  c
1087.30 253.983 1087.39 253.989 1087.50 253.999  c
1087.60 254.010 1087.72 254.030 1087.84 254.062  c
1087.84 255.343 l
h
1094.05 254.390 m
1094.05 255.593 l
1093.70 255.405 1093.33 255.267 1092.94 255.179  c
1092.56 255.090 1092.16 255.046 1091.75 255.046  c
1091.13 255.046 1090.66 255.140 1090.35 255.327  c
1090.04 255.515 1089.88 255.801 1089.88 256.187  c
1089.88 256.478 1089.99 256.707 1090.22 256.874  c
1090.44 257.041 1090.89 257.197 1091.57 257.343  c
1091.99 257.452 l
1092.88 257.640 1093.52 257.908 1093.89 258.257  c
1094.27 258.606 1094.46 259.093 1094.46 259.718  c
1094.46 260.426 1094.18 260.989 1093.61 261.405  c
1093.05 261.822 1092.28 262.030 1091.30 262.030  c
1090.88 262.030 1090.45 261.989 1090.01 261.905  c
1089.57 261.822 1089.10 261.702 1088.61 261.546  c
1088.61 260.249 l
1089.07 260.489 1089.53 260.668 1089.98 260.788  c
1090.43 260.908 1090.88 260.968 1091.32 260.968  c
1091.91 260.968 1092.37 260.866 1092.68 260.663  c
1093.00 260.460 1093.16 260.176 1093.16 259.812  c
1093.16 259.468 1093.05 259.205 1092.82 259.023  c
1092.59 258.840 1092.08 258.666 1091.30 258.499  c
1090.86 258.390 l
1090.09 258.233 1089.53 257.983 1089.18 257.640  c
1088.84 257.296 1088.66 256.832 1088.66 256.249  c
1088.66 255.520 1088.92 254.960 1089.43 254.569  c
1089.94 254.179 1090.66 253.983 1091.60 253.983  c
1092.07 253.983 1092.51 254.017 1092.92 254.085  c
1093.33 254.153 1093.71 254.254 1094.05 254.390  c
h
1103.02 257.687 m
1103.02 258.296 l
1097.22 258.296 l
1097.28 259.161 1097.55 259.819 1098.01 260.273  c
1098.47 260.726 1099.12 260.952 1099.95 260.952  c
1100.44 260.952 1100.92 260.895 1101.37 260.780  c
1101.82 260.666 1102.27 260.489 1102.72 260.249  c
1102.72 261.437 l
1102.26 261.624 1101.80 261.770 1101.32 261.874  c
1100.85 261.978 1100.37 262.030 1099.89 262.030  c
1098.66 262.030 1097.69 261.674 1096.98 260.960  c
1096.26 260.246 1095.91 259.286 1095.91 258.077  c
1095.91 256.817 1096.25 255.819 1096.92 255.085  c
1097.60 254.351 1098.52 253.983 1099.67 253.983  c
1100.70 253.983 1101.52 254.314 1102.12 254.976  c
1102.72 255.637 1103.02 256.541 1103.02 257.687  c
h
1101.75 257.312 m
1101.74 256.624 1101.55 256.075 1101.17 255.663  c
1100.80 255.252 1100.30 255.046 1099.69 255.046  c
1098.98 255.046 1098.42 255.246 1097.99 255.648  c
1097.57 256.049 1097.33 256.608 1097.27 257.327  c
1101.75 257.312 l
h
1109.51 255.343 m
1109.37 255.260 1109.22 255.200 1109.05 255.163  c
1108.89 255.127 1108.70 255.108 1108.51 255.108  c
1107.79 255.108 1107.24 255.340 1106.86 255.804  c
1106.48 256.267 1106.29 256.931 1106.29 257.796  c
1106.29 261.827 l
1105.02 261.827 l
1105.02 254.171 l
1106.29 254.171 l
1106.29 255.358 l
1106.56 254.890 1106.90 254.543 1107.33 254.319  c
1107.75 254.095 1108.26 253.983 1108.86 253.983  c
1108.96 253.983 1109.06 253.989 1109.16 253.999  c
1109.27 254.010 1109.38 254.030 1109.51 254.062  c
1109.51 255.343 l
h
f
2 J
10.0000 M
Q
q
q
[ 32.0000 0.00000 0.00000 32.0000 1189.24 224.695 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/ab6ii/'F*IpI?MN;#d.(AKcm1a)].T>'_6ii2RHP8KbhLm]u0XDB:]8m&H7a"!f+241l^Pjg>[W&
m4\rshm[IW1sL*,?#lB*_T[d8<>@rbA_H+eI=Y\caLeUUlPaW/VK!SG;&"cDD&II\ZVZ[P.a10iGb4*0
Y&2qFA^obnS6>DF8+-7<hcc=WRc\/r76es/cfWG<3HE>u@Hb:O?:B8^Q7pE:8J5X/*4_q\V_-EsS0H;%
K0##[4QW(']mfC2CZ.PsQ@JpgT9Ec4nV^cP.fKrJ+XG,~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1221.24 224.695 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIRr,D.ffk\?mD@Fn`fUgR?H([_]J0]%W'#a[U9b,,cO?92d\b8~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1307.36 224.695 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/bb6iht'Li'%J!(Kk&Y,X&$A.=@*@MUc:s!@=D47@m$(TfD!IM)t^3?.d$jP`/hDBE=^BfeY3).jc
d;t;YY+)<Q\o&>hLpef$^Nk2uOsJ5VU+"rOAZOh!LuUIdk64-_71hpf<Gb`@(K"14f6+tbCtj[JFeIsq
*chna08iAa,g3Kf-kKOI"\"lW=9K@pq<'U<5nHHs(/<9),*(]h/?q)&6mi&?5_0]JBng&`k;cQcSqrQU
E?&/T!k.TH+"(gXp:pDccXR?QaE:cN,l@q6cgk6<iV=QcN#<T~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1189.24 256.695 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+J#R!HnIQjI#7fj;75^*N:T_`Cn^s&<>lL([pb_U4^1OBA9StDXIT:_aJT:_bUa1l[=5Sj~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1307.36 256.695 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+:#QR0jINW&d!"tC/c:1tDAa8n8i'cF$e]cf3+u6L)\pJ&7_P65VkND$kkND$kkPt0]"dCDO
~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1189.24 263.266 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/aabk^I'L`!$Il_=s38qkk+UFf>E9"fY5fF=jUeo/#a\-jAeN4jlMQ2"F%k?.QmJB)jZ60D]_iQ.#
kP6b<kk**Fr650_r\+aTe!+G>j8NI(niVu-aL5qS;$92[XFD51Z7M1bEEuYtF\riMJ`F8p-'\CGgZEda
lT.a=htJ_GdPMCFhZj3#9)lWobHc4qLP\jDo/oF6KrV0*8gZpi5:]FVe@$s3N!Qf+:laR<QdGV,!EV6*
MP@m_8;ZC%ILm-bpV.nk#lJGd1f[O!#`JYCH-:\,?mse3.HiN,oOQhO^J`?"Y[6l^5D-d[r1,4=1`90
~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1221.24 263.266 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIS.IX!B<=G3u^agn`fUg&X(XR^a:U@$asIKG$tn^P18Op50,(;~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1307.36 263.266 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0L3=:C8'SYNEmjEu"U+"_D(4mZ+6lQM(:n3=%@-Zqb,c#_C!e)cb^"_oma)Q\R.#MJ:<Y,CZT(dZJ
D;0\nOCs!mBDnIs<E6GD3t0$1pN`?s,Y?HAa)Rh%.a)iL#%F4:JiJdWA_AaGf6*9&WU"jM7q,gb-&Nm!
7pOYgN8seaR\ig.bk&L94/K-nV]IOMBpsj)SeoFe;%sjs>usW<XAd2LF3K6Z&^RbaD;/cnLuZ;L^#4DG
`TENkQQqOPl,Q/7$==CuWiE:Kf6+SCET6OBh'l$WYDAZF?Btc$Hk_A/b')DJ+-d^u@K,R!IS:1I~>
Q
.874510 .870588 .870588 RG
newpath
1202.24 242.695 m
1202.24 271.266 l
1202.24 274.027 1204.48 276.266 1207.24 276.266  c
1315.36 276.266 l
1318.13 276.266 1320.36 274.027 1320.36 271.266  c
1320.36 242.695 l
1320.36 239.934 1318.13 237.695 1315.36 237.695  c
1207.24 237.695 l
1204.48 237.695 1202.24 239.934 1202.24 242.695  c
h
f
0.00000 0.00000 0.00000 RG
.501961 .501961 .501961 RG
0 J
1.45000 M
newpath
1202.24 242.695 m
1202.24 271.266 l
1202.24 274.027 1204.48 276.266 1207.24 276.266  c
1315.36 276.266 l
1318.13 276.266 1320.36 274.027 1320.36 271.266  c
1320.36 242.695 l
1320.36 239.934 1318.13 237.695 1315.36 237.695  c
1207.24 237.695 l
1204.48 237.695 1202.24 239.934 1202.24 242.695  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [1202.2445068359375 237.69529724121094 1206.9898681640625 266.64453125]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
1204.74 247.695 m
1204.74 242.695 1207.24 240.195 1212.24 240.195  c
1269.02 240.195 l
1274.02 240.195 1276.52 242.695 1276.52 247.695  c
1276.52 252.695 1267.06 257.005 1248.13 260.623  c
1229.21 264.242 1217.24 266.052 1212.24 266.052  c
1207.24 266.052 1204.74 263.552 1204.74 258.552  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1231.93 254.171 m
1233.20 254.171 l
1233.20 261.827 l
1231.93 261.827 l
1231.93 254.171 l
h
1231.93 251.187 m
1233.20 251.187 l
1233.20 252.780 l
1231.93 252.780 l
1231.93 251.187 l
h
1242.20 257.202 m
1242.20 261.827 l
1240.93 261.827 l
1240.93 257.249 l
1240.93 256.520 1240.79 255.976 1240.51 255.616  c
1240.23 255.257 1239.81 255.077 1239.25 255.077  c
1238.57 255.077 1238.03 255.293 1237.64 255.726  c
1237.24 256.158 1237.04 256.749 1237.04 257.499  c
1237.04 261.827 l
1235.78 261.827 l
1235.78 254.171 l
1237.04 254.171 l
1237.04 255.358 l
1237.34 254.900 1237.70 254.556 1238.11 254.327  c
1238.52 254.098 1239.00 253.983 1239.53 253.983  c
1240.40 253.983 1241.07 254.257 1241.52 254.804  c
1241.97 255.351 1242.20 256.150 1242.20 257.202  c
h
1245.95 251.999 m
1245.95 254.171 l
1248.54 254.171 l
1248.54 255.155 l
1245.95 255.155 l
1245.95 259.312 l
1245.95 259.926 1246.03 260.325 1246.20 260.507  c
1246.38 260.689 1246.72 260.780 1247.24 260.780  c
1248.54 260.780 l
1248.54 261.827 l
1247.24 261.827 l
1246.27 261.827 1245.61 261.645 1245.24 261.280  c
1244.87 260.916 1244.68 260.260 1244.68 259.312  c
1244.68 255.155 l
1243.76 255.155 l
1243.76 254.171 l
1244.68 254.171 l
1244.68 251.999 l
1245.95 251.999 l
h
1256.75 257.687 m
1256.75 258.296 l
1250.95 258.296 l
1251.01 259.161 1251.28 259.819 1251.74 260.273  c
1252.20 260.726 1252.85 260.952 1253.69 260.952  c
1254.18 260.952 1254.65 260.895 1255.10 260.780  c
1255.55 260.666 1256.00 260.489 1256.45 260.249  c
1256.45 261.437 l
1255.99 261.624 1255.53 261.770 1255.05 261.874  c
1254.58 261.978 1254.10 262.030 1253.62 262.030  c
1252.39 262.030 1251.42 261.674 1250.71 260.960  c
1250.00 260.246 1249.64 259.286 1249.64 258.077  c
1249.64 256.817 1249.98 255.819 1250.65 255.085  c
1251.33 254.351 1252.25 253.983 1253.40 253.983  c
1254.44 253.983 1255.25 254.314 1255.85 254.976  c
1256.45 255.637 1256.75 256.541 1256.75 257.687  c
h
1255.48 257.312 m
1255.47 256.624 1255.28 256.075 1254.90 255.663  c
1254.53 255.252 1254.03 255.046 1253.42 255.046  c
1252.71 255.046 1252.15 255.246 1251.72 255.648  c
1251.30 256.049 1251.06 256.608 1251.00 257.327  c
1255.48 257.312 l
h
1263.24 255.343 m
1263.10 255.260 1262.95 255.200 1262.78 255.163  c
1262.62 255.127 1262.43 255.108 1262.24 255.108  c
1261.52 255.108 1260.97 255.340 1260.59 255.804  c
1260.21 256.267 1260.02 256.931 1260.02 257.796  c
1260.02 261.827 l
1258.75 261.827 l
1258.75 254.171 l
1260.02 254.171 l
1260.02 255.358 l
1260.29 254.890 1260.64 254.543 1261.06 254.319  c
1261.48 254.095 1261.99 253.983 1262.60 253.983  c
1262.69 253.983 1262.79 253.989 1262.89 253.999  c
1263.00 254.010 1263.11 254.030 1263.24 254.062  c
1263.24 255.343 l
h
1265.77 260.671 m
1265.77 264.733 l
1264.51 264.733 l
1264.51 254.171 l
1265.77 254.171 l
1265.77 255.327 l
1266.04 254.879 1266.38 254.543 1266.78 254.319  c
1267.18 254.095 1267.66 253.983 1268.23 253.983  c
1269.15 253.983 1269.91 254.353 1270.49 255.093  c
1271.08 255.832 1271.37 256.801 1271.37 257.999  c
1271.37 259.207 1271.08 260.181 1270.49 260.921  c
1269.91 261.661 1269.15 262.030 1268.23 262.030  c
1267.66 262.030 1267.18 261.918 1266.78 261.694  c
1266.38 261.470 1266.04 261.129 1265.77 260.671  c
h
1270.05 257.999 m
1270.05 257.082 1269.86 256.361 1269.48 255.835  c
1269.10 255.309 1268.58 255.046 1267.91 255.046  c
1267.25 255.046 1266.72 255.309 1266.34 255.835  c
1265.96 256.361 1265.77 257.082 1265.77 257.999  c
1265.77 258.926 1265.96 259.653 1266.34 260.179  c
1266.72 260.705 1267.25 260.968 1267.91 260.968  c
1268.58 260.968 1269.10 260.705 1269.48 260.179  c
1269.86 259.653 1270.05 258.926 1270.05 257.999  c
h
1277.88 255.343 m
1277.74 255.260 1277.59 255.200 1277.43 255.163  c
1277.26 255.127 1277.08 255.108 1276.88 255.108  c
1276.16 255.108 1275.61 255.340 1275.23 255.804  c
1274.85 256.267 1274.66 256.931 1274.66 257.796  c
1274.66 261.827 l
1273.39 261.827 l
1273.39 254.171 l
1274.66 254.171 l
1274.66 255.358 l
1274.93 254.890 1275.28 254.543 1275.70 254.319  c
1276.12 254.095 1276.63 253.983 1277.24 253.983  c
1277.33 253.983 1277.43 253.989 1277.54 253.999  c
1277.64 254.010 1277.75 254.030 1277.88 254.062  c
1277.88 255.343 l
h
1285.76 257.687 m
1285.76 258.296 l
1279.96 258.296 l
1280.03 259.161 1280.29 259.819 1280.75 260.273  c
1281.22 260.726 1281.86 260.952 1282.70 260.952  c
1283.19 260.952 1283.66 260.895 1284.11 260.780  c
1284.56 260.666 1285.02 260.489 1285.46 260.249  c
1285.46 261.437 l
1285.00 261.624 1284.54 261.770 1284.06 261.874  c
1283.59 261.978 1283.11 262.030 1282.64 262.030  c
1281.41 262.030 1280.43 261.674 1279.72 260.960  c
1279.01 260.246 1278.65 259.286 1278.65 258.077  c
1278.65 256.817 1278.99 255.819 1279.67 255.085  c
1280.34 254.351 1281.26 253.983 1282.42 253.983  c
1283.45 253.983 1284.26 254.314 1284.86 254.976  c
1285.46 255.637 1285.76 256.541 1285.76 257.687  c
h
1284.49 257.312 m
1284.48 256.624 1284.29 256.075 1283.92 255.663  c
1283.54 255.252 1283.05 255.046 1282.43 255.046  c
1281.72 255.046 1281.16 255.246 1280.74 255.648  c
1280.31 256.049 1280.07 256.608 1280.01 257.327  c
1284.49 257.312 l
h
1289.06 251.999 m
1289.06 254.171 l
1291.65 254.171 l
1291.65 255.155 l
1289.06 255.155 l
1289.06 259.312 l
1289.06 259.926 1289.15 260.325 1289.32 260.507  c
1289.49 260.689 1289.84 260.780 1290.36 260.780  c
1291.65 260.780 l
1291.65 261.827 l
1290.36 261.827 l
1289.39 261.827 1288.72 261.645 1288.35 261.280  c
1287.98 260.916 1287.80 260.260 1287.80 259.312  c
1287.80 255.155 l
1286.87 255.155 l
1286.87 254.171 l
1287.80 254.171 l
1287.80 251.999 l
1289.06 251.999 l
h
f
2 J
10.0000 M
Q
q
q
[ 32.0000 0.00000 0.00000 32.0000 1015.01 293.266 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/ab6ii/'F*IpI?MN;#d.(AKcm1a)].T>'_6ii2RHP8KbhLm]u0XDB:]8m&H7a"!f+241l^Pjg>[W&
m4\rshm[IW1sL*,?#lB*_T[d8<>@rbA_H+eI=Y\caLeUUlPaW/VK!SG;&"cDD&II\ZVZ[P.a10iGb4*0
Y&2qFA^obnS6>DF8+-7<hcc=WRc\/r76es/cfWG<3HE>u@Hb:O?:B8^Q7pE:8J5X/*4_q\V_-EsS0H;%
K0##[4QW(']mfC2CZ.PsQ@JpgT9Ec4nV^cP.fKrJ+XG,~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1047.01 293.266 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIRr,D.ffk\?mD@Fn`fUgR?H([_]J0]%W'#a[U9b,,cO?92d\b8~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1133.13 293.266 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/bb6iht'Li'%J!(Kk&Y,X&$A.=@*@MUc:s!@=D47@m$(TfD!IM)t^3?.d$jP`/hDBE=^BfeY3).jc
d;t;YY+)<Q\o&>hLpef$^Nk2uOsJ5VU+"rOAZOh!LuUIdk64-_71hpf<Gb`@(K"14f6+tbCtj[JFeIsq
*chna08iAa,g3Kf-kKOI"\"lW=9K@pq<'U<5nHHs(/<9),*(]h/?q)&6mi&?5_0]JBng&`k;cQcSqrQU
E?&/T!k.TH+"(gXp:pDccXR?QaE:cN,l@q6cgk6<iV=QcN#<T~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1015.01 325.266 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+J#R!HnIQjI#7fj;75^*N:T_`Cn^s&<>lL([pb_U4^1OBA9StDXIT:_aJT:_bUa1l[=5Sj~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1133.13 325.266 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+:#QR0jINW&d!"tC/c:1tDAa8n8i'cF$e]cf3+u6L)\pJ&7_P65VkND$kkND$kkPt0]"dCDO
~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1015.01 331.836 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/aabk^I'L`!$Il_=s38qkk+UFf>E9"fY5fF=jUeo/#a\-jAeN4jlMQ2"F%k?.QmJB)jZ60D]_iQ.#
kP6b<kk**Fr650_r\+aTe!+G>j8NI(niVu-aL5qS;$92[XFD51Z7M1bEEuYtF\riMJ`F8p-'\CGgZEda
lT.a=htJ_GdPMCFhZj3#9)lWobHc4qLP\jDo/oF6KrV0*8gZpi5:]FVe@$s3N!Qf+:laR<QdGV,!EV6*
MP@m_8;ZC%ILm-bpV.nk#lJGd1f[O!#`JYCH-:\,?mse3.HiN,oOQhO^J`?"Y[6l^5D-d[r1,4=1`90
~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1047.01 331.836 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIS.IX!B<=G3u^agn`fUg&X(XR^a:U@$asIKG$tn^P18Op50,(;~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1133.13 331.836 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0L3=:C8'SYNEmjEu"U+"_D(4mZ+6lQM(:n3=%@-Zqb,c#_C!e)cb^"_oma)Q\R.#MJ:<Y,CZT(dZJ
D;0\nOCs!mBDnIs<E6GD3t0$1pN`?s,Y?HAa)Rh%.a)iL#%F4:JiJdWA_AaGf6*9&WU"jM7q,gb-&Nm!
7pOYgN8seaR\ig.bk&L94/K-nV]IOMBpsj)SeoFe;%sjs>usW<XAd2LF3K6Z&^RbaD;/cnLuZ;L^#4DG
`TENkQQqOPl,Q/7$==CuWiE:Kf6+SCET6OBh'l$WYDAZF?Btc$Hk_A/b')DJ+-d^u@K,R!IS:1I~>
Q
.874510 .870588 .870588 RG
newpath
1028.01 311.266 m
1028.01 339.836 l
1028.01 342.598 1030.25 344.836 1033.01 344.836  c
1141.13 344.836 l
1143.89 344.836 1146.13 342.598 1146.13 339.836  c
1146.13 311.266 l
1146.13 308.504 1143.89 306.266 1141.13 306.266  c
1033.01 306.266 l
1030.25 306.266 1028.01 308.504 1028.01 311.266  c
h
f
0.00000 0.00000 0.00000 RG
.501961 .501961 .501961 RG
0 J
1.45000 M
newpath
1028.01 311.266 m
1028.01 339.836 l
1028.01 342.598 1030.25 344.836 1033.01 344.836  c
1141.13 344.836 l
1143.89 344.836 1146.13 342.598 1146.13 339.836  c
1146.13 311.266 l
1146.13 308.504 1143.89 306.266 1141.13 306.266  c
1033.01 306.266 l
1030.25 306.266 1028.01 308.504 1028.01 311.266  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [1028.0087890625 306.2657470703125 1032.754150390625 335.2149963378906]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
1030.51 316.266 m
1030.51 311.266 1033.01 308.766 1038.01 308.766  c
1094.79 308.766 l
1099.79 308.766 1102.29 311.266 1102.29 316.266  c
1102.29 321.266 1092.82 325.575 1073.90 329.194  c
1054.97 332.813 1043.01 334.622 1038.01 334.622  c
1033.01 334.622 1030.51 332.122 1030.51 327.122  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1056.91 326.257 m
1056.91 326.866 l
1051.11 326.866 l
1051.17 327.731 1051.44 328.390 1051.90 328.843  c
1052.36 329.296 1053.01 329.523 1053.85 329.523  c
1054.34 329.523 1054.81 329.465 1055.26 329.351  c
1055.71 329.236 1056.16 329.059 1056.61 328.820  c
1056.61 330.007 l
1056.15 330.195 1055.69 330.340 1055.21 330.445  c
1054.74 330.549 1054.26 330.601 1053.78 330.601  c
1052.55 330.601 1051.58 330.244 1050.87 329.530  c
1050.16 328.817 1049.80 327.856 1049.80 326.648  c
1049.80 325.387 1050.14 324.390 1050.81 323.655  c
1051.49 322.921 1052.41 322.554 1053.56 322.554  c
1054.60 322.554 1055.41 322.885 1056.01 323.546  c
1056.61 324.208 1056.91 325.111 1056.91 326.257  c
h
1055.64 325.882 m
1055.63 325.195 1055.44 324.645 1055.06 324.234  c
1054.69 323.822 1054.20 323.616 1053.58 323.616  c
1052.87 323.616 1052.31 323.817 1051.89 324.218  c
1051.46 324.619 1051.22 325.179 1051.16 325.898  c
1055.64 325.882 l
h
1065.33 322.741 m
1062.57 326.460 l
1065.47 330.398 l
1063.99 330.398 l
1061.76 327.382 l
1059.54 330.398 l
1058.05 330.398 l
1061.02 326.398 l
1058.30 322.741 l
1059.79 322.741 l
1061.82 325.476 l
1063.85 322.741 l
1065.33 322.741 l
h
1068.46 329.241 m
1068.46 333.304 l
1067.20 333.304 l
1067.20 322.741 l
1068.46 322.741 l
1068.46 323.898 l
1068.73 323.450 1069.07 323.114 1069.47 322.890  c
1069.87 322.666 1070.35 322.554 1070.92 322.554  c
1071.84 322.554 1072.60 322.924 1073.18 323.663  c
1073.77 324.403 1074.06 325.372 1074.06 326.570  c
1074.06 327.778 1073.77 328.752 1073.18 329.491  c
1072.60 330.231 1071.84 330.601 1070.92 330.601  c
1070.35 330.601 1069.87 330.489 1069.47 330.265  c
1069.07 330.041 1068.73 329.700 1068.46 329.241  c
h
1072.74 326.570 m
1072.74 325.653 1072.55 324.931 1072.17 324.405  c
1071.79 323.879 1071.27 323.616 1070.60 323.616  c
1069.94 323.616 1069.41 323.879 1069.03 324.405  c
1068.65 324.931 1068.46 325.653 1068.46 326.570  c
1068.46 327.497 1068.65 328.223 1069.03 328.749  c
1069.41 329.275 1069.94 329.538 1070.60 329.538  c
1071.27 329.538 1071.79 329.275 1072.17 328.749  c
1072.55 328.223 1072.74 327.497 1072.74 326.570  c
h
1080.57 323.913 m
1080.43 323.830 1080.28 323.770 1080.12 323.734  c
1079.95 323.697 1079.77 323.679 1079.57 323.679  c
1078.85 323.679 1078.30 323.911 1077.92 324.374  c
1077.54 324.838 1077.35 325.502 1077.35 326.366  c
1077.35 330.398 l
1076.08 330.398 l
1076.08 322.741 l
1077.35 322.741 l
1077.35 323.929 l
1077.62 323.460 1077.97 323.114 1078.39 322.890  c
1078.81 322.666 1079.32 322.554 1079.93 322.554  c
1080.02 322.554 1080.12 322.559 1080.22 322.570  c
1080.33 322.580 1080.44 322.601 1080.57 322.632  c
1080.57 323.913 l
h
1088.45 326.257 m
1088.45 326.866 l
1082.65 326.866 l
1082.72 327.731 1082.98 328.390 1083.44 328.843  c
1083.91 329.296 1084.55 329.523 1085.39 329.523  c
1085.88 329.523 1086.35 329.465 1086.80 329.351  c
1087.25 329.236 1087.70 329.059 1088.15 328.820  c
1088.15 330.007 l
1087.69 330.195 1087.23 330.340 1086.75 330.445  c
1086.28 330.549 1085.80 330.601 1085.32 330.601  c
1084.10 330.601 1083.12 330.244 1082.41 329.530  c
1081.70 328.817 1081.34 327.856 1081.34 326.648  c
1081.34 325.387 1081.68 324.390 1082.36 323.655  c
1083.03 322.921 1083.95 322.554 1085.11 322.554  c
1086.14 322.554 1086.95 322.885 1087.55 323.546  c
1088.15 324.208 1088.45 325.111 1088.45 326.257  c
h
1087.18 325.882 m
1087.17 325.195 1086.98 324.645 1086.61 324.234  c
1086.23 323.822 1085.74 323.616 1085.12 323.616  c
1084.41 323.616 1083.85 323.817 1083.43 324.218  c
1083.00 324.619 1082.76 325.179 1082.70 325.898  c
1087.18 325.882 l
h
1095.39 322.960 m
1095.39 324.163 l
1095.04 323.976 1094.67 323.838 1094.28 323.749  c
1093.90 323.661 1093.50 323.616 1093.09 323.616  c
1092.47 323.616 1092.00 323.710 1091.69 323.898  c
1091.38 324.085 1091.22 324.372 1091.22 324.757  c
1091.22 325.049 1091.33 325.278 1091.56 325.445  c
1091.78 325.611 1092.23 325.767 1092.91 325.913  c
1093.33 326.023 l
1094.22 326.210 1094.86 326.478 1095.23 326.827  c
1095.61 327.176 1095.80 327.663 1095.80 328.288  c
1095.80 328.997 1095.52 329.559 1094.95 329.976  c
1094.39 330.392 1093.62 330.601 1092.64 330.601  c
1092.22 330.601 1091.79 330.559 1091.35 330.476  c
1090.91 330.392 1090.44 330.273 1089.95 330.116  c
1089.95 328.820 l
1090.41 329.059 1090.87 329.239 1091.32 329.359  c
1091.77 329.478 1092.22 329.538 1092.66 329.538  c
1093.25 329.538 1093.71 329.437 1094.02 329.234  c
1094.34 329.030 1094.50 328.747 1094.50 328.382  c
1094.50 328.038 1094.39 327.775 1094.16 327.593  c
1093.93 327.411 1093.42 327.236 1092.64 327.070  c
1092.20 326.960 l
1091.43 326.804 1090.87 326.554 1090.52 326.210  c
1090.17 325.866 1090.00 325.403 1090.00 324.820  c
1090.00 324.090 1090.26 323.530 1090.77 323.140  c
1091.28 322.749 1092.00 322.554 1092.94 322.554  c
1093.41 322.554 1093.85 322.588 1094.26 322.655  c
1094.67 322.723 1095.05 322.825 1095.39 322.960  c
h
1102.68 322.960 m
1102.68 324.163 l
1102.33 323.976 1101.96 323.838 1101.58 323.749  c
1101.19 323.661 1100.79 323.616 1100.39 323.616  c
1099.76 323.616 1099.29 323.710 1098.98 323.898  c
1098.67 324.085 1098.51 324.372 1098.51 324.757  c
1098.51 325.049 1098.63 325.278 1098.85 325.445  c
1099.07 325.611 1099.52 325.767 1100.20 325.913  c
1100.62 326.023 l
1101.52 326.210 1102.15 326.478 1102.53 326.827  c
1102.90 327.176 1103.09 327.663 1103.09 328.288  c
1103.09 328.997 1102.81 329.559 1102.25 329.976  c
1101.68 330.392 1100.91 330.601 1099.93 330.601  c
1099.52 330.601 1099.09 330.559 1098.65 330.476  c
1098.20 330.392 1097.74 330.273 1097.25 330.116  c
1097.25 328.820 l
1097.71 329.059 1098.16 329.239 1098.61 329.359  c
1099.07 329.478 1099.51 329.538 1099.95 329.538  c
1100.54 329.538 1101.00 329.437 1101.32 329.234  c
1101.64 329.030 1101.79 328.747 1101.79 328.382  c
1101.79 328.038 1101.68 327.775 1101.45 327.593  c
1101.22 327.411 1100.72 327.236 1099.93 327.070  c
1099.50 326.960 l
1098.73 326.804 1098.17 326.554 1097.82 326.210  c
1097.47 325.866 1097.29 325.403 1097.29 324.820  c
1097.29 324.090 1097.55 323.530 1098.06 323.140  c
1098.57 322.749 1099.29 322.554 1100.23 322.554  c
1100.70 322.554 1101.14 322.588 1101.55 322.655  c
1101.96 322.723 1102.34 322.825 1102.68 322.960  c
h
1105.09 322.741 m
1106.35 322.741 l
1106.35 330.398 l
1105.09 330.398 l
1105.09 322.741 l
h
1105.09 319.757 m
1106.35 319.757 l
1106.35 321.351 l
1105.09 321.351 l
1105.09 319.757 l
h
1111.95 323.616 m
1111.28 323.616 1110.75 323.879 1110.35 324.405  c
1109.96 324.931 1109.76 325.653 1109.76 326.570  c
1109.76 327.486 1109.95 328.208 1110.35 328.734  c
1110.74 329.260 1111.27 329.523 1111.95 329.523  c
1112.62 329.523 1113.16 329.260 1113.55 328.734  c
1113.94 328.208 1114.13 327.486 1114.13 326.570  c
1114.13 325.663 1113.94 324.945 1113.55 324.413  c
1113.16 323.882 1112.62 323.616 1111.95 323.616  c
h
1111.95 322.554 m
1113.04 322.554 1113.90 322.911 1114.52 323.624  c
1115.15 324.338 1115.46 325.320 1115.46 326.570  c
1115.46 327.830 1115.15 328.817 1114.52 329.530  c
1113.90 330.244 1113.04 330.601 1111.95 330.601  c
1110.85 330.601 1109.99 330.244 1109.37 329.530  c
1108.74 328.817 1108.43 327.830 1108.43 326.570  c
1108.43 325.320 1108.74 324.338 1109.37 323.624  c
1109.99 322.911 1110.85 322.554 1111.95 322.554  c
h
1123.92 325.773 m
1123.92 330.398 l
1122.65 330.398 l
1122.65 325.820 l
1122.65 325.090 1122.51 324.546 1122.23 324.187  c
1121.95 323.827 1121.53 323.648 1120.97 323.648  c
1120.29 323.648 1119.75 323.864 1119.36 324.296  c
1118.96 324.728 1118.76 325.320 1118.76 326.070  c
1118.76 330.398 l
1117.50 330.398 l
1117.50 322.741 l
1118.76 322.741 l
1118.76 323.929 l
1119.06 323.471 1119.42 323.127 1119.83 322.898  c
1120.24 322.668 1120.72 322.554 1121.25 322.554  c
1122.12 322.554 1122.79 322.827 1123.24 323.374  c
1123.69 323.921 1123.92 324.721 1123.92 325.773  c
h
f
2 J
10.0000 M
Q
.501961 .501961 .501961 RG
1 J
1.45000 M
[ 0.00000 4.00000 ] 2.00000 d
newpath
971.918 266.373 m
1020.00 266.373 l
S
newpath
1028.00 266.373 m
1016.00 261.373 l
1019.00 266.373 l
1016.00 271.373 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1028.00 256.981 m
979.875 256.981 l
S
newpath
971.875 256.981 m
983.875 261.981 l
980.875 256.981 l
983.875 251.981 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
1146.15 256.981 m
1194.24 256.981 l
S
newpath
1202.24 256.981 m
1190.24 251.981 l
1193.24 256.981 l
1190.24 261.981 l
h
f
2 J
10.0000 M
.501961 .501961 .501961 RG
1 J
1.45000 M
[ 0.00000 4.00000 ] 2.00000 d
newpath
901.006 276.296 m
901.006 335.312 l
1019.99 335.312 l
S
newpath
1027.99 335.312 m
1015.99 330.312 l
1018.99 335.312 l
1015.99 340.312 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1087.07 276.271 m
1087.07 298.296 l
S
newpath
1087.07 306.296 m
1092.07 294.296 l
1087.07 297.296 l
1082.07 294.296 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
1027.98 325.551 m
912.833 325.551 l
912.833 284.232 l
S
newpath
912.833 276.232 m
907.833 288.232 l
912.833 285.232 l
917.833 288.232 l
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
