%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 318 575 473
%%Creator: yExport 1.2
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, December 13, 2011 1:03:14 PM CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
498 138 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
498.000 0.00000 l
498.000 138.000 l
0.00000 138.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 498 138 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -838.000 -497.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
838.000 497.000 m
1336.00 497.000 l
1336.00 635.000 l
838.000 635.000 l
838.000 497.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -838.000 -497.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -838.000 -497.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -838.000 -497.000 ] defaultmatrix matrix concatmatrix setmatrix
q
q
[ 32.0000 0.00000 0.00000 32.0000 840.773 499.492 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/ab6ii/'F*IpI?MN;#d.(AKcm1a)].T>'_6ii2RHP8KbhLm]u0XDB:]8m&H7a"!f+241l^Pjg>[W&
m4\rshm[IW1sL*,?#lB*_T[d8<>@rbA_H+eI=Y\caLeUUlPaW/VK!SG;&"cDD&II\ZVZ[P.a10iGb4*0
Y&2qFA^obnS6>DF8+-7<hcc=WRc\/r76es/cfWG<3HE>u@Hb:O?:B8^Q7pE:8J5X/*4_q\V_-EsS0H;%
K0##[4QW(']mfC2CZ.PsQ@JpgT9Ec4nV^cP.fKrJ+XG,~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 872.773 499.492 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIRr,D.ffk\?mD@Fn`fUgR?H([_]J0]%W'#a[U9b,,cO?92d\b8~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 958.893 499.492 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/bb6iht'Li'%J!(Kk&Y,X&$A.=@*@MUc:s!@=D47@m$(TfD!IM)t^3?.d$jP`/hDBE=^BfeY3).jc
d;t;YY+)<Q\o&>hLpef$^Nk2uOsJ5VU+"rOAZOh!LuUIdk64-_71hpf<Gb`@(K"14f6+tbCtj[JFeIsq
*chna08iAa,g3Kf-kKOI"\"lW=9K@pq<'U<5nHHs(/<9),*(]h/?q)&6mi&?5_0]JBng&`k;cQcSqrQU
E?&/T!k.TH+"(gXp:pDccXR?QaE:cN,l@q6cgk6<iV=QcN#<T~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 840.773 531.492 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+J#R!HnIQjI#7fj;75^*N:T_`Cn^s&<>lL([pb_U4^1OBA9StDXIT:_aJT:_bUa1l[=5Sj~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 958.893 531.492 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+:#QR0jINW&d!"tC/c:1tDAa8n8i'cF$e]cf3+u6L)\pJ&7_P65VkND$kkND$kkPt0]"dCDO
~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 840.773 538.063 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/aabk^I'L`!$Il_=s38qkk+UFf>E9"fY5fF=jUeo/#a\-jAeN4jlMQ2"F%k?.QmJB)jZ60D]_iQ.#
kP6b<kk**Fr650_r\+aTe!+G>j8NI(niVu-aL5qS;$92[XFD51Z7M1bEEuYtF\riMJ`F8p-'\CGgZEda
lT.a=htJ_GdPMCFhZj3#9)lWobHc4qLP\jDo/oF6KrV0*8gZpi5:]FVe@$s3N!Qf+:laR<QdGV,!EV6*
MP@m_8;ZC%ILm-bpV.nk#lJGd1f[O!#`JYCH-:\,?mse3.HiN,oOQhO^J`?"Y[6l^5D-d[r1,4=1`90
~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 872.773 538.063 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIS.IX!B<=G3u^agn`fUg&X(XR^a:U@$asIKG$tn^P18Op50,(;~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 958.893 538.063 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0L3=:C8'SYNEmjEu"U+"_D(4mZ+6lQM(:n3=%@-Zqb,c#_C!e)cb^"_oma)Q\R.#MJ:<Y,CZT(dZJ
D;0\nOCs!mBDnIs<E6GD3t0$1pN`?s,Y?HAa)Rh%.a)iL#%F4:JiJdWA_AaGf6*9&WU"jM7q,gb-&Nm!
7pOYgN8seaR\ig.bk&L94/K-nV]IOMBpsj)SeoFe;%sjs>usW<XAd2LF3K6Z&^RbaD;/cnLuZ;L^#4DG
`TENkQQqOPl,Q/7$==CuWiE:Kf6+SCET6OBh'l$WYDAZF?Btc$Hk_A/b')DJ+-d^u@K,R!IS:1I~>
Q
.874510 .870588 .870588 RG
newpath
853.773 517.492 m
853.773 546.063 l
853.773 548.824 856.012 551.063 858.773 551.063  c
966.893 551.063 l
969.654 551.063 971.893 548.824 971.893 546.063  c
971.893 517.492 l
971.893 514.731 969.654 512.492 966.893 512.492  c
858.773 512.492 l
856.012 512.492 853.773 514.731 853.773 517.492  c
h
f
0.00000 0.00000 0.00000 RG
.501961 .501961 .501961 RG
0 J
1.45000 M
newpath
853.773 517.492 m
853.773 546.063 l
853.773 548.824 856.012 551.063 858.773 551.063  c
966.893 551.063 l
969.654 551.063 971.893 548.824 971.893 546.063  c
971.893 517.492 l
971.893 514.731 969.654 512.492 966.893 512.492  c
858.773 512.492 l
856.012 512.492 853.773 514.731 853.773 517.492  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [853.7730102539062 512.4924926757812 858.5183715820312 541.4417114257812]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
856.273 522.492 m
856.273 517.492 858.773 514.992 863.773 514.992  c
920.551 514.992 l
925.551 514.992 928.051 517.492 928.051 522.492  c
928.051 527.492 918.588 531.802 899.662 535.421  c
880.736 539.039 868.773 540.849 863.773 540.849  c
858.773 540.849 856.273 538.349 856.273 533.349  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
891.193 529.187 m
891.193 530.390 l
890.839 530.203 890.469 530.064 890.084 529.976  c
889.699 529.887 889.303 529.843 888.896 529.843  c
888.271 529.843 887.803 529.937 887.490 530.124  c
887.178 530.312 887.021 530.598 887.021 530.984  c
887.021 531.275 887.133 531.505 887.357 531.671  c
887.581 531.838 888.032 531.994 888.709 532.140  c
889.131 532.249 l
890.027 532.437 890.662 532.705 891.037 533.054  c
891.412 533.403 891.600 533.890 891.600 534.515  c
891.600 535.223 891.318 535.786 890.756 536.203  c
890.193 536.619 889.423 536.828 888.443 536.828  c
888.027 536.828 887.597 536.786 887.154 536.703  c
886.712 536.619 886.245 536.499 885.756 536.343  c
885.756 535.046 l
886.214 535.286 886.670 535.466 887.123 535.585  c
887.576 535.705 888.021 535.765 888.459 535.765  c
889.053 535.765 889.508 535.663 889.826 535.460  c
890.144 535.257 890.303 534.973 890.303 534.609  c
890.303 534.265 890.188 534.002 889.959 533.820  c
889.730 533.637 889.225 533.463 888.443 533.296  c
888.006 533.187 l
887.235 533.031 886.675 532.781 886.326 532.437  c
885.977 532.093 885.803 531.630 885.803 531.046  c
885.803 530.317 886.058 529.757 886.568 529.367  c
887.079 528.976 887.803 528.781 888.740 528.781  c
889.209 528.781 889.649 528.814 890.061 528.882  c
890.472 528.950 890.850 529.051 891.193 529.187  c
h
899.112 529.265 m
899.112 530.437 l
898.758 530.239 898.401 530.091 898.042 529.992  c
897.683 529.893 897.321 529.843 896.956 529.843  c
896.144 529.843 895.511 530.104 895.058 530.624  c
894.604 531.145 894.378 531.869 894.378 532.796  c
894.378 533.734 894.604 534.460 895.058 534.976  c
895.511 535.492 896.144 535.749 896.956 535.749  c
897.321 535.749 897.683 535.703 898.042 535.609  c
898.401 535.515 898.758 535.369 899.112 535.171  c
899.112 536.328 l
898.758 536.494 898.394 536.619 898.019 536.703  c
897.644 536.786 897.248 536.828 896.831 536.828  c
895.675 536.828 894.756 536.466 894.073 535.742  c
893.391 535.018 893.050 534.036 893.050 532.796  c
893.050 531.557 893.394 530.578 894.081 529.859  c
894.769 529.140 895.711 528.781 896.909 528.781  c
897.295 528.781 897.672 528.820 898.042 528.898  c
898.412 528.976 898.769 529.098 899.112 529.265  c
h
904.778 532.781 m
903.768 532.781 903.065 532.895 902.669 533.124  c
902.273 533.354 902.075 533.749 902.075 534.312  c
902.075 534.760 902.224 535.114 902.521 535.374  c
902.817 535.635 903.216 535.765 903.716 535.765  c
904.414 535.765 904.974 535.518 905.396 535.023  c
905.817 534.528 906.028 533.874 906.028 533.062  c
906.028 532.781 l
904.778 532.781 l
h
907.294 532.249 m
907.294 536.624 l
906.028 536.624 l
906.028 535.468 l
905.747 535.926 905.390 536.268 904.958 536.492  c
904.526 536.716 904.002 536.828 903.388 536.828  c
902.606 536.828 901.984 536.606 901.521 536.163  c
901.057 535.721 900.825 535.130 900.825 534.390  c
900.825 533.536 901.114 532.890 901.692 532.453  c
902.271 532.015 903.127 531.796 904.263 531.796  c
906.028 531.796 l
906.028 531.671 l
906.028 531.088 905.838 530.637 905.458 530.320  c
905.078 530.002 904.544 529.843 903.856 529.843  c
903.419 529.843 902.992 529.898 902.575 530.007  c
902.159 530.117 901.763 530.275 901.388 530.484  c
901.388 529.312 l
901.846 529.135 902.291 529.002 902.724 528.913  c
903.156 528.825 903.575 528.781 903.981 528.781  c
905.096 528.781 905.927 529.067 906.474 529.640  c
907.021 530.213 907.294 531.083 907.294 532.249  c
h
916.248 531.999 m
916.248 536.624 l
914.982 536.624 l
914.982 532.046 l
914.982 531.317 914.842 530.773 914.561 530.413  c
914.279 530.054 913.857 529.874 913.295 529.874  c
912.618 529.874 912.081 530.091 911.686 530.523  c
911.290 530.955 911.092 531.546 911.092 532.296  c
911.092 536.624 l
909.826 536.624 l
909.826 528.968 l
911.092 528.968 l
911.092 530.156 l
911.394 529.697 911.751 529.354 912.162 529.124  c
912.574 528.895 913.045 528.781 913.576 528.781  c
914.451 528.781 915.115 529.054 915.568 529.601  c
916.021 530.148 916.248 530.947 916.248 531.999  c
h
925.121 531.999 m
925.121 536.624 l
923.855 536.624 l
923.855 532.046 l
923.855 531.317 923.715 530.773 923.434 530.413  c
923.152 530.054 922.730 529.874 922.168 529.874  c
921.491 529.874 920.954 530.091 920.559 530.523  c
920.163 530.955 919.965 531.546 919.965 532.296  c
919.965 536.624 l
918.699 536.624 l
918.699 528.968 l
919.965 528.968 l
919.965 530.156 l
920.267 529.697 920.624 529.354 921.035 529.124  c
921.447 528.895 921.918 528.781 922.449 528.781  c
923.324 528.781 923.988 529.054 924.441 529.601  c
924.895 530.148 925.121 530.947 925.121 531.999  c
h
934.182 532.484 m
934.182 533.093 l
928.385 533.093 l
928.447 533.958 928.710 534.617 929.174 535.070  c
929.637 535.523 930.286 535.749 931.119 535.749  c
931.609 535.749 932.080 535.692 932.533 535.578  c
932.986 535.463 933.437 535.286 933.885 535.046  c
933.885 536.234 l
933.426 536.421 932.960 536.567 932.486 536.671  c
932.012 536.775 931.536 536.828 931.057 536.828  c
929.827 536.828 928.856 536.471 928.143 535.757  c
927.429 535.044 927.072 534.083 927.072 532.874  c
927.072 531.614 927.411 530.617 928.088 529.882  c
928.765 529.148 929.682 528.781 930.838 528.781  c
931.869 528.781 932.684 529.111 933.283 529.773  c
933.882 530.434 934.182 531.338 934.182 532.484  c
h
932.916 532.109 m
932.906 531.421 932.713 530.872 932.338 530.460  c
931.963 530.049 931.468 529.843 930.854 529.843  c
930.145 529.843 929.580 530.044 929.158 530.445  c
928.736 530.846 928.494 531.406 928.432 532.124  c
932.916 532.109 l
h
940.670 530.140 m
940.535 530.057 940.383 529.997 940.217 529.960  c
940.050 529.924 939.868 529.906 939.670 529.906  c
938.951 529.906 938.402 530.137 938.021 530.601  c
937.641 531.064 937.451 531.729 937.451 532.593  c
937.451 536.624 l
936.186 536.624 l
936.186 528.968 l
937.451 528.968 l
937.451 530.156 l
937.722 529.687 938.068 529.341 938.490 529.117  c
938.912 528.893 939.425 528.781 940.029 528.781  c
940.123 528.781 940.222 528.786 940.326 528.796  c
940.430 528.807 940.545 528.828 940.670 528.859  c
940.670 530.140 l
h
f
2 J
10.0000 M
Q
q
q
[ 32.0000 0.00000 0.00000 32.0000 1015.01 499.492 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/ab6ii/'F*IpI?MN;#d.(AKcm1a)].T>'_6ii2RHP8KbhLm]u0XDB:]8m&H7a"!f+241l^Pjg>[W&
m4\rshm[IW1sL*,?#lB*_T[d8<>@rbA_H+eI=Y\caLeUUlPaW/VK!SG;&"cDD&II\ZVZ[P.a10iGb4*0
Y&2qFA^obnS6>DF8+-7<hcc=WRc\/r76es/cfWG<3HE>u@Hb:O?:B8^Q7pE:8J5X/*4_q\V_-EsS0H;%
K0##[4QW(']mfC2CZ.PsQ@JpgT9Ec4nV^cP.fKrJ+XG,~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1047.01 499.492 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIRr,D.ffk\?mD@Fn`fUgR?H([_]J0]%W'#a[U9b,,cO?92d\b8~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1133.13 499.492 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/bb6iht'Li'%J!(Kk&Y,X&$A.=@*@MUc:s!@=D47@m$(TfD!IM)t^3?.d$jP`/hDBE=^BfeY3).jc
d;t;YY+)<Q\o&>hLpef$^Nk2uOsJ5VU+"rOAZOh!LuUIdk64-_71hpf<Gb`@(K"14f6+tbCtj[JFeIsq
*chna08iAa,g3Kf-kKOI"\"lW=9K@pq<'U<5nHHs(/<9),*(]h/?q)&6mi&?5_0]JBng&`k;cQcSqrQU
E?&/T!k.TH+"(gXp:pDccXR?QaE:cN,l@q6cgk6<iV=QcN#<T~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1015.01 531.492 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+J#R!HnIQjI#7fj;75^*N:T_`Cn^s&<>lL([pb_U4^1OBA9StDXIT:_aJT:_bUa1l[=5Sj~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1133.13 531.492 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+:#QR0jINW&d!"tC/c:1tDAa8n8i'cF$e]cf3+u6L)\pJ&7_P65VkND$kkND$kkPt0]"dCDO
~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1015.01 538.063 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/aabk^I'L`!$Il_=s38qkk+UFf>E9"fY5fF=jUeo/#a\-jAeN4jlMQ2"F%k?.QmJB)jZ60D]_iQ.#
kP6b<kk**Fr650_r\+aTe!+G>j8NI(niVu-aL5qS;$92[XFD51Z7M1bEEuYtF\riMJ`F8p-'\CGgZEda
lT.a=htJ_GdPMCFhZj3#9)lWobHc4qLP\jDo/oF6KrV0*8gZpi5:]FVe@$s3N!Qf+:laR<QdGV,!EV6*
MP@m_8;ZC%ILm-bpV.nk#lJGd1f[O!#`JYCH-:\,?mse3.HiN,oOQhO^J`?"Y[6l^5D-d[r1,4=1`90
~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1047.01 538.063 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIS.IX!B<=G3u^agn`fUg&X(XR^a:U@$asIKG$tn^P18Op50,(;~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1133.13 538.063 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0L3=:C8'SYNEmjEu"U+"_D(4mZ+6lQM(:n3=%@-Zqb,c#_C!e)cb^"_oma)Q\R.#MJ:<Y,CZT(dZJ
D;0\nOCs!mBDnIs<E6GD3t0$1pN`?s,Y?HAa)Rh%.a)iL#%F4:JiJdWA_AaGf6*9&WU"jM7q,gb-&Nm!
7pOYgN8seaR\ig.bk&L94/K-nV]IOMBpsj)SeoFe;%sjs>usW<XAd2LF3K6Z&^RbaD;/cnLuZ;L^#4DG
`TENkQQqOPl,Q/7$==CuWiE:Kf6+SCET6OBh'l$WYDAZF?Btc$Hk_A/b')DJ+-d^u@K,R!IS:1I~>
Q
.600000 .800000 1.00000 RG
newpath
1028.01 517.492 m
1028.01 546.063 l
1028.01 548.824 1030.25 551.063 1033.01 551.063  c
1141.13 551.063 l
1143.89 551.063 1146.13 548.824 1146.13 546.063  c
1146.13 517.492 l
1146.13 514.731 1143.89 512.492 1141.13 512.492  c
1033.01 512.492 l
1030.25 512.492 1028.01 514.731 1028.01 517.492  c
h
f
0.00000 0.00000 0.00000 RG
.501961 .501961 .501961 RG
0 J
1.45000 M
newpath
1028.01 517.492 m
1028.01 546.063 l
1028.01 548.824 1030.25 551.063 1033.01 551.063  c
1141.13 551.063 l
1143.89 551.063 1146.13 548.824 1146.13 546.063  c
1146.13 517.492 l
1146.13 514.731 1143.89 512.492 1141.13 512.492  c
1033.01 512.492 l
1030.25 512.492 1028.01 514.731 1028.01 517.492  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [1028.0087890625 512.4924926757812 1032.754150390625 541.4417114257812]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
1030.51 522.492 m
1030.51 517.492 1033.01 514.992 1038.01 514.992  c
1094.79 514.992 l
1099.79 514.992 1102.29 517.492 1102.29 522.492  c
1102.29 527.492 1092.82 531.802 1073.90 535.421  c
1054.97 539.039 1043.01 540.849 1038.01 540.849  c
1033.01 540.849 1030.51 538.349 1030.51 533.349  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1067.16 535.468 m
1067.16 539.531 l
1065.89 539.531 l
1065.89 528.968 l
1067.16 528.968 l
1067.16 530.124 l
1067.43 529.676 1067.76 529.341 1068.17 529.117  c
1068.57 528.893 1069.05 528.781 1069.61 528.781  c
1070.54 528.781 1071.29 529.150 1071.88 529.890  c
1072.46 530.630 1072.75 531.598 1072.75 532.796  c
1072.75 534.005 1072.46 534.979 1071.88 535.718  c
1071.29 536.458 1070.54 536.828 1069.61 536.828  c
1069.05 536.828 1068.57 536.716 1068.17 536.492  c
1067.76 536.268 1067.43 535.926 1067.16 535.468  c
h
1071.44 532.796 m
1071.44 531.880 1071.25 531.158 1070.87 530.632  c
1070.49 530.106 1069.96 529.843 1069.30 529.843  c
1068.63 529.843 1068.11 530.106 1067.73 530.632  c
1067.35 531.158 1067.16 531.880 1067.16 532.796  c
1067.16 533.723 1067.35 534.450 1067.73 534.976  c
1068.11 535.502 1068.63 535.765 1069.30 535.765  c
1069.96 535.765 1070.49 535.502 1070.87 534.976  c
1071.25 534.450 1071.44 533.723 1071.44 532.796  c
h
1078.31 532.781 m
1077.30 532.781 1076.60 532.895 1076.20 533.124  c
1075.80 533.354 1075.61 533.749 1075.61 534.312  c
1075.61 534.760 1075.76 535.114 1076.05 535.374  c
1076.35 535.635 1076.75 535.765 1077.25 535.765  c
1077.95 535.765 1078.51 535.518 1078.93 535.023  c
1079.35 534.528 1079.56 533.874 1079.56 533.062  c
1079.56 532.781 l
1078.31 532.781 l
h
1080.83 532.249 m
1080.83 536.624 l
1079.56 536.624 l
1079.56 535.468 l
1079.28 535.926 1078.92 536.268 1078.49 536.492  c
1078.06 536.716 1077.53 536.828 1076.92 536.828  c
1076.14 536.828 1075.52 536.606 1075.05 536.163  c
1074.59 535.721 1074.36 535.130 1074.36 534.390  c
1074.36 533.536 1074.65 532.890 1075.22 532.453  c
1075.80 532.015 1076.66 531.796 1077.79 531.796  c
1079.56 531.796 l
1079.56 531.671 l
1079.56 531.088 1079.37 530.637 1078.99 530.320  c
1078.61 530.002 1078.08 529.843 1077.39 529.843  c
1076.95 529.843 1076.52 529.898 1076.11 530.007  c
1075.69 530.117 1075.29 530.275 1074.92 530.484  c
1074.92 529.312 l
1075.38 529.135 1075.82 529.002 1076.26 528.913  c
1076.69 528.825 1077.11 528.781 1077.51 528.781  c
1078.63 528.781 1079.46 529.067 1080.01 529.640  c
1080.55 530.213 1080.83 531.083 1080.83 532.249  c
h
1087.84 530.140 m
1087.71 530.057 1087.56 529.997 1087.39 529.960  c
1087.22 529.924 1087.04 529.906 1086.84 529.906  c
1086.12 529.906 1085.57 530.137 1085.19 530.601  c
1084.81 531.064 1084.62 531.729 1084.62 532.593  c
1084.62 536.624 l
1083.36 536.624 l
1083.36 528.968 l
1084.62 528.968 l
1084.62 530.156 l
1084.89 529.687 1085.24 529.341 1085.66 529.117  c
1086.08 528.893 1086.60 528.781 1087.20 528.781  c
1087.30 528.781 1087.39 528.786 1087.50 528.796  c
1087.60 528.807 1087.72 528.828 1087.84 528.859  c
1087.84 530.140 l
h
1094.05 529.187 m
1094.05 530.390 l
1093.70 530.203 1093.33 530.064 1092.94 529.976  c
1092.56 529.887 1092.16 529.843 1091.75 529.843  c
1091.13 529.843 1090.66 529.937 1090.35 530.124  c
1090.04 530.312 1089.88 530.598 1089.88 530.984  c
1089.88 531.275 1089.99 531.505 1090.22 531.671  c
1090.44 531.838 1090.89 531.994 1091.57 532.140  c
1091.99 532.249 l
1092.88 532.437 1093.52 532.705 1093.89 533.054  c
1094.27 533.403 1094.46 533.890 1094.46 534.515  c
1094.46 535.223 1094.18 535.786 1093.61 536.203  c
1093.05 536.619 1092.28 536.828 1091.30 536.828  c
1090.88 536.828 1090.45 536.786 1090.01 536.703  c
1089.57 536.619 1089.10 536.499 1088.61 536.343  c
1088.61 535.046 l
1089.07 535.286 1089.53 535.466 1089.98 535.585  c
1090.43 535.705 1090.88 535.765 1091.32 535.765  c
1091.91 535.765 1092.37 535.663 1092.68 535.460  c
1093.00 535.257 1093.16 534.973 1093.16 534.609  c
1093.16 534.265 1093.05 534.002 1092.82 533.820  c
1092.59 533.637 1092.08 533.463 1091.30 533.296  c
1090.86 533.187 l
1090.09 533.031 1089.53 532.781 1089.18 532.437  c
1088.84 532.093 1088.66 531.630 1088.66 531.046  c
1088.66 530.317 1088.92 529.757 1089.43 529.367  c
1089.94 528.976 1090.66 528.781 1091.60 528.781  c
1092.07 528.781 1092.51 528.814 1092.92 528.882  c
1093.33 528.950 1093.71 529.051 1094.05 529.187  c
h
1103.02 532.484 m
1103.02 533.093 l
1097.22 533.093 l
1097.28 533.958 1097.55 534.617 1098.01 535.070  c
1098.47 535.523 1099.12 535.749 1099.95 535.749  c
1100.44 535.749 1100.92 535.692 1101.37 535.578  c
1101.82 535.463 1102.27 535.286 1102.72 535.046  c
1102.72 536.234 l
1102.26 536.421 1101.80 536.567 1101.32 536.671  c
1100.85 536.775 1100.37 536.828 1099.89 536.828  c
1098.66 536.828 1097.69 536.471 1096.98 535.757  c
1096.26 535.044 1095.91 534.083 1095.91 532.874  c
1095.91 531.614 1096.25 530.617 1096.92 529.882  c
1097.60 529.148 1098.52 528.781 1099.67 528.781  c
1100.70 528.781 1101.52 529.111 1102.12 529.773  c
1102.72 530.434 1103.02 531.338 1103.02 532.484  c
h
1101.75 532.109 m
1101.74 531.421 1101.55 530.872 1101.17 530.460  c
1100.80 530.049 1100.30 529.843 1099.69 529.843  c
1098.98 529.843 1098.42 530.044 1097.99 530.445  c
1097.57 530.846 1097.33 531.406 1097.27 532.124  c
1101.75 532.109 l
h
1109.51 530.140 m
1109.37 530.057 1109.22 529.997 1109.05 529.960  c
1108.89 529.924 1108.70 529.906 1108.51 529.906  c
1107.79 529.906 1107.24 530.137 1106.86 530.601  c
1106.48 531.064 1106.29 531.729 1106.29 532.593  c
1106.29 536.624 l
1105.02 536.624 l
1105.02 528.968 l
1106.29 528.968 l
1106.29 530.156 l
1106.56 529.687 1106.90 529.341 1107.33 529.117  c
1107.75 528.893 1108.26 528.781 1108.86 528.781  c
1108.96 528.781 1109.06 528.786 1109.16 528.796  c
1109.27 528.807 1109.38 528.828 1109.51 528.859  c
1109.51 530.140 l
h
f
2 J
10.0000 M
Q
q
q
[ 32.0000 0.00000 0.00000 32.0000 1189.24 499.492 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/ab6ii/'F*IpI?MN;#d.(AKcm1a)].T>'_6ii2RHP8KbhLm]u0XDB:]8m&H7a"!f+241l^Pjg>[W&
m4\rshm[IW1sL*,?#lB*_T[d8<>@rbA_H+eI=Y\caLeUUlPaW/VK!SG;&"cDD&II\ZVZ[P.a10iGb4*0
Y&2qFA^obnS6>DF8+-7<hcc=WRc\/r76es/cfWG<3HE>u@Hb:O?:B8^Q7pE:8J5X/*4_q\V_-EsS0H;%
K0##[4QW(']mfC2CZ.PsQ@JpgT9Ec4nV^cP.fKrJ+XG,~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1221.24 499.492 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIRr,D.ffk\?mD@Fn`fUgR?H([_]J0]%W'#a[U9b,,cO?92d\b8~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1307.36 499.492 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/bb6iht'Li'%J!(Kk&Y,X&$A.=@*@MUc:s!@=D47@m$(TfD!IM)t^3?.d$jP`/hDBE=^BfeY3).jc
d;t;YY+)<Q\o&>hLpef$^Nk2uOsJ5VU+"rOAZOh!LuUIdk64-_71hpf<Gb`@(K"14f6+tbCtj[JFeIsq
*chna08iAa,g3Kf-kKOI"\"lW=9K@pq<'U<5nHHs(/<9),*(]h/?q)&6mi&?5_0]JBng&`k;cQcSqrQU
E?&/T!k.TH+"(gXp:pDccXR?QaE:cN,l@q6cgk6<iV=QcN#<T~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1189.24 531.492 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+J#R!HnIQjI#7fj;75^*N:T_`Cn^s&<>lL([pb_U4^1OBA9StDXIT:_aJT:_bUa1l[=5Sj~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1307.36 531.492 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+:#QR0jINW&d!"tC/c:1tDAa8n8i'cF$e]cf3+u6L)\pJ&7_P65VkND$kkND$kkPt0]"dCDO
~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1189.24 538.063 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/aabk^I'L`!$Il_=s38qkk+UFf>E9"fY5fF=jUeo/#a\-jAeN4jlMQ2"F%k?.QmJB)jZ60D]_iQ.#
kP6b<kk**Fr650_r\+aTe!+G>j8NI(niVu-aL5qS;$92[XFD51Z7M1bEEuYtF\riMJ`F8p-'\CGgZEda
lT.a=htJ_GdPMCFhZj3#9)lWobHc4qLP\jDo/oF6KrV0*8gZpi5:]FVe@$s3N!Qf+:laR<QdGV,!EV6*
MP@m_8;ZC%ILm-bpV.nk#lJGd1f[O!#`JYCH-:\,?mse3.HiN,oOQhO^J`?"Y[6l^5D-d[r1,4=1`90
~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1221.24 538.063 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIS.IX!B<=G3u^agn`fUg&X(XR^a:U@$asIKG$tn^P18Op50,(;~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1307.36 538.063 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0L3=:C8'SYNEmjEu"U+"_D(4mZ+6lQM(:n3=%@-Zqb,c#_C!e)cb^"_oma)Q\R.#MJ:<Y,CZT(dZJ
D;0\nOCs!mBDnIs<E6GD3t0$1pN`?s,Y?HAa)Rh%.a)iL#%F4:JiJdWA_AaGf6*9&WU"jM7q,gb-&Nm!
7pOYgN8seaR\ig.bk&L94/K-nV]IOMBpsj)SeoFe;%sjs>usW<XAd2LF3K6Z&^RbaD;/cnLuZ;L^#4DG
`TENkQQqOPl,Q/7$==CuWiE:Kf6+SCET6OBh'l$WYDAZF?Btc$Hk_A/b')DJ+-d^u@K,R!IS:1I~>
Q
.874510 .870588 .870588 RG
newpath
1202.24 517.492 m
1202.24 546.063 l
1202.24 548.824 1204.48 551.063 1207.24 551.063  c
1315.36 551.063 l
1318.13 551.063 1320.36 548.824 1320.36 546.063  c
1320.36 517.492 l
1320.36 514.731 1318.13 512.492 1315.36 512.492  c
1207.24 512.492 l
1204.48 512.492 1202.24 514.731 1202.24 517.492  c
h
f
0.00000 0.00000 0.00000 RG
.501961 .501961 .501961 RG
0 J
1.45000 M
newpath
1202.24 517.492 m
1202.24 546.063 l
1202.24 548.824 1204.48 551.063 1207.24 551.063  c
1315.36 551.063 l
1318.13 551.063 1320.36 548.824 1320.36 546.063  c
1320.36 517.492 l
1320.36 514.731 1318.13 512.492 1315.36 512.492  c
1207.24 512.492 l
1204.48 512.492 1202.24 514.731 1202.24 517.492  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [1202.2445068359375 512.4924926757812 1206.9898681640625 541.4417114257812]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
1204.74 522.492 m
1204.74 517.492 1207.24 514.992 1212.24 514.992  c
1269.02 514.992 l
1274.02 514.992 1276.52 517.492 1276.52 522.492  c
1276.52 527.492 1267.06 531.802 1248.13 535.421  c
1229.21 539.039 1217.24 540.849 1212.24 540.849  c
1207.24 540.849 1204.74 538.349 1204.74 533.349  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1231.93 528.968 m
1233.20 528.968 l
1233.20 536.624 l
1231.93 536.624 l
1231.93 528.968 l
h
1231.93 525.984 m
1233.20 525.984 l
1233.20 527.578 l
1231.93 527.578 l
1231.93 525.984 l
h
1242.20 531.999 m
1242.20 536.624 l
1240.93 536.624 l
1240.93 532.046 l
1240.93 531.317 1240.79 530.773 1240.51 530.413  c
1240.23 530.054 1239.81 529.874 1239.25 529.874  c
1238.57 529.874 1238.03 530.091 1237.64 530.523  c
1237.24 530.955 1237.04 531.546 1237.04 532.296  c
1237.04 536.624 l
1235.78 536.624 l
1235.78 528.968 l
1237.04 528.968 l
1237.04 530.156 l
1237.34 529.697 1237.70 529.354 1238.11 529.124  c
1238.52 528.895 1239.00 528.781 1239.53 528.781  c
1240.40 528.781 1241.07 529.054 1241.52 529.601  c
1241.97 530.148 1242.20 530.947 1242.20 531.999  c
h
1245.95 526.796 m
1245.95 528.968 l
1248.54 528.968 l
1248.54 529.953 l
1245.95 529.953 l
1245.95 534.109 l
1245.95 534.723 1246.03 535.122 1246.20 535.304  c
1246.38 535.486 1246.72 535.578 1247.24 535.578  c
1248.54 535.578 l
1248.54 536.624 l
1247.24 536.624 l
1246.27 536.624 1245.61 536.442 1245.24 536.078  c
1244.87 535.713 1244.68 535.057 1244.68 534.109  c
1244.68 529.953 l
1243.76 529.953 l
1243.76 528.968 l
1244.68 528.968 l
1244.68 526.796 l
1245.95 526.796 l
h
1256.75 532.484 m
1256.75 533.093 l
1250.95 533.093 l
1251.01 533.958 1251.28 534.617 1251.74 535.070  c
1252.20 535.523 1252.85 535.749 1253.69 535.749  c
1254.18 535.749 1254.65 535.692 1255.10 535.578  c
1255.55 535.463 1256.00 535.286 1256.45 535.046  c
1256.45 536.234 l
1255.99 536.421 1255.53 536.567 1255.05 536.671  c
1254.58 536.775 1254.10 536.828 1253.62 536.828  c
1252.39 536.828 1251.42 536.471 1250.71 535.757  c
1250.00 535.044 1249.64 534.083 1249.64 532.874  c
1249.64 531.614 1249.98 530.617 1250.65 529.882  c
1251.33 529.148 1252.25 528.781 1253.40 528.781  c
1254.44 528.781 1255.25 529.111 1255.85 529.773  c
1256.45 530.434 1256.75 531.338 1256.75 532.484  c
h
1255.48 532.109 m
1255.47 531.421 1255.28 530.872 1254.90 530.460  c
1254.53 530.049 1254.03 529.843 1253.42 529.843  c
1252.71 529.843 1252.15 530.044 1251.72 530.445  c
1251.30 530.846 1251.06 531.406 1251.00 532.124  c
1255.48 532.109 l
h
1263.24 530.140 m
1263.10 530.057 1262.95 529.997 1262.78 529.960  c
1262.62 529.924 1262.43 529.906 1262.24 529.906  c
1261.52 529.906 1260.97 530.137 1260.59 530.601  c
1260.21 531.064 1260.02 531.729 1260.02 532.593  c
1260.02 536.624 l
1258.75 536.624 l
1258.75 528.968 l
1260.02 528.968 l
1260.02 530.156 l
1260.29 529.687 1260.64 529.341 1261.06 529.117  c
1261.48 528.893 1261.99 528.781 1262.60 528.781  c
1262.69 528.781 1262.79 528.786 1262.89 528.796  c
1263.00 528.807 1263.11 528.828 1263.24 528.859  c
1263.24 530.140 l
h
1265.77 535.468 m
1265.77 539.531 l
1264.51 539.531 l
1264.51 528.968 l
1265.77 528.968 l
1265.77 530.124 l
1266.04 529.676 1266.38 529.341 1266.78 529.117  c
1267.18 528.893 1267.66 528.781 1268.23 528.781  c
1269.15 528.781 1269.91 529.150 1270.49 529.890  c
1271.08 530.630 1271.37 531.598 1271.37 532.796  c
1271.37 534.005 1271.08 534.979 1270.49 535.718  c
1269.91 536.458 1269.15 536.828 1268.23 536.828  c
1267.66 536.828 1267.18 536.716 1266.78 536.492  c
1266.38 536.268 1266.04 535.926 1265.77 535.468  c
h
1270.05 532.796 m
1270.05 531.880 1269.86 531.158 1269.48 530.632  c
1269.10 530.106 1268.58 529.843 1267.91 529.843  c
1267.25 529.843 1266.72 530.106 1266.34 530.632  c
1265.96 531.158 1265.77 531.880 1265.77 532.796  c
1265.77 533.723 1265.96 534.450 1266.34 534.976  c
1266.72 535.502 1267.25 535.765 1267.91 535.765  c
1268.58 535.765 1269.10 535.502 1269.48 534.976  c
1269.86 534.450 1270.05 533.723 1270.05 532.796  c
h
1277.88 530.140 m
1277.74 530.057 1277.59 529.997 1277.43 529.960  c
1277.26 529.924 1277.08 529.906 1276.88 529.906  c
1276.16 529.906 1275.61 530.137 1275.23 530.601  c
1274.85 531.064 1274.66 531.729 1274.66 532.593  c
1274.66 536.624 l
1273.39 536.624 l
1273.39 528.968 l
1274.66 528.968 l
1274.66 530.156 l
1274.93 529.687 1275.28 529.341 1275.70 529.117  c
1276.12 528.893 1276.63 528.781 1277.24 528.781  c
1277.33 528.781 1277.43 528.786 1277.54 528.796  c
1277.64 528.807 1277.75 528.828 1277.88 528.859  c
1277.88 530.140 l
h
1285.76 532.484 m
1285.76 533.093 l
1279.96 533.093 l
1280.03 533.958 1280.29 534.617 1280.75 535.070  c
1281.22 535.523 1281.86 535.749 1282.70 535.749  c
1283.19 535.749 1283.66 535.692 1284.11 535.578  c
1284.56 535.463 1285.02 535.286 1285.46 535.046  c
1285.46 536.234 l
1285.00 536.421 1284.54 536.567 1284.06 536.671  c
1283.59 536.775 1283.11 536.828 1282.64 536.828  c
1281.41 536.828 1280.43 536.471 1279.72 535.757  c
1279.01 535.044 1278.65 534.083 1278.65 532.874  c
1278.65 531.614 1278.99 530.617 1279.67 529.882  c
1280.34 529.148 1281.26 528.781 1282.42 528.781  c
1283.45 528.781 1284.26 529.111 1284.86 529.773  c
1285.46 530.434 1285.76 531.338 1285.76 532.484  c
h
1284.49 532.109 m
1284.48 531.421 1284.29 530.872 1283.92 530.460  c
1283.54 530.049 1283.05 529.843 1282.43 529.843  c
1281.72 529.843 1281.16 530.044 1280.74 530.445  c
1280.31 530.846 1280.07 531.406 1280.01 532.124  c
1284.49 532.109 l
h
1289.06 526.796 m
1289.06 528.968 l
1291.65 528.968 l
1291.65 529.953 l
1289.06 529.953 l
1289.06 534.109 l
1289.06 534.723 1289.15 535.122 1289.32 535.304  c
1289.49 535.486 1289.84 535.578 1290.36 535.578  c
1291.65 535.578 l
1291.65 536.624 l
1290.36 536.624 l
1289.39 536.624 1288.72 536.442 1288.35 536.078  c
1287.98 535.713 1287.80 535.057 1287.80 534.109  c
1287.80 529.953 l
1286.87 529.953 l
1286.87 528.968 l
1287.80 528.968 l
1287.80 526.796 l
1289.06 526.796 l
h
f
2 J
10.0000 M
Q
q
q
[ 32.0000 0.00000 0.00000 32.0000 1015.01 568.063 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/ab6ii/'F*IpI?MN;#d.(AKcm1a)].T>'_6ii2RHP8KbhLm]u0XDB:]8m&H7a"!f+241l^Pjg>[W&
m4\rshm[IW1sL*,?#lB*_T[d8<>@rbA_H+eI=Y\caLeUUlPaW/VK!SG;&"cDD&II\ZVZ[P.a10iGb4*0
Y&2qFA^obnS6>DF8+-7<hcc=WRc\/r76es/cfWG<3HE>u@Hb:O?:B8^Q7pE:8J5X/*4_q\V_-EsS0H;%
K0##[4QW(']mfC2CZ.PsQ@JpgT9Ec4nV^cP.fKrJ+XG,~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1047.01 568.063 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIRr,D.ffk\?mD@Fn`fUgR?H([_]J0]%W'#a[U9b,,cO?92d\b8~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1133.13 568.063 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/bb6iht'Li'%J!(Kk&Y,X&$A.=@*@MUc:s!@=D47@m$(TfD!IM)t^3?.d$jP`/hDBE=^BfeY3).jc
d;t;YY+)<Q\o&>hLpef$^Nk2uOsJ5VU+"rOAZOh!LuUIdk64-_71hpf<Gb`@(K"14f6+tbCtj[JFeIsq
*chna08iAa,g3Kf-kKOI"\"lW=9K@pq<'U<5nHHs(/<9),*(]h/?q)&6mi&?5_0]JBng&`k;cQcSqrQU
E?&/T!k.TH+"(gXp:pDccXR?QaE:cN,l@q6cgk6<iV=QcN#<T~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1015.01 600.063 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+J#R!HnIQjI#7fj;75^*N:T_`Cn^s&<>lL([pb_U4^1OBA9StDXIT:_aJT:_bUa1l[=5Sj~>
Q
q
[ 32.0000 0.00000 0.00000 6.57045 1133.13 600.063 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0F0b"+:#QR0jINW&d!"tC/c:1tDAa8n8i'cF$e]cf3+u6L)\pJ&7_P65VkND$kkND$kkPt0]"dCDO
~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1015.01 606.633 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/aabk^I'L`!$Il_=s38qkk+UFf>E9"fY5fF=jUeo/#a\-jAeN4jlMQ2"F%k?.QmJB)jZ60D]_iQ.#
kP6b<kk**Fr650_r\+aTe!+G>j8NI(niVu-aL5qS;$92[XFD51Z7M1bEEuYtF\riMJ`F8p-'\CGgZEda
lT.a=htJ_GdPMCFhZj3#9)lWobHc4qLP\jDo/oF6KrV0*8gZpi5:]FVe@$s3N!Qf+:laR<QdGV,!EV6*
MP@m_8;ZC%ILm-bpV.nk#lJGd1f[O!#`JYCH-:\,?mse3.HiN,oOQhO^J`?"Y[6l^5D-d[r1,4=1`90
~>
Q
q
[ 86.1200 0.00000 0.00000 32.0000 1047.01 606.633 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0;0b"+*$iiTnIS.IX!B<=G3u^agn`fUg&X(XR^a:U@$asIKG$tn^P18Op50,(;~>
Q
q
[ 32.0000 0.00000 0.00000 32.0000 1133.13 606.633 ] concat
<<
/ImageType 1
/Width 32  /Height 32
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [32 0 0 32 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"0L3=:C8'SYNEmjEu"U+"_D(4mZ+6lQM(:n3=%@-Zqb,c#_C!e)cb^"_oma)Q\R.#MJ:<Y,CZT(dZJ
D;0\nOCs!mBDnIs<E6GD3t0$1pN`?s,Y?HAa)Rh%.a)iL#%F4:JiJdWA_AaGf6*9&WU"jM7q,gb-&Nm!
7pOYgN8seaR\ig.bk&L94/K-nV]IOMBpsj)SeoFe;%sjs>usW<XAd2LF3K6Z&^RbaD;/cnLuZ;L^#4DG
`TENkQQqOPl,Q/7$==CuWiE:Kf6+SCET6OBh'l$WYDAZF?Btc$Hk_A/b')DJ+-d^u@K,R!IS:1I~>
Q
.874510 .870588 .870588 RG
newpath
1028.01 586.063 m
1028.01 614.633 l
1028.01 617.395 1030.25 619.633 1033.01 619.633  c
1141.13 619.633 l
1143.89 619.633 1146.13 617.395 1146.13 614.633  c
1146.13 586.063 l
1146.13 583.301 1143.89 581.063 1141.13 581.063  c
1033.01 581.063 l
1030.25 581.063 1028.01 583.301 1028.01 586.063  c
h
f
0.00000 0.00000 0.00000 RG
.501961 .501961 .501961 RG
0 J
1.45000 M
newpath
1028.01 586.063 m
1028.01 614.633 l
1028.01 617.395 1030.25 619.633 1033.01 619.633  c
1141.13 619.633 l
1143.89 619.633 1146.13 617.395 1146.13 614.633  c
1146.13 586.063 l
1146.13 583.301 1143.89 581.063 1141.13 581.063  c
1033.01 581.063 l
1030.25 581.063 1028.01 583.301 1028.01 586.063  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [1028.0087890625 581.0629272460938 1032.754150390625 610.0121459960938]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [1.0 1.0 1.0]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
1030.51 591.063 m
1030.51 586.063 1033.01 583.563 1038.01 583.563  c
1094.79 583.563 l
1099.79 583.563 1102.29 586.063 1102.29 591.063  c
1102.29 596.063 1092.82 600.372 1073.90 603.991  c
1054.97 607.610 1043.01 609.419 1038.01 609.419  c
1033.01 609.419 1030.51 606.919 1030.51 601.919  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1056.91 601.054 m
1056.91 601.664 l
1051.11 601.664 l
1051.17 602.528 1051.44 603.187 1051.90 603.640  c
1052.36 604.093 1053.01 604.320 1053.85 604.320  c
1054.34 604.320 1054.81 604.263 1055.26 604.148  c
1055.71 604.033 1056.16 603.856 1056.61 603.617  c
1056.61 604.804 l
1056.15 604.992 1055.69 605.138 1055.21 605.242  c
1054.74 605.346 1054.26 605.398 1053.78 605.398  c
1052.55 605.398 1051.58 605.041 1050.87 604.328  c
1050.16 603.614 1049.80 602.653 1049.80 601.445  c
1049.80 600.184 1050.14 599.187 1050.81 598.453  c
1051.49 597.718 1052.41 597.351 1053.56 597.351  c
1054.60 597.351 1055.41 597.682 1056.01 598.343  c
1056.61 599.005 1056.91 599.908 1056.91 601.054  c
h
1055.64 600.679 m
1055.63 599.992 1055.44 599.442 1055.06 599.031  c
1054.69 598.619 1054.20 598.414 1053.58 598.414  c
1052.87 598.414 1052.31 598.614 1051.89 599.015  c
1051.46 599.416 1051.22 599.976 1051.16 600.695  c
1055.64 600.679 l
h
1065.33 597.539 m
1062.57 601.257 l
1065.47 605.195 l
1063.99 605.195 l
1061.76 602.179 l
1059.54 605.195 l
1058.05 605.195 l
1061.02 601.195 l
1058.30 597.539 l
1059.79 597.539 l
1061.82 600.273 l
1063.85 597.539 l
1065.33 597.539 l
h
1068.46 604.039 m
1068.46 608.101 l
1067.20 608.101 l
1067.20 597.539 l
1068.46 597.539 l
1068.46 598.695 l
1068.73 598.247 1069.07 597.911 1069.47 597.687  c
1069.87 597.463 1070.35 597.351 1070.92 597.351  c
1071.84 597.351 1072.60 597.721 1073.18 598.460  c
1073.77 599.200 1074.06 600.169 1074.06 601.367  c
1074.06 602.575 1073.77 603.549 1073.18 604.289  c
1072.60 605.028 1071.84 605.398 1070.92 605.398  c
1070.35 605.398 1069.87 605.286 1069.47 605.062  c
1069.07 604.838 1068.73 604.497 1068.46 604.039  c
h
1072.74 601.367 m
1072.74 600.450 1072.55 599.729 1072.17 599.203  c
1071.79 598.677 1071.27 598.414 1070.60 598.414  c
1069.94 598.414 1069.41 598.677 1069.03 599.203  c
1068.65 599.729 1068.46 600.450 1068.46 601.367  c
1068.46 602.294 1068.65 603.020 1069.03 603.546  c
1069.41 604.072 1069.94 604.335 1070.60 604.335  c
1071.27 604.335 1071.79 604.072 1072.17 603.546  c
1072.55 603.020 1072.74 602.294 1072.74 601.367  c
h
1080.57 598.710 m
1080.43 598.627 1080.28 598.567 1080.12 598.531  c
1079.95 598.494 1079.77 598.476 1079.57 598.476  c
1078.85 598.476 1078.30 598.708 1077.92 599.171  c
1077.54 599.635 1077.35 600.299 1077.35 601.164  c
1077.35 605.195 l
1076.08 605.195 l
1076.08 597.539 l
1077.35 597.539 l
1077.35 598.726 l
1077.62 598.257 1077.97 597.911 1078.39 597.687  c
1078.81 597.463 1079.32 597.351 1079.93 597.351  c
1080.02 597.351 1080.12 597.356 1080.22 597.367  c
1080.33 597.377 1080.44 597.398 1080.57 597.429  c
1080.57 598.710 l
h
1088.45 601.054 m
1088.45 601.664 l
1082.65 601.664 l
1082.72 602.528 1082.98 603.187 1083.44 603.640  c
1083.91 604.093 1084.55 604.320 1085.39 604.320  c
1085.88 604.320 1086.35 604.263 1086.80 604.148  c
1087.25 604.033 1087.70 603.856 1088.15 603.617  c
1088.15 604.804 l
1087.69 604.992 1087.23 605.138 1086.75 605.242  c
1086.28 605.346 1085.80 605.398 1085.32 605.398  c
1084.10 605.398 1083.12 605.041 1082.41 604.328  c
1081.70 603.614 1081.34 602.653 1081.34 601.445  c
1081.34 600.184 1081.68 599.187 1082.36 598.453  c
1083.03 597.718 1083.95 597.351 1085.11 597.351  c
1086.14 597.351 1086.95 597.682 1087.55 598.343  c
1088.15 599.005 1088.45 599.908 1088.45 601.054  c
h
1087.18 600.679 m
1087.17 599.992 1086.98 599.442 1086.61 599.031  c
1086.23 598.619 1085.74 598.414 1085.12 598.414  c
1084.41 598.414 1083.85 598.614 1083.43 599.015  c
1083.00 599.416 1082.76 599.976 1082.70 600.695  c
1087.18 600.679 l
h
1095.39 597.757 m
1095.39 598.960 l
1095.04 598.773 1094.67 598.635 1094.28 598.546  c
1093.90 598.458 1093.50 598.414 1093.09 598.414  c
1092.47 598.414 1092.00 598.507 1091.69 598.695  c
1091.38 598.882 1091.22 599.169 1091.22 599.554  c
1091.22 599.846 1091.33 600.075 1091.56 600.242  c
1091.78 600.408 1092.23 600.565 1092.91 600.710  c
1093.33 600.820 l
1094.22 601.007 1094.86 601.276 1095.23 601.625  c
1095.61 601.973 1095.80 602.460 1095.80 603.085  c
1095.80 603.794 1095.52 604.356 1094.95 604.773  c
1094.39 605.190 1093.62 605.398 1092.64 605.398  c
1092.22 605.398 1091.79 605.356 1091.35 605.273  c
1090.91 605.190 1090.44 605.070 1089.95 604.914  c
1089.95 603.617 l
1090.41 603.856 1090.87 604.036 1091.32 604.156  c
1091.77 604.276 1092.22 604.335 1092.66 604.335  c
1093.25 604.335 1093.71 604.234 1094.02 604.031  c
1094.34 603.828 1094.50 603.544 1094.50 603.179  c
1094.50 602.835 1094.39 602.572 1094.16 602.390  c
1093.93 602.208 1093.42 602.033 1092.64 601.867  c
1092.20 601.757 l
1091.43 601.601 1090.87 601.351 1090.52 601.007  c
1090.17 600.664 1090.00 600.200 1090.00 599.617  c
1090.00 598.888 1090.26 598.328 1090.77 597.937  c
1091.28 597.546 1092.00 597.351 1092.94 597.351  c
1093.41 597.351 1093.85 597.385 1094.26 597.453  c
1094.67 597.520 1095.05 597.622 1095.39 597.757  c
h
1102.68 597.757 m
1102.68 598.960 l
1102.33 598.773 1101.96 598.635 1101.58 598.546  c
1101.19 598.458 1100.79 598.414 1100.39 598.414  c
1099.76 598.414 1099.29 598.507 1098.98 598.695  c
1098.67 598.882 1098.51 599.169 1098.51 599.554  c
1098.51 599.846 1098.63 600.075 1098.85 600.242  c
1099.07 600.408 1099.52 600.565 1100.20 600.710  c
1100.62 600.820 l
1101.52 601.007 1102.15 601.276 1102.53 601.625  c
1102.90 601.973 1103.09 602.460 1103.09 603.085  c
1103.09 603.794 1102.81 604.356 1102.25 604.773  c
1101.68 605.190 1100.91 605.398 1099.93 605.398  c
1099.52 605.398 1099.09 605.356 1098.65 605.273  c
1098.20 605.190 1097.74 605.070 1097.25 604.914  c
1097.25 603.617 l
1097.71 603.856 1098.16 604.036 1098.61 604.156  c
1099.07 604.276 1099.51 604.335 1099.95 604.335  c
1100.54 604.335 1101.00 604.234 1101.32 604.031  c
1101.64 603.828 1101.79 603.544 1101.79 603.179  c
1101.79 602.835 1101.68 602.572 1101.45 602.390  c
1101.22 602.208 1100.72 602.033 1099.93 601.867  c
1099.50 601.757 l
1098.73 601.601 1098.17 601.351 1097.82 601.007  c
1097.47 600.664 1097.29 600.200 1097.29 599.617  c
1097.29 598.888 1097.55 598.328 1098.06 597.937  c
1098.57 597.546 1099.29 597.351 1100.23 597.351  c
1100.70 597.351 1101.14 597.385 1101.55 597.453  c
1101.96 597.520 1102.34 597.622 1102.68 597.757  c
h
1105.09 597.539 m
1106.35 597.539 l
1106.35 605.195 l
1105.09 605.195 l
1105.09 597.539 l
h
1105.09 594.554 m
1106.35 594.554 l
1106.35 596.148 l
1105.09 596.148 l
1105.09 594.554 l
h
1111.95 598.414 m
1111.28 598.414 1110.75 598.677 1110.35 599.203  c
1109.96 599.729 1109.76 600.450 1109.76 601.367  c
1109.76 602.283 1109.95 603.005 1110.35 603.531  c
1110.74 604.057 1111.27 604.320 1111.95 604.320  c
1112.62 604.320 1113.16 604.057 1113.55 603.531  c
1113.94 603.005 1114.13 602.283 1114.13 601.367  c
1114.13 600.460 1113.94 599.742 1113.55 599.210  c
1113.16 598.679 1112.62 598.414 1111.95 598.414  c
h
1111.95 597.351 m
1113.04 597.351 1113.90 597.708 1114.52 598.421  c
1115.15 599.135 1115.46 600.117 1115.46 601.367  c
1115.46 602.627 1115.15 603.614 1114.52 604.328  c
1113.90 605.041 1113.04 605.398 1111.95 605.398  c
1110.85 605.398 1109.99 605.041 1109.37 604.328  c
1108.74 603.614 1108.43 602.627 1108.43 601.367  c
1108.43 600.117 1108.74 599.135 1109.37 598.421  c
1109.99 597.708 1110.85 597.351 1111.95 597.351  c
h
1123.92 600.570 m
1123.92 605.195 l
1122.65 605.195 l
1122.65 600.617 l
1122.65 599.888 1122.51 599.343 1122.23 598.984  c
1121.95 598.625 1121.53 598.445 1120.97 598.445  c
1120.29 598.445 1119.75 598.661 1119.36 599.093  c
1118.96 599.526 1118.76 600.117 1118.76 600.867  c
1118.76 605.195 l
1117.50 605.195 l
1117.50 597.539 l
1118.76 597.539 l
1118.76 598.726 l
1119.06 598.268 1119.42 597.924 1119.83 597.695  c
1120.24 597.466 1120.72 597.351 1121.25 597.351  c
1122.12 597.351 1122.79 597.625 1123.24 598.171  c
1123.69 598.718 1123.92 599.518 1123.92 600.570  c
h
f
2 J
10.0000 M
Q
.501961 .501961 .501961 RG
1 J
1.45000 M
[ 0.00000 4.00000 ] 2.00000 d
newpath
971.918 541.171 m
1020.00 541.171 l
S
newpath
1028.00 541.171 m
1016.00 536.171 l
1019.00 541.171 l
1016.00 546.171 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1028.00 531.778 m
979.875 531.778 l
S
newpath
971.875 531.778 m
983.875 536.778 l
980.875 531.778 l
983.875 526.778 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
1146.15 531.778 m
1194.24 531.778 l
S
newpath
1202.24 531.778 m
1190.24 526.778 l
1193.24 531.778 l
1190.24 536.778 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
1087.07 551.068 m
1087.07 573.093 l
S
newpath
1087.07 581.093 m
1092.07 569.093 l
1087.07 572.093 l
1082.07 569.093 l
h
f
2 J
10.0000 M
.501961 .501961 .501961 RG
1 J
1.45000 M
[ 0.00000 4.00000 ] 2.00000 d
newpath
1100.87 581.039 m
1100.87 559.027 l
S
newpath
1100.87 551.027 m
1095.87 563.027 l
1100.87 560.027 l
1105.87 563.027 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
1027.98 600.348 m
912.833 600.348 l
912.833 559.030 l
S
newpath
912.833 551.030 m
907.833 563.030 l
912.833 560.030 l
917.833 563.030 l
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
